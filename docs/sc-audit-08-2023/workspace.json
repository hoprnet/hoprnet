{
  "id" : 1,
  "name" : "HOPR Smart Contracts Audit 08/2023",
  "description" : "Description",
  "lastModifiedDate" : "2023-07-26T19:08:35Z",
  "properties" : {
    "structurizr.dsl" : "d29ya3NwYWNlICJIT1BSIFNtYXJ0IENvbnRyYWN0cyBBdWRpdCAwOC8yMDIzIiB7CiAgIWRvY3MgZG9jcwoKICAgIG1vZGVsIHsKICAgICAgICB1c2VyID0gcGVyc29uICJVc2VyIgogICAgICAgIHNvZnR3YXJlU3lzdGVtID0gc29mdHdhcmVTeXN0ZW0gIlNvZnR3YXJlIFN5c3RlbSIKCiAgICAgICAgdXNlciAtPiBzb2Z0d2FyZVN5c3RlbSAiVXNlcyIKICAgIH0KCiAgICB2aWV3cyB7CiAgICAgICAgc3lzdGVtQ29udGV4dCBzb2Z0d2FyZVN5c3RlbSAiRGlhZ3JhbTEiIHsKICAgICAgICAgICAgaW5jbHVkZSAqCiAgICAgICAgICAgIGF1dG9MYXlvdXQKICAgICAgICB9CiAgICB9Cgp9Cg=="
  },
  "configuration" : { },
  "model" : {
    "people" : [ {
      "id" : "1",
      "tags" : "Element,Person",
      "properties" : {
        "structurizr.dsl.identifier" : "user"
      },
      "name" : "User",
      "relationships" : [ {
        "id" : "3",
        "tags" : "Relationship",
        "properties" : {
          "structurizr.dsl.identifier" : "64e635eb-458b-4674-86ed-04b6c4bfcbb6"
        },
        "sourceId" : "1",
        "destinationId" : "2",
        "description" : "Uses"
      } ],
      "location" : "Unspecified"
    } ],
    "softwareSystems" : [ {
      "id" : "2",
      "tags" : "Element,Software System",
      "properties" : {
        "structurizr.dsl.identifier" : "softwaresystem"
      },
      "name" : "Software System",
      "location" : "Unspecified",
      "documentation" : { }
    } ]
  },
  "documentation" : {
    "sections" : [ {
      "content" : "## Introduction\n\nThis documents provides an overview of the HOPR smart contracts as the basis for\nthe smart contracts audit in 08/2023. It describes the relevant threat model,\nsets the scope, gives a high-level description of the relevant smart contracts\nand their relation and ABIs. Moreover, it provides pointers to the source code\nand steps on how to run tests and other operations on it.\n\n## Scope\n\n---\n**FIXME:**\n\nPin final version prior to submitting for audit.\n\n---\n\nAll HOPR smart contracts can be found in the hoprnet monorepo:\n\n```\nhttps://github.com/hoprnet/hoprnet\n```\n\nThe Git commit hash under audit is:\n\n```\n37ce7f762f982f789e01dfb2fbf2b987c3efa421\n```\n\nAll smart contracts can be found within the folder:\n\n```\npackages/ethereum/contracts/src\n```\n\nFor convenience, the following link points to the source folder using the\ncorrect version:\n\n```\nhttps://github.com/hoprnet/hoprnet/tree/37ce7f762f982f789e01dfb2fbf2b987c3efa421/packages/ethereum/contracts/src\n```\n\n\nSpecifically, the following contracts are within the scope of the audit:\n\n```\n├── Channels.sol\n├── Crypto.sol\n├── interfaces\n│   ├── IAvatar.sol\n│   ├── INetworkRegistryRequirement.sol\n│   ├── INodeManagementModule.sol\n│   └── INodeSafeRegistry.sol\n├── node-stake\n│   ├── NodeSafeRegistry.sol\n│   ├── NodeStakeFactory.sol\n│   └── permissioned-module\n│       ├── CapabilityPermissions.sol\n│       ├── NodeManagementModule.sol\n│       └── SimplifiedModule.sol\n└── utils\n    ├── EnumerableStringSet.sol\n    ├── EnumerableTargetSet.sol\n    └── TargetUtils.sol\n```\n\n## Concepts\n\ntodo\n\n### Staking\n\ntodo\n\n### Payment Channels\n\ntodo\n\n## Threat Model\n\ntodo\n\n## Contracts\n\nThe following is a short overview of each contract's purpose. Refer to the\ncontract's source code for more documentation.\n\n### CapabilityPermissions.sol\n\n### Channels.sol\n\n### Crypto.sol\n\nBundles cryptographic primitives used by other contracts.\n\n### EnumerableStringSet.sol\n\nAdaptation of OpenZeppelin's EnumerableSet library for `string` type.\n\n### EnumerableTargetSet.sol\n\nAdaptation of OpenZeppelin's EnumerableSet and EnumerableMap (`AddressToUintMap`)\nlibraries for `TargetDefaultPermissions` type.\n\n### IAvatar.sol\n\nInterface for Avatar (Safe). Slightly enhanced version based on the original\nfrom Safe.\n\n### INodeManagementModule.sol\n\nInterface for custom functions exposed by the `HoprNodeManagementModule`\ncontract.\n\n### INodeSafeRegistry.sol\n\nMinimum interface for `NodeSafeRegistry` contract.\n\n### NodeManagementModule.sol\n\nPermissioned capability-based Safe module for checking HOPR nodes operations.\n\n### NodeSafeRegistry.sol\n\n### NodeStakeFactory.sol\n\n### SimplifiedModule.sol\n\n### TargetUtils.sol\n\nHelper functions for operations on `Target`s.\n\n## Testing\n\nAll smart contracts in scope have test coverage using unit tests and fuzzy\ntests. These tests use `forge` and may be executed by running the following\ncommands:\n\n```bash\nmake deps\ncd packages/ethereum/contracts\nmake sc-test\n```\n\nCoverage reports can be generated as well:\n\n```bash\ncd packages/ethereum/contracts\nmake sc-audit-coverage\nfirefox report/index.html\n```\n",
      "format" : "Markdown",
      "filename" : "01-overview.md",
      "order" : 1,
      "title" : ""
    } ]
  },
  "views" : {
    "systemContextViews" : [ {
      "key" : "Diagram1",
      "order" : 1,
      "softwareSystemId" : "2",
      "automaticLayout" : {
        "implementation" : "Graphviz",
        "rankDirection" : "TopBottom",
        "rankSeparation" : 300,
        "nodeSeparation" : 300,
        "edgeSeparation" : 0,
        "vertices" : false
      },
      "enterpriseBoundaryVisible" : true,
      "relationships" : [ {
        "id" : "3"
      } ],
      "elements" : [ {
        "id" : "1",
        "x" : 0,
        "y" : 0
      }, {
        "id" : "2",
        "x" : 0,
        "y" : 0
      } ]
    } ],
    "configuration" : {
      "branding" : { },
      "styles" : { },
      "terminology" : { }
    }
  }
}