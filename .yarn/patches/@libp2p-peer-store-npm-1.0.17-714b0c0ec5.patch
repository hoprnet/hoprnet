diff --git a/dist/src/address-book.js b/dist/src/address-book.js
index ecae42c6b6d2024a4f7808e904523f4929132e4b..0daecd4d8ae380e8eaf65ffc6082ea44e603a6dc 100644
--- a/dist/src/address-book.js
+++ b/dist/src/address-book.js
@@ -154,22 +154,6 @@ export class PeerStoreAddressBook {
             if (addresses.length === 0) {
                 return;
             }
-            try {
-                peer = await this.store.load(peerId);
-                hasPeer = true;
-                if (new Set([
-                    ...addresses.map(({ multiaddr }) => multiaddr.toString()),
-                    ...peer.addresses.map(({ multiaddr }) => multiaddr.toString())
-                ]).size === peer.addresses.length && addresses.length === peer.addresses.length) {
-                    // not changing anything, no need to update
-                    return;
-                }
-            }
-            catch (err) {
-                if (err.code !== codes.ERR_NOT_FOUND) {
-                    throw err;
-                }
-            }
             updatedPeer = await this.store.patchOrCreate(peerId, { addresses });
             log('set multiaddrs for %p', peerId);
         }
@@ -214,21 +198,6 @@ export class PeerStoreAddressBook {
             if (addresses.length === 0) {
                 return;
             }
-            try {
-                peer = await this.store.load(peerId);
-                hasPeer = true;
-                if (new Set([
-                    ...addresses.map(({ multiaddr }) => multiaddr.toString()),
-                    ...peer.addresses.map(({ multiaddr }) => multiaddr.toString())
-                ]).size === peer.addresses.length) {
-                    return;
-                }
-            }
-            catch (err) {
-                if (err.code !== codes.ERR_NOT_FOUND) {
-                    throw err;
-                }
-            }
             updatedPeer = await this.store.mergeOrCreate(peerId, { addresses });
             log('added multiaddrs for %p', peerId);
         }
diff --git a/src/address-book.ts b/src/address-book.ts
index 34df045bbb64a460035984b0fd57c7c0b425eec6..3574bd42715bfcf0c9e40fbe39f1dea5b9ba15bd 100644
--- a/src/address-book.ts
+++ b/src/address-book.ts
@@ -192,23 +192,6 @@ export class PeerStoreAddressBook {
         return
       }
 
-      try {
-        peer = await this.store.load(peerId)
-        hasPeer = true
-
-        if (new Set([
-          ...addresses.map(({ multiaddr }) => multiaddr.toString()),
-          ...peer.addresses.map(({ multiaddr }) => multiaddr.toString())
-        ]).size === peer.addresses.length && addresses.length === peer.addresses.length) {
-          // not changing anything, no need to update
-          return
-        }
-      } catch (err: any) {
-        if (err.code !== codes.ERR_NOT_FOUND) {
-          throw err
-        }
-      }
-
       updatedPeer = await this.store.patchOrCreate(peerId, { addresses })
 
       log('set multiaddrs for %p', peerId)
@@ -261,23 +244,7 @@ export class PeerStoreAddressBook {
       if (addresses.length === 0) {
         return
       }
-
-      try {
-        peer = await this.store.load(peerId)
-        hasPeer = true
-
-        if (new Set([
-          ...addresses.map(({ multiaddr }) => multiaddr.toString()),
-          ...peer.addresses.map(({ multiaddr }) => multiaddr.toString())
-        ]).size === peer.addresses.length) {
-          return
-        }
-      } catch (err: any) {
-        if (err.code !== codes.ERR_NOT_FOUND) {
-          throw err
-        }
-      }
-
+      
       updatedPeer = await this.store.mergeOrCreate(peerId, { addresses })
 
       log('added multiaddrs for %p', peerId)
