---
#################################################################################
# Cron daily pipeline to clean cache contents (stale issues and docker images)
#################################################################################
name: Cleanup

on:
  schedule:
    - cron: "30 1 * * *"

jobs:
  stale:
    name: Close stale issues
    runs-on: self-hosted-hoprnet-small
    timeout-minutes: 10
    steps:
      # See docs: https://github.com/actions/stale
      - uses: actions/stale@v9
        with:
          stale-issue-message: "This issue is stale because it has been open 60 days with no activity. Remove stale label or comment or this will be closed in 30 days."
          days-before-stale: 60
          days-before-close: 30
          stale-issue-label: "stale"
          stale-pr-label: "stale"
          exempt-issue-labels: "epic"
          exempt-pr-labels: "epic"

  cleanup-docker:
    name: Cleanup Docker images
    runs-on: self-hosted-hoprnet-small
    timeout-minutes: 30
    steps:
      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}
          install_components: beta

      - name: Login Google Container Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
      - name: Cleanup Docker images
        run: |
          docker_registry="europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images"
          date=`date +%Y-%m-%d'T'%H:%M'Z' -d "60 days ago"`
          images=('hopli' 'hoprd')
          for image in "${images[@]}"; do
            old_pr_image_tags=$(gcloud artifacts docker images list --include-tags ${docker_registry}/${image} --format="json" 2> /dev/null | jq -r --arg date "$date"  '.[]  | select(.updateTime < $date) | select(.tags | match("-commit.")).version')
            old_untagged_images=$(gcloud artifacts docker images list --include-tags ${docker_registry}/${image} --format="json" 2> /dev/null | jq -r --arg date "$date"  '.[]  | select(.updateTime < $date) | select(.tags | length == 0).version')
            old_image_tags=($(echo -e "${old_pr_image_tags}\n${old_untagged_images}" | sed '/^$/d' | tr '\n' ' '))
            for old_image_tag in "$old_image_tags[@]"; do
              gcloud artifacts docker images delete --quiet --delete-tags --async ${docker_registry}/${image}@${old_image_tag}
            done
          done

  # cleanup-git:
  #   name: Cleanup Git
  #   runs-on: self-hosted-hoprnet-small
  #   steps:
  #     - name: Checkout hoprnet repository
  #       uses: actions/checkout@v3

  #     - name: Cleanup git branches older than a year
  #       run: |
  #         for branch in $(git branch -al | sed /release/d | sed /HEAD/d ); do
  #           if [[ -z "$(git log -1 --since='1 year ago' -s $branch)" ]] then
  #             git push origin -d ${branch/remotes\/origin\/}
  #           fi
  #         done
