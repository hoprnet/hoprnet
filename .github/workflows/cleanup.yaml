---
#################################################################################
# Cron daily pipeline to clean cache contents (stale issues and docker images)
#################################################################################
name: Cleanup

on:
  schedule:
    - cron: "30 1 * * *"

jobs:
  stale:
    name: Close stale issues
    runs-on: self-hosted-hoprnet-small
    timeout-minutes: 10
    steps:
      # See docs: https://github.com/actions/stale
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - uses: actions/stale@5bef64f19d7facfb25b37b414482c7164d639639 # v9.1.0
        with:
          stale-issue-message: "This issue is stale because it has been open 60 days with no activity. Remove stale label or comment or this will be closed in 30 days."
          days-before-stale: 60
          days-before-close: 30
          stale-issue-label: "stale"
          stale-pr-label: "stale"
          exempt-issue-labels: "epic"
          exempt-pr-labels: "epic"

  cleanup-docker:
    name: Cleanup Docker images
    runs-on: self-hosted-hoprnet-small
    timeout-minutes: 30
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          egress-policy: audit

      - name: Setup GCP
        id: gcp
        uses: hoprnet/hopr-workflows/actions/setup-gcp@72b6f30b6d0e2fa7298034156f503f2a2bd0f9c6 # master
        with:
          google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          login-artifact-registry: 'true'
          install-sdk: 'true'

      - name: Cleanup Docker images
        run: |
          date=`date +%Y-%m-%d'T'%H:%M'Z' -d "60 days ago"`
          images=('hopli' 'hoprd')
          for image in "${images[@]}"; do
            old_pr_image_tags=$(gcloud artifacts docker images list --include-tags ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image} --format="json" 2> /dev/null | jq -r --arg date "$date"  '.[]  | select(.updateTime < $date) | select(.tags | match("-commit.")).version')
            old_untagged_images=$(gcloud artifacts docker images list --include-tags ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image} --format="json" 2> /dev/null | jq -r --arg date "$date"  '.[]  | select(.updateTime < $date) | select(.tags | length == 0).version')
            old_image_tags=($(echo -e "${old_pr_image_tags}\n${old_untagged_images}" | sed '/^$/d' | tr '\n' ' '))
            for old_image_tag in "$old_image_tags[@]"; do
              gcloud artifacts docker images delete --quiet --delete-tags --async ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}@${old_image_tag}
            done
          done

  # cleanup-git:
  #   name: Cleanup Git
  #   runs-on: self-hosted-hoprnet-small
  #   steps:
  #     - name: Checkout hoprnet repository
  #       uses: actions/checkout@v3

  #     - name: Cleanup git branches older than a year
  #       run: |
  #         for branch in $(git branch -al | sed /release/d | sed /HEAD/d ); do
  #           if [[ -z "$(git log -1 --since='1 year ago' -s $branch)" ]] then
  #             git push origin -d ${branch/remotes\/origin\/}
  #           fi
  #         done
