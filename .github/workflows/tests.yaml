---
#################################################################################
# Pipeline triggered on every pull request to run unit and smoke tests
#################################################################################
name: Test

env:
  RUST_BACKTRACE: "1"
  FOUNDRY_PROFILE: ci

on:
  merge_group:
    types: [checks_requested]
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review

concurrency:
  group: ${{ github.event.pull_request.head.ref || github.ref_name }}-${{ github.workflow}}
  cancel-in-progress: true

jobs:
  tests-unit:
    name: Unit Tests
    runs-on: self-hosted-hoprnet-bigger
    timeout-minutes: 60
    env:
      CI: "true"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          persist-credentials: false

      - name: Run unit tests
        run: nix build -L .#hopr-test

  tests-unit-nightly:
    name: Unit Tests Nightly
    runs-on: self-hosted-hoprnet-bigger
    timeout-minutes: 60
    if: github.event.pull_request.draft == false
    env:
      CI: "true"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          persist-credentials: false

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462 # v2.1.11
        if: ${{ !env.ACT }}
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Run unit tests nightly
        run: |
          nix build -L .#hopr-test-nightly

  tests-smart-contracts:
    runs-on: self-hosted-hoprnet-bigger
    name: Smart Contracts
    timeout-minutes: 60
    if: github.event.pull_request.draft == false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          persist-credentials: false

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@140bb5113ffb6b65a7e9b937a81fa96cf5064462 # v2.1.11
        if: ${{ !env.ACT }}
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Run tests
        run: nix develop -L -c make -j smart-contract-test
        env:
          HOPR_NETWORK: anvil-localhost

  build-candidate-binaries:
    name: Build Candidate Binaries
    runs-on: self-hosted-hoprnet-bigger
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        binary:
          - hoprd
          - hopli
    if: github.event.pull_request.draft == false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          persist-credentials: false

      - name: Build binary
        run: nix build .#${{ matrix.binary }}-candidate

  tests-smoke:
    runs-on: self-hosted-hoprnet-bigger
    name: Smoke Tests
    needs:
      - build-candidate-binaries
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        suite:
          - hopli
          - websocket_api
          - rest_api
          - session
          - integration
          - redeeming
          - win_prob
    if: github.event.pull_request.draft == false
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name || github.repository }}
          ref: ${{ github.event.pull_request.head.ref || github.ref }}
          persist-credentials: false

      - name: Setup GCP
        id: gcp
        uses: hoprnet/hopr-workflows/actions/setup-gcp@12c56020e16036982e6cc529848edeedfc705865 # master
        with:
          google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          login-artifact-registry: "false"
          install-sdk: "true"

      - name: Find base port
        id: find_base_port
        run: |
          base_port=$(nix run .#find-port-ci)
          echo "Using base port ${base_port}"
          echo "base-port=${base_port}" >> "$GITHUB_OUTPUT"
          echo "snapshot-name=snapshot-${base_port}" >> "$GITHUB_OUTPUT"
          echo "snapshot-dir=/tmp/hopr-localcluster/snapshot-${base_port}" >> "$GITHUB_OUTPUT"

      - name: Download snapshot
        id: download-snapshot
        if: ${{ !env.ACT }}
        run: |
          mkdir -p "${{ steps.find_base_port.outputs.snapshot-dir }}"
          gcloud storage rsync gs://hoprnet-test-artifacts/${{ steps.find_base_port.outputs.snapshot-name }} ${{ steps.find_base_port.outputs.snapshot-dir }} --recursive
        continue-on-error: true

      - name: Check snapshot
        run: ls -lR "${{ steps.find_base_port.outputs.snapshot-dir }}" || echo "no snapshot found"

      - name: Run smoke tests ${{ matrix.suite }}
        run: nix develop -L .#citest -c uv run --frozen -m pytest tests/test_${{ matrix.suite }}.py
        env:
          HOPR_SMOKETEST_BASE_PORT: ${{ steps.find_base_port.outputs.base-port }}

      - name: Upload snapshot
        uses: google-github-actions/upload-cloud-storage@7c73f5d6eae167341002e9c946f7479a609c588e # v2.2.3
        if: ${{ !env.ACT && always() && steps.download-snapshot.outcome != 'success' }}
        with:
          path: ${{ steps.find_base_port.outputs.snapshot-dir }}
          destination: hoprnet-test-artifacts/
          gzip: false

      - name: Compress and upload test logs
        if: ${{ !env.ACT && always() }}
        working-directory: "/tmp"
        run: |
          # Copy all the logs to a directory to avoid log file changes and simplify tar command
          test_name=test-smoke-${{ matrix.suite }}-${{ github.run_id }}-${{ github.run_number }}
          mkdir -p ${test_name}

          # Copy files, delete all but the log files
          cp -r hopr-localcluster/hopr-node_* ${test_name}/ || echo "no files to copy"
          find ${test_name}/ -type f ! -name "hoprd.log" ! -name "*.pcap" -delete
          cp hopr-localcluster/anvil/anvil.log ${test_name}/ || echo "no files to copy"

          # Create tarball and upload to GCP
          tar -czvf ${test_name}.tgz ${test_name}/
          gcloud storage cp ${test_name}.tgz gs://hoprnet-test-logs/pr-${{ github.event.pull_request.number }}/

          echo "Download logs from: https://console.cloud.google.com/storage/browser/hoprnet-test-logs/pr-${{ github.event.pull_request.number }}"
