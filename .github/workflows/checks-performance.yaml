---
#################################################################################
# Pipeline triggered on every pull request to check performance baseline
#################################################################################
name: Performance

on:
  workflow_call:
    inputs:
      source_repo:
        required: true
        type: string
      source_branch:
        required: true
        type: string

env:
  K6_CLUSTER_NODES: local
  K6_TOPOLOGY_NAME: receiver
  K6_WORKLOAD_NAME: sanity-check
  K6_TEST_DURATION: 1
  K6_ECHO_SERVERS_REPLICAS: 3
  HOPRD_API_TOKEN: e2e-API-token^^ # only for local testing

concurrency:
  group: ${{ inputs.source_branch || github.ref_name }}-performance
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  performance:
    name: Download
    runs-on: self-hosted-hoprnet-bigger
    timeout-minutes: 30
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          repository: ${{ inputs.source_repo }}
          ref: ${{ inputs.source_branch }}
      - name: Checkout hoprd-test repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: hoprnet/hoprd-test
          ref: ${{ vars.K6_REPOSITORY_BRANCH_NAME || 'main' }}
          path: ./hoprd-test

      - name: Build hoprd
        run: nix build -L .#hoprd-x86_64-linux

      - name: Run local cluster in background
        run: |
          set -euo pipefail
          nix develop -L .#citest -c uv run -m sdk.python.localcluster --config ./sdk/python/localcluster.params.yml --fully_connected --exposed --background | tee cluster.log
          grep "Process ID:" cluster.log | awk '{print $3}' | grep -E '^[0-9]+$' > cluster_pids.txt

      - name: Run download test
        run: |
          nix build .#packages.x86_64-linux.build --out-link dist
          nix build .#packages.x86_64-linux.build-k6 --out-link bin
          ./bin/k6 run ./dist/udp-test.js
        working-directory: ./hoprd-test/k6
        env:
          TESTID: pr-${{ github.event.pull_request.number }}
          K6_EXECUTION_NAME: pr-${{ github.event.pull_request.number }}
          K6_SKIP_SCENARIO_UPLOAD: true
          K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM: true
          K6_OUT: xk6-prometheus-rw
          K6_PROMETHEUS_RW_SERVER_URL: https://prometheus.staging.hoprnet.link/api/v1/write

      - name: Stop the local cluster
        if: always()
        run: |
          if [[ -f cluster_pids.txt ]]; then
            echo "Cleaning up cluster processes..."
            while read pid; do
              echo "Killing PID $pid"
              kill -TERM "$pid" || true
              pkill -TERM -P "$pid" || true
            done < cluster_pids.txt
          else
            echo "No cluster_pids.txt file found, skipping cleanup."
          fi
