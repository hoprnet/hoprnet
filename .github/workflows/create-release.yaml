---
#################################################################################
# Internal workflow to create github release
#################################################################################
name: Create Release

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
  pull_request:
    types:
      - closed
      # - synchronize

concurrency:
  group: create-release
  cancel-in-progress: false

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest # Cannot use a self-hosted runner because of the docker daemon not running
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@0634a2670c59f64b4a01f0f96f84700a4088b9f0 # v2.12.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ inputs.branch }}

      - name: Install Nix
        uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: hoprnet
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        env:
          USER: runner

      - name: Setup GCP
        id: gcp
        uses: hoprnet/hopr-workflows/actions/setup-gcp@72b6f30b6d0e2fa7298034156f503f2a2bd0f9c6 # master
        with:
          google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          login-artifact-registry: 'true'
          install-sdk: 'true'

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Setup workspace
        id: setup
        run: |
          current_version=$(./scripts/get-current-version.sh semver)
          echo "current_version=${current_version}" >> $GITHUB_OUTPUT
          if [[ $current_version == *"-rc."* ]]; then
            echo "prerelease=true" >> $GITHUB_OUTPUT
          else
            echo "prerelease=false" >> $GITHUB_OUTPUT
          fi
          ./scripts/download-workflow-binaries.sh "bot/close-${current_version}"
        env:
          GH_TOKEN: ${{ secrets.GH_RUNNER_TOKEN }}

      # - name: Tag repository
      #   id: tag
      #   run: |
      #     # Tag semver
      #     git tag v${{ steps.setup.outputs.current_version }}
      #     git push origin v${{ steps.setup.outputs.current_version }}

      #     declare base_branch=${{ github.event.pull_request.base.ref }}
      #     # Tag release name
      #     if [[ "${base_branch}" == "master" ]]; then
      #       release_name=${{ vars.BRANCH_MASTER_RELEASE_NAME }}
      #     elif [[ "${base_branch}" =~ ^"release" ]]; then
      #       release_name=${{ vars.BRANCH_RELEASE_RELEASE_NAME }}
      #     fi
      #     git tag --force ${release_name}
      #     git push --force origin ${release_name}
      #     echo "release_name=${release_name}" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          milestone_number=$(gh api repos/${{ github.repository }}/milestones | jq -r --arg version "${{ steps.setup.outputs.current_version }}"  ' to_entries[] | select(.value.title | test($version)).value.number')
          ./scripts/generate-changelog.sh ${milestone_number} | tee docs/changelog/changelog.md
          echo "milestone_number=${milestone_number}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      # - name: Tag docker images with release name
      #   run: |
      #     images=(hopli hoprd)
      #     for image in ${images[@]};
      #     do
      #       echo "Tagging ${image}:${{ steps.tag.outputs.release_name }}"
      #       gcloud artifacts docker tags add \
      #         ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}:${{ steps.setup.outputs.current_version }} \
      #         ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}:${{ steps.tag.outputs.release_name }}
      #       docker pull ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}:${{ steps.setup.outputs.current_version }}
      #       docker tag \
      #         ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}:${{ steps.setup.outputs.current_version }} \
      #         ${{ vars.DOCKER_HUB_ORGANIZATION_NAME }}/${image}:${{ steps.setup.outputs.current_version }}
      #       docker tag \
      #         ${{ vars.DOCKER_IMAGE_REGISTRY }}/${image}:${{ steps.setup.outputs.current_version }} \
      #         ${{ vars.DOCKER_HUB_ORGANIZATION_NAME }}/${image}:${{ steps.tag.outputs.release_name }}
      #       echo "Pushing images into Docker Hub"
      #       docker push ${{ vars.DOCKER_HUB_ORGANIZATION_NAME }}/${image}:${{ steps.setup.outputs.current_version }}
      #       docker push ${{ vars.DOCKER_HUB_ORGANIZATION_NAME }}/${image}:${{ steps.tag.outputs.release_name }}
      #     done

      - name: Create Release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          body_path: docs/changelog/changelog.md
          prerelease: ${{ steps.setup.outputs.prerelease }}
          name: HOPR - v${{ steps.setup.outputs.current_version }}
          tag_name: v${{ steps.setup.outputs.current_version }}

      - name: Upload release assets
        run: |
          set -x
          for artifact in ./dist/bin/* ./dist/packages/*; do
            echo "Uploading $artifact to release v${{ steps.setup.outputs.current_version }}"
            gh release upload v${{ steps.setup.outputs.current_version }} "$artifact" --clobber
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Close Milestone
      #   run: |
      #     gh api --method PATCH -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/${{ github.repository }}/milestones/${{ steps.changelog.outputs.milestone_number }} -f state='closed'
      #   env:
      #     GH_TOKEN: ${{ secrets.GH_RUNNER_TOKEN }}

      # - name: Notify release
      #   uses: zulip/github-actions-zulip/send-message@e4c8f27c732ba9bd98ac6be0583096dea82feea5 # v1.0.2
      #   with:
      #     api-key: ${{ secrets.ZULIP_API_KEY }}
      #     email: ${{ secrets.ZULIP_EMAIL }}
      #     organization-url: "https://hopr.zulipchat.com"
      #     type: "stream"
      #     to: "HOPRd"
      #     topic: "Releases"
      #     content: |
      #       I'm thrilled to inform the new hoprd version v${{ steps.setup.outputs.current_version }} has been released.
      #       [Release Notes](https://github.com/hoprnet/hoprnet/releases/tag/v${{ steps.setup.outputs.current_version }})
      #       [Docker Hub](https://hub.docker.com/repository/docker/hoprnet/hoprd/tags)

