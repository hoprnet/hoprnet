---
#################################################################################
# Manual pipeline to promote a release name to have its own branch
#################################################################################
name: Promote Release

on:
  workflow_dispatch:
    inputs:
      tag_release_name:
        type: string
        required: true
        description: 'Release name for tag'
      new_release_name:
        type: string
        required: true
        description: 'New release name'
      tag_name:
        type: string
        required: true
        description: 'Git tag from which the release branch fork (v3.0.0)'

concurrency:
  group: promote-release
  cancel-in-progress: true

jobs:
  promote_release:
    name: Promote Release
    runs-on: self-hosted-hoprnet-small
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout hoprnet repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags
          persist-credentials: true # required for gh cli to do push
          token: ${{ secrets.GH_RUNNER_TOKEN }} # Needs to use a different token than GITHUB_TOKEN to be able to push to protected branches
          ref: master

      - name: Promote release
        id: promote_release
        run: |
          set -x
          echo "Checkout to tag revision"
          if ! git tag -l ${{ github.event.inputs.tag_name }} | grep ${{ github.event.inputs.tag_name }}; then
            echo "Git tag ${{ github.event.inputs.tag_name }} does not exists"
            exit 1
          fi
          echo "Create new branch or reuse an existing branch"
          release_name="${{ vars.BRANCH_MASTER_RELEASE_NAME }}"
          echo "release_name=${release_name}" | tee -a $GITHUB_OUTPUT
          if git branch -al release/${release_name} | grep ${release_name}; then
            echo "Branch release/${release_name} already exists. Skipping promotion..."
            exit 0
          else
            git checkout ${{ github.event.inputs.tag_name }}
            git checkout -b release/${release_name}
            git push --set-upstream origin release/${release_name}
          fi
          gh variable set BRANCH_RELEASE_RELEASE_NAME --body "${release_name}"
          gh variable set BRANCH_MASTER_RELEASE_NAME --body "${{ github.event.inputs.new_release_name }}"
        env:
          GH_TOKEN: ${{ secrets.GH_RUNNER_TOKEN }}

  new_release:
    name: Open new release
    needs:
      - promote_release
    uses: ./.github/workflows/open-release.yaml
    with:
      release_type: Patch
      source_branch: "release/${{ github.event.inputs.tag_release_name }}"
    secrets: inherit
