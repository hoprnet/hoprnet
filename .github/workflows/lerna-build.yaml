name: Integration Task - build everything together and test, publish?
on:
  push:
    branches: '*'
  pull_request:
    types: [closed]

jobs:
  build:
    name: Build, Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.9.1]
        yarn-version: [1.19.2]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
      - name: Install node modules
        run: |
          yarn policies set-version ${{ matrix.yarn-version }}
          yarn install --frozen-lockfile
      - name: Install dependencies and link locally
        run: |
          node_modules/.bin/lerna bootstrap --ignore-prepublish --force-local -- --frozen-lockfile
      - name: Build
        run: |
          node_modules/.bin/lerna run build
      - name: Test
        run: |
          node_modules/.bin/lerna run test --stream

      - name: Publish prerelease version
        if: |
          github.event_name == 'pull_request' &&
          github.event.action == 'closed' &&
          github.event.pull_request.merged == true &&
          !contains(github.event.pull_request.labels.*.name, 'Major Version') &&
          !contains(github.event.pull_request.labels.*.name, 'Minor Version') &&
          !contains(github.event.pull_request.labels.*.name, 'Patch Version')
        run: | # TODO: Assert master branch,
          git config --global user.email "noreply@hoprnet.org" && git config --global user.name "HOPR Versioning robot"
          node_modules/.bin/lerna version prerelease --preid "alpha"
          git push origin master
          (PACKAGE_VERSION=$(node -p -e "require('./package.json').version"); git tag $PACKAGE_VERSION && git push origin $PACKAGE_VERSION)
          npm whoami && npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


            #  publish_minor:
            # name: Publish Minor Version Bump in Master (NPM, Github)
            #needs: build

            #runs-on: ubuntu-latest
            #steps:
#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.9.1'
#          registry-url: 'https://npm.pkg.github.com'
#      - name: Publish to GPR
#        run: npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }} && npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  publish_major:
#    name: Publish Major Version Bump in Master (NPM, Github)
#    needs: build
#    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'Major Version')
#
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.9.1'
#          registry-url: https://registry.npmjs.org/
#      - name: Use Master
#        run: git fetch origin && git checkout master
#      - name: Cache node_modules
#        id: cache-modules
#        uses: actions/cache@v1
#        with:
#          path: node_modules
#          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles(env.pkgPath) }}
#      - name: Install node modules
#        if: steps.cache-modules.outputs.cache-hit != 'true'
#        run: |
#          yarn policies set-version 1.19.2 
#          yarn install --frozen-lockfile
#      - name: Build library
#        run: |
#          yarn policies set-version 1.19.2
#          yarn build
#      - name: Set name / email for commit
#        run: git config --global user.email "noreply@hoprnet.org" && git config --global user.name "HOPR Versioning robot"
#      - name: Bump package.json
#        run: npm version major
#      - name: Commit back to master
#        run: git push origin master
#      - name: Push a tag
#        run: (PACKAGE_VERSION=$(node -p -e "require('./package.json').version"); git tag $PACKAGE_VERSION && git push origin $PACKAGE_VERSION)
#      - name: NPM Publish
#        run: npm whoami && npm publish --access public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#      - uses: actions/setup-node@v1
#        with:
#          node-version: 12.9.1
#          registry-url: 'https://npm.pkg.github.com'
#      - name: Publish to GPR
#        run: npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }} && npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#  publish_patch:
#    name: Publish Patch Version Bump in Master (NPM, Github)
#    needs: build
#    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'Patch Version')
#
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - uses: actions/setup-node@v1
#        with:
#          node-version: '12.9.1'
#          registry-url: https://registry.npmjs.org/
#      - name: Use Master
#        run: git fetch origin && git checkout master
#      - name: Cache node_modules
#        id: cache-modules
#        uses: actions/cache@v1
#        with:
#          path: node_modules
#          key: ${{ runner.OS }}-${{ matrix.node-version }}-build-${{ hashFiles(env.pkgPath) }}
#      - name: Install node modules
#        if: steps.cache-modules.outputs.cache-hit != 'true'
#        run: |
#          yarn policies set-version 1.19.2
#          yarn install --frozen-lockfile
#      - name: Build library
#        run: |
#          yarn policies set-version 1.19.2
#          yarn build
#      - name: Set name / email for commit
#        run: git config --global user.email "noreply@hoprnet.org" && git config --global user.name "HOPR Versioning robot"
#      - name: Bump package.json
#        run: npm version patch
#      - name: Commit back to master
#        run: git push origin master
#      - name: Push a tag
#        run: (PACKAGE_VERSION=$(node -p -e "require('./package.json').version"); git tag $PACKAGE_VERSION && git push origin $PACKAGE_VERSION)
#      - name: NPM Publish
#        run: npm whoami && npm publish --access public
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
#      - uses: actions/setup-node@v1
#        with:
#          node-version: 12.9.1
#          registry-url: 'https://npm.pkg.github.com'
#      - name: Publish to GPR
#        run: npm config set //npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }} && npm publish
#        env:
#          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
