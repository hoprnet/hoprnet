---
#################################################################################
# Pipeline to package artifacts
#################################################################################
name: Package

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      target:
        required: true
        type: string
      workflow_run_id:
        required: true
        type: string

concurrency:
  group: ${{ inputs.branch }}-package-${{ inputs.target }}
  cancel-in-progress: true

jobs:
  package:
    runs-on: self-hosted-hoprnet-small
    if: github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, format('binary:{0}', inputs.target))
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          ref: ${{ inputs.branch }}

      - name: Setup GCP
        id: gcp
        uses: hoprnet/hopr-workflows/actions/setup-gcp@12c56020e16036982e6cc529848edeedfc705865 # master
        with:
          google-credentials: ${{ secrets.GCP_SA_TERRAFORM_JSON }}
          login-artifact-registry: 'false'
          install-sdk: 'true'
      - name: Download artifacts from parent workflow run
        run: |
          set -euo pipefail  # Enable strict error handling
          mkdir -p ./dist/bin

          # Fetch artifacts metadata
          curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ inputs.workflow_run_id }}/artifacts \
            -o artifacts.json || { echo "Failed to fetch artifacts metadata"; exit 1; }
          mkdir -p ./dist/bin

          # Extract hoprd artifact URL
          hoprd_url=$(jq -r '.artifacts[] | select(.name == "hoprd-${{ inputs.target }}").archive_download_url' artifacts.json)
          if [[ -z "$hoprd_url" ]]; then
            echo "Error: hoprd artifact URL not found for target '${{ inputs.target }}'"
            exit 1
          fi

          # Download and unzip hoprd artifact
          curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$hoprd_url" -o hoprd-${{ inputs.target }}.zip || { echo "Failed to download hoprd artifact"; exit 1; }
          unzip -o hoprd-${{ inputs.target }}.zip -d ./dist/bin || { echo "Failed to unzip hoprd artifact"; exit 1; }

          # Extract hopli artifact URL
          hopli_url=$(jq -r '.artifacts[] | select(.name == "hopli-${{ inputs.target }}").archive_download_url' artifacts.json)
          if [[ -z "$hopli_url" ]]; then
            echo "Error: hopli artifact URL not found for target '${{ inputs.target }}'"
            exit 1
          fi

          # Download and unzip hopli artifact
          curl -s -L -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "$hopli_url" -o hopli-${{ inputs.target }}.zip || { echo "Failed to download hopli artifact"; exit 1; }
          unzip -o hopli-${{ inputs.target }}.zip -d ./dist/bin || { echo "Failed to unzip hopli artifact"; exit 1; }

      - name: Install Nix
        uses: cachix/install-nix-action@17fe5fb4a23ad6cbbe47d6b3f359611ad276644c # v31
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@0fc020193b5a1fa3ac4575aa3a7d3aa6a35435ad # v16
        with:
          name: hoprnet
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        env:
          USER: runner

      - name: Package binaries
        run: nix develop -c just package ${{ inputs.target }}

      - name: Test Package debian
        if: vars.TEST_OS_PACKAGE_ENABLED == 'true'
        continue-on-error: true
        run: |
          echo "${{ secrets.TEST_OS_PACKAGE_HOPR_IDENTITY_FILE }}" | base64 -d > ${{ github.workspace }}/deploy/nfpm/hopr.id
          chmod 600 ${{ github.workspace }}/deploy/nfpm/hopr.id
          nix develop -c just test-package deb ${{ inputs.target }}
        env:
          HOPRD_PASSWORD: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PASSWORD }}
          HOPRD_SAFE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_SAFE_ADDRESS }}
          HOPRD_MODULE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_MODULE_ADDRESS }}
          HOPRD_PROVIDER: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PROVIDER }}

      - name: Test Package centos
        if: vars.TEST_OS_PACKAGE_ENABLED == 'true'
        continue-on-error: true
        run: nix develop -c just test-package rpm ${{ inputs.target }}
        env:
          HOPRD_PASSWORD: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PASSWORD }}
          HOPRD_SAFE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_SAFE_ADDRESS }}
          HOPRD_MODULE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_MODULE_ADDRESS }}
          HOPRD_PROVIDER: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PROVIDER }}

      - name: Test Package archlinux
        if: vars.TEST_OS_PACKAGE_ENABLED == 'true'
        continue-on-error: true
        run: nix develop -c just test-package archlinux ${{ inputs.target }}
        env:
          HOPRD_PASSWORD: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PASSWORD }}
          HOPRD_SAFE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_SAFE_ADDRESS }}
          HOPRD_MODULE_ADDRESS: ${{ secrets.TEST_OS_PACKAGE_HOPRD_MODULE_ADDRESS }}
          HOPRD_PROVIDER: ${{ secrets.TEST_OS_PACKAGE_HOPRD_PROVIDER }}

      - name: Upload debian packaged artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hoprd-${{ inputs.target }}.deb
          path: ${{ github.workspace }}/dist/packages/hoprd-${{ inputs.target }}.deb

      - name: Upload centos packaged artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hoprd-${{ inputs.target }}.rpm
          path: ${{ github.workspace }}/dist/packages/hoprd-${{ inputs.target }}.rpm

      - name: Upload archlinux packaged artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: hoprd-${{ inputs.target }}.pkg.tar.zst
          path: ${{ github.workspace }}/dist/packages/hoprd-${{ inputs.target }}.archlinux
