---
name: Merge Back

on:
  workflow_dispatch:
    inputs:
      release_name:
        type: choice
        required: true
        description: 'Name of the release'
        options:
          - providence

concurrency:
  group: merge-back
  cancel-in-progress: true

jobs:
  merge-back:
    name: Merge Back
    runs-on: ubuntu-2-core
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Merge back

        run: |
          git fetch
          git checkout release/${{ github.event.inputs.release_name }}
          git checkout -b merge-back-release-${{ github.event.inputs.release_name }}
          git merge master > /tmp/merge.log || true

          # Check if there are conflicts
          conflicts=$(grep "CONFLICT" /tmp/merge.log | grep -v package.json | wc -l)
          if [[ "$conflicts" -gt "0" ]];
          then
            echo "There are conflicts in source code files"
            echo "exit 1"
          fi

          # Resolve conflicts for package.json
          packages=(connect core-ethereum core hoprd real utils)
          for package in "${packages[@]}"; do
            if [ `git diff packages/$package/package.json | wc -l` -gt "0" ]; then 
              if [ `git diff packages/$package/package.json  | grep @@ | wc -l` -eq "1" ]; then
                git checkout --theirs packages/$package/package.json
                git add packages/$package/package.json
              else
                echo "Review changes manully for ./packages/$package/package.json"
                echo exit 1
              fi
            fi
          done
          git commit -am "Merge branch 'master' into merge-back-release-${RELEASE_NAME}"
          git push --set-upstream origin merge-back-release-${RELEASE_NAME}
          today=`date +%Y-%m-%d`
          gh pr create --title "Merge back from ${RELEASE_NAME} - ${today}" --base master --label merge-back --assignee ${{ github.actor }} --reviewer hoprnet/hopr-development --body "The scope of this PR is to merge back to master all the bug fixing found in release ${RELEASE_NAME}"

        env:
          GH_TOKEN: ${{ github.token }}
