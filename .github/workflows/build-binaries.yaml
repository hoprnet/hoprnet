---
#################################################################################
# Child pipeline to build hoprnet binaries
#################################################################################
name: Build binaries


on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string
      binary:
        required: true
        type: string
      runner:
        required: true
        type: string
      target:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      binary:
        required: true
        description: 'Binary to build'
        type: choice
        options:
          - hoprd
          - hopli
      runner:
        type: choice
        options:
          - self-hosted-hoprnet-bigger
          - macos-13
          - macos-14
        required: true
        description: 'GH Runner to use: macos-13=x86_64-darwin and macos-14=aarch64-darwin'
      target:
        type: choice
        options:
          - x86_64-linux
          - aarch64-linux
          - aarch64-darwin
          - x86_64-darwin
          - armv7l-linux
        required: true
        description: 'Architecture to build for'

concurrency:
  group: ${{ github.ref }}-build-binary-${{ inputs.binary }}-${{ inputs.target }}
  cancel-in-progress: true

jobs:
  binary:
    if: contains(github.event.pull_request.labels.*.name, format('binary:{0}', inputs.target)) || github.event.inputs.binary
    runs-on: ${{ inputs.runner || github.event.inputs.runner }}
    timeout-minutes: 60
    steps:
      - name: Set environment variables
        id: vars
        run: |
          set -x
          declare branch binary target package_suffix runner_needs_nix_setup
          if [ -z "${{ github.event.inputs.binary }}" ]; then
            echo "The workflow is triggered by other pipeline"
            branch=${{ inputs.branch }}
            binary=${{ inputs.binary }}
            target=${{ inputs.target }}
          else
            echo "The workflow is triggered manually"
            branch=${{ github.ref_name }}
            binary=${{ github.event.inputs.binary }}
            target=${{ github.event.inputs.target }}
          fi
          if [[ "${target}" == "x86_64-linux" ]]; then
            package_suffix="-x86_64-linux"
            runner_needs_nix_setup=false
          elif [[ "${target}" == "aarch64-linux" ]]; then
            package_suffix="-aarch64-linux"
            runner_needs_nix_setup=false
          elif [[ "${target}" == "armv7l-linux" ]]; then
            package_suffix="-armv7l-linux"
            runner_needs_nix_setup=false
          fi
          echo "Invocation parameters:"
          echo "branch=${branch}" | tee --append "$GITHUB_OUTPUT"
          echo "binary=${binary}" | tee --append "$GITHUB_OUTPUT"
          echo "target=${target}" | tee --append "$GITHUB_OUTPUT"
          echo "package_suffix=${package_suffix}" | tee --append "$GITHUB_OUTPUT"
          echo "runner_needs_nix_setup=${runner_needs_nix_setup}" | tee --append "$GITHUB_OUTPUT"
          echo "runner=${{ inputs.runner || github.event.inputs.runner }}"


      - name: Checkout hoprnet repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.vars.outputs.branch }}

      - name: Install Nix
        if: steps.vars.outputs.runner_needs_nix_setup == 'true'
        uses: cachix/install-nix-action@v29
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
          nix_path: nixpkgs=channel:nixos-24.05

      - uses: cachix/cachix-action@v15
        if: steps.vars.outputs.runner_needs_nix_setup == 'true'
        with:
          name: hoprnet
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        env:
          USER: runner

      - name: Build ${{ steps.vars.outputs.binary }} binaries
        run: nix build .#${{ steps.vars.outputs.binary }}${{ steps.vars.outputs.package_suffix }} -L

      - name: Upload ${{ steps.vars.outputs.binary }} binaries
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.vars.outputs.binary }}-${{ steps.vars.outputs.target }}
          path: ${{ github.workspace }}/result/bin/*
