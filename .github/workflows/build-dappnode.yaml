---
#################################################################################
# Pipeline to build dappnode package
#################################################################################
name: Build DappNode

on:
  workflow_call:
    inputs:
      source_repo:
        required: true
        type: string
      source_branch:
        required: true
        type: string
      dappnode_repository:
        required: true
        type: string
      labels:
        required: true
        type: string
  workflow_dispatch:
    inputs:
      network:
        type: choice
        options:
          - rotsee
          - dufour
        required: true
        description: 'Package network (rotsee: testnet, dufour: mainnet)'
        default: rotsee

concurrency:
  group: dappnode-${{ inputs.dappnode_repository }}-${{ inputs.source_branch || github.ref_name }}
  cancel-in-progress: false

jobs:
  build:
    # The original event_name registered is 'pull_request_target' even the trigger action is 'workflow_call'
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'pull_request_target' && contains(inputs.labels, format('package:{0},',inputs.dappnode_repository)))
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo: false # sudo is needed for docker compose installation
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Set environment variables
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request_target" ]]; then
            echo "The workflow is triggered by other pipeline"
            echo "source_repo=${{ inputs.source_repo }}" | tee -a $GITHUB_OUTPUT
            echo "source_branch=${{ inputs.source_branch }}"  | tee -a $GITHUB_OUTPUT
            echo "dappnode_repository=${{ inputs.dappnode_repository }}" | tee -a $GITHUB_OUTPUT
            if [[ "${{ inputs.dappnode_repository }}" == "DAppNodePackage-Hopr-testnet" ]]; then
              echo "HOPRD_NETWORK=rotsee" | tee -a $GITHUB_OUTPUT
            else
              echo "HOPRD_NETWORK=dufour" | tee -a $GITHUB_OUTPUT
            fi
          else
            echo "The workflow is triggered manually"
            echo "source_repo=${{ github.repository }}" | tee -a $GITHUB_OUTPUT
            echo "source_branch=${{ github.ref_name }}" | tee -a $GITHUB_OUTPUT
            if [[ "${{ github.event.inputs.network }}" == "rotsee" ]]; then
              echo "dappnode_repository=DAppNodePackage-Hopr-testnet" | tee -a $GITHUB_OUTPUT
              echo "HOPRD_NETWORK=rotsee" | tee -a $GITHUB_OUTPUT
            else
              echo "dappnode_repository=DAppNodePackage-Hopr" | tee -a $GITHUB_OUTPUT
              echo "HOPRD_NETWORK=dufour" | tee -a $GITHUB_OUTPUT
            fi
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Checkout hoprnet repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: ${{ steps.vars.outputs.source_repo }}
          ref: ${{ steps.vars.outputs.source_branch }}

      - name: Setup GCP
        id: gcp
        uses: hoprnet/hopr-workflows/actions/setup-gcp@12c56020e16036982e6cc529848edeedfc705865 # master
        with:
          google-credentials: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}
          login-artifact-registry: 'false'
          install-sdk: 'true'

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
        with:
          node-version: 20.19.5 # Revert to version 20, as the dappnode package is not yet compatible with Node 22

      - name: Checkout DAppNodePackage-Hopr
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
          repository: dappnode/${{ steps.vars.outputs.dappnode_repository }}
          path: "./dappnode"
          token: ${{ secrets.GH_RUNNER_TOKEN }}
          ref: ${{ vars.DAPPNODE_REPOSITORY_BRANCH_NAME }}

      - name: Setup variables
        id: setup
        run: |
          set -x
          # Set current_version based on branch type:
          # - For PRs: <current_version>-pr.<PR_number>
          # - For 'master' branch: <master_version>-latest
          # - For 'release/*' branches: <release_version>-latest
          # - For other branches: exit with error
          current_version=$(./scripts/get-current-version.sh docker)
          if [[ -z "${{ github.event.pull_request.number }}" ]]; then
            echo "Invoked manually"
            declare base_branch=${{ steps.vars.outputs.source_branch }}
            if [[ "${base_branch}" == "master" ]]; then
              echo "current_version=${{ vars.BRANCH_MASTER_RELEASE_NAME }}-latest" >> "$GITHUB_OUTPUT"
            elif [[ "${base_branch}" =~ ^"release" ]]; then
              echo "current_version=${{ vars.BRANCH_RELEASE_RELEASE_NAME }}-latest" >> "$GITHUB_OUTPUT"
            else
              last_commit=$(git rev-parse --short HEAD)
              echo "current_version=${current_version}-commit.${last_commit}" >> "$GITHUB_OUTPUT"
            fi
          else
            echo "Invoked from a pull request"
            echo "current_version=${current_version}-pr.${{ github.event.pull_request.number }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Publish DappNode Package
        id: publish
        run: |
          docker_tag=$(gcloud artifacts docker tags list "${{ vars.DOCKER_IMAGE_REGISTRY }}/hoprd" --filter="tag:${{ steps.setup.outputs.current_version }}" --format="csv[no-heading](tag,version)" | grep -F "${{ steps.setup.outputs.current_version }}," | sed 's/,/@/')
          yq -i e ".services.node.build.args.UPSTREAM_VERSION |= \"${docker_tag}\"" "./docker-compose.yml"
          npm install
          npx @dappnode/dappnodesdk publish patch  --provider "remote" --upload_to "ipfs" --verbose | tee build.log

          echo "DNP (DAppNode Package) built and uploaded" >> "$GITHUB_STEP_SUMMARY"
          echo "Branch: ${{ steps.vars.outputs.source_branch }}" >> "$GITHUB_STEP_SUMMARY"
          echo "Network: ${{ steps.vars.outputs.HOPRD_NETWORK }}" >> "$GITHUB_STEP_SUMMARY"
          grep "ipfs" build.log >> "$GITHUB_STEP_SUMMARY"
          ipfs_hash=$(grep -oP 'Release hash : \K/ipfs/\w+' build.log)
          echo "ipfs_hash=$ipfs_hash" >> "$GITHUB_OUTPUT"
          echo "ipfs_hash=$ipfs_hash"
        working-directory: "./dappnode"
        env:
          DEVELOPER_ADDRESS: "0x7305356ad936A06c4ea5DF45AD5E5C3ff9Db818E"
