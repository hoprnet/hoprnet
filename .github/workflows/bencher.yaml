---
#################################################################################
# Pipeline triggered on pull request approval to check benchmark results 
#################################################################################
name: Benchmarks

env:
  RUST_BACKTRACE: "1"

on:
  workflow_call: # This workflow is called from merge workflow
    inputs:
      branch:
        required: true
        type: string
  workflow_dispatch: #Â This workflow is triggered manually



concurrency:
  group: ${{ github.ref }}-bencher
  cancel-in-progress: true

jobs:
  bencher:
    name: Bencher
    runs-on: self-hosted-hoprnet-bigger
    timeout-minutes: 30
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
        with:
          disable-sudo: true
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Set environment variables
        id: vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            echo "The workflow is triggered by other pipeline"
            echo "GITHUB_REF_NAME=${BRANCH_NAME}" >> "$GITHUB_OUTPUT"
          else
            echo "The workflow is triggered manually"
            echo "GITHUB_REF_NAME=${{ github.ref_name }}" >> "$GITHUB_OUTPUT"
          fi
        env:
          BRANCH_NAME: ${{ inputs.branch }}

      - name: Checkout hoprnet repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.vars.outputs.GITHUB_REF_NAME }}
          persist-credentials: false

      - name: Install Nix
        uses: cachix/install-nix-action@08dcb3a5e62fa31e2da3d490afc4176ef55ecd72 # v30
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          name: hoprnet
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
        env:
          USER: runner

      - name: Setup Bencher
        uses: bencherdev/bencher@v0.5.0

      - name: Execute benchmarks
        run: |
          nix develop -c cargo bench -F testing

      - name: Publish benchmark results
        run: |
          find target/criterion -type f -name benchmark.json | while read file; do
            echo "Pushing benchmark: $file"
            bencher run --file "$file" --err
          done
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          BENCHER_BRANCH: ${{ steps.vars.outputs.GITHUB_REF_NAME }}
          BENCHER_PROJECT: hoprnet
          BENCHER_TESTBED: self-hosted-bigger
          GITHUB_ACTIONS: ${{ secrets.GITHUB_TOKEN }}
          BENCHER_ADAPTER: rust_criterion
          THRESHOLD_TEST: t_test
          THRESHOLD_MEASURE: latency
          THRESHOLD_UPPER_BOUNDARY: 0.95
          THRESHOLD_LOWER_BOUNDARY: 0.05  