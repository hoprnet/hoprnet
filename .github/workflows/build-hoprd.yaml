---
# Child pipeline to build Hoprd docker image (europe-west3-docker.pkg.dev/hoprassociation/docker-images/hoprd)
name: Build Hoprd

on:
  workflow_call:
    secrets:
      GOOGLE_HOPRASSOCIATION_PROJECT:
        required: true
      GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY:
        required: true

concurrency:
  group: ${{ github.head_ref }}-hoprd
  cancel-in-progress: true

jobs:
  build:
    name: docker
    runs-on: ubuntu-2-core
    timeout-minutes: 60
    steps:
      - name: Checkout hoprnet repository
        uses: actions/checkout@v4

      - name: Set up Google Cloud Credentials
        id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: kubernetes

      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v14
        if: ${{ !env.ACT }}
        with:
          name: hoprnet
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        continue-on-error: true

      - name: "Update version"
        id: update
        run: |
          if ${{ contains(github.event.pull_request.labels.*.name, 'release') }}; then
            docker_tag=$(./scripts/get-current-version.sh docker)
            echo "DOCKER_TAG=${docker_tag}" >> $GITHUB_OUTPUT
          else
            next_version=$(./scripts/get-next-version.sh Build ${{ github.event.pull_request.number }})
            ./scripts/bump-version.sh ${next_version}
            docker_tag=$(echo "${next_version}" | sed 's/+/-/')
            echo "DOCKER_TAG=${docker_tag}" >> $GITHUB_OUTPUT
          fi

      - name: Build docker image
        run: nix build .#hoprdDocker

      - name: Push docker image
        run: |
          sudo apt-get update -y
          sudo apt-get install -y skopeo
          skopeo copy docker-archive:./result docker://${IMAGE_TARGET}
        env:
          IMAGE_TARGET: europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:${{ steps.update.outputs.DOCKER_TAG }}

      - name: "Restart PR deployment"
        if: ${{ contains(github.event.pull_request.labels.*.name, 'deploy_nodes') }}
        run: |
          base_branch="${{ github.event.pull_request.base.ref }}"
          # Identify parameters depending on branch
          if [[ "${base_branch}" =~ ^"release" ]]; then
            namespace=dufour
            identity_pool="core-dufour-${base_branch/release\/}"
          else
            namespace=rotsee
            identity_pool=core-staging
          fi
          cluster_name=pr-${{ github.event.pull_request.number }}
          echo "[INFO] Restarting deployments on ${namespace} from pr-${{ github.event.pull_request.number }}"
          # Get list of deployments to restart
          export deployments=($(kubectl get deployments -n ${namespace/-.*} -l hoprds.hoprnet.org/cluster=${cluster_name},app.kubernetes.io/name=hoprd-operator,hoprds.hoprnet.org/identitypool=${identity_pool} -o jsonpath="{.items[*].metadata.name}"))
          for deployment in "${deployments[@]}"; do
            echo "[INFO] Restarting hoprd node ${namespace}/${deployments}"
            kubectl rollout restart deployments -n ${namespace} $deployment;
          done
