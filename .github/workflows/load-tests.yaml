---
#################################################################################
# Manual pipeline to start a load testing scenario
#################################################################################
name: Load Tests

on:
  # Starts at 2:00 AM CET
  # schedule:
  #   - cron: '00 2 * * *'
  workflow_dispatch:
    inputs:
      test_id:
        type: string
        required: true
        description: 'Test name'
      network:
        type: choice
        options:
          - rotsee
          - dufour
        required: true
        description: 'Cluster of nodes'
      workload:
        type: choice
        options:
          - sanity-check
          - endurance
          - full
        required: true
        description: 'Type of workload'
      rate:
        type: number
        default: 1
        required: true
        description: 'Number of messages per seconds'

concurrency:
  group: load-tests
  cancel-in-progress: true

jobs:

  load-tests:
    name: Load Tests
    runs-on: self-hosted-hoprnet-small
    steps:

      - name: Checkout hoprnet repository
        uses: actions/checkout@v4
        with:
          repository: hoprnet/hoprd-test
          ref: main

      - name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v1
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GCP_SA_TERRAFORM_JSON }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: hopr-staging
          install_components: beta

      - name: Get credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: cluster-staging
          location: europe-west3
          project_id: hopr-staging

      - name: Setup NodeJs
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Run Load test
        run: |
          npm install
          npm run test:${{ github.event.inputs.network }}:setup
          kubectl delete -f k6-test-run.yaml 2> /dev/null || true
          kubectl apply -f k6-test-run.yaml
        working-directory: "./k6"
        env:
          ENVIRONMENT_NAME: ${{ github.event.inputs.network }}
          WORKLOAD_NAME: ${{ github.event.inputs.workload }}
          SCENARIO_ITERATIONS: ${{ github.event.inputs.rate }}
          TESTID: ${{ github.event.inputs.test_id }}
          HOPRD_API_TOKEN: ${{ secrets.HOPRD_API_TOKEN }}


