---
#Â The goal of this workflow is to build the `hoprd` docker image when a pull request is created or commit push into it and has the label `deploy_nodes`
name: Build docker images

on:
  pull_request:
    branches:
      - master
      - release/*
    types:
      - synchronize
      - opened

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  change_set:
    name: Get PR changeSet
    runs-on: ubuntu-latest
    outputs:
      toolchain: ${{ steps.changeset.outputs.toolchain}}
      hopli: ${{ steps.changeset.outputs.hopli}}
      hoprd: ${{ steps.changeset.outputs.hoprd}}
    steps:
      - name: Checkout hoprnet
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get changeSet
        id: changeset
        # Set outputs using the command.
        run: |
          echo "toolchain=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.ref }} | grep -e ^scripts/ -e ^Makefile$ -e ^package.json$ -e ^.yarnrc.yml$ -e ^rust-toolchain.toml$ -e ^.nvmrc -e ^yarn.lock$ -e ^Cargo.toml$ | xargs)" >> $GITHUB_OUTPUT
          echo "hopli=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.ref }} | grep ^packages/hopli/ | xargs)" >> $GITHUB_OUTPUT
          echo "hoprd=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.ref }} ${{ github.event.pull_request.head.ref }} | grep -v ^.github/ | grep ^packages/hopli/ | grep -v ^scripts | grep -v ^.processes | grep -v ^docs/ | grep -v .md  | xargs)" >> $GITHUB_OUTPUT

  build_toolchain_image:
    name: Build toolchain docker image
    runs-on: ubuntu-latest
    needs: change_set
    # only run there are toolchain changed files
    if: ${{needs.change_set.outputs.toolchain}}
    steps:
      - name: Checkout hoprnet
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: auth
        name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: scripts/toolchain/Dockerfile
          cache-from: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:buildcache
          cache-to: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:buildcache,mode=max
          tags: europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopr-toolchain:pr-${{ github.event.pull_request.number }}

  build_hopli_image:
    name: Build hopli docker image
    runs-on: ubuntu-latest
    needs:
      - change_set
    # only run there are hopli changed files
    if: ${{needs.change_set.outputs.hopli}}
    steps:
      - name: Checkout hoprnet
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: auth
        name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: packages/hopli/Dockerfile
          cache-from: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:buildcache
          cache-to: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:buildcache,mode=max
          tags: europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hopli:pr-${{ github.event.pull_request.number }}

  build_hoprd_image:
    name: Build hoprd docker image
    runs-on: ubuntu-latest
    needs:
      - change_set
    if: ${{needs.change_set.outputs.hoprd}} and contains(github.event.pull_request.labels.*.name, 'deploy_nodes')
    steps:
      - name: Checkout hoprnet
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - id: auth
        name: Set up Google Cloud Credentials
        uses: google-github-actions/auth@v0
        with:
          token_format: "access_token"
          credentials_json: ${{ secrets.GOOGLE_HOPRASSOCIATION_CREDENTIALS_REGISTRY }}

      - name: Login Google Container Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west3-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: packages/hoprd/Dockerfile
          cache-from: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:buildcache
          cache-to: type=registry,ref=europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:buildcache,mode=max
          tags: europe-west3-docker.pkg.dev/${{ secrets.GOOGLE_HOPRASSOCIATION_PROJECT }}/docker-images/hoprd:pr-${{ github.event.pull_request.number }}

  restart_deployment:
    name: Restart deployment
    runs-on: ubuntu-latest
    needs: build_hoprd_image
    if: ${{needs.change_set.outputs.hoprd}} and contains(github.event.pull_request.labels.*.name, 'deploy_nodes')
    steps:
      - name: "Setup environment"
        run: |
          prBase="${{ github.event.pull_request.base.ref }}"
          # The identification of the network will be made once https://github.com/hoprnet/hoprnet/issues/4835 is finished
          network=master-staging
          echo "NETWORK_DASH=${network/_/-}" >> $GITHUB_ENV
      - name: Executing remote SSH command
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.K8S_SSH_SERVICE_HOST }}
          username: ${{ secrets.K8S_SSH_SERVICE_USERNAME }}
          password: ${{ secrets.K8S_SSH_SERVICE_PASSWORD }}
          port: 22
          sync: true
          debug: true
          script: |
            echo "[INFO] Restarting deployments on ${{ env.NETWORK_DASH }} from pr-${{ github.event.pull_request.number }}"
            export deployments=($(kubectl get deployments -n ${{ env.NETWORK_DASH }} -l hoprds.hoprnet.org/cluster=hoprd-pr-${{ github.event.pull_request.number }} -o jsonpath="{.items[*].metadata.name}"))
            for deployment in "${deployments[@]}"; do
              echo "[INFO] Restarting hoprd node ${deployments}"
              kubectl rollout restart deployments -n ${{ env.NETWORK_DASH }} $deployment;
            done
