name: HOPR Test

env:
  RUST_BACKTRACE: "1"
  SCCACHE_GHA_ENABLED: "true"
  RUSTC_WRAPPER: "sccache"

on:
  push:
    branches: ['**']
    paths-ignore:
      - '.processes/**/*'
      - 'docs/**/*'
      - 'packages/*/docs/**/*'

jobs:
  build_and_test:
    name: Build & Test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ['ubuntu-latest']

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Sccache Setup
        uses: mozilla-actions/sccache-action@v0.0.1
        with:
          version: "v0.4.0"

      - name: Install Nix
        uses: cachix/install-nix-action@v17
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}

      - uses: cachix/cachix-action@v12
        with:
          name: hoprnet
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: restore yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: restore cargo cache
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', 'rust-toolchain.toml') }}
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
            .cargo/.package-cache/
            .cargo/bin/
            .foundry/bin/

      - name: Install dependencies
        run: nix develop -c make -j deps-ci

      - name: Build
        run: nix develop -c make -j build

      - name: Test
        run: nix develop -c make -j test
        env:
          HOPR_ENVIRONMENT_ID: anvil-localhost
