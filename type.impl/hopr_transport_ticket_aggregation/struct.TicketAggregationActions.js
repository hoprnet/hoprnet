(function() {
    var type_impls = Object.fromEntries([["hopr_transport_ticket_aggregation",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TicketAggregationActions%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#205-212\">Source</a><a href=\"#impl-Clone-for-TicketAggregationActions%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html\" title=\"struct hopr_transport_ticket_aggregation::TicketAggregationActions\">TicketAggregationActions</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#207-211\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Generic type requires a handwritten clone function</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hopr_transport_ticket_aggregation::BasicTicketAggregationActions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TicketAggregationActions%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#198\">Source</a><a href=\"#impl-Debug-for-TicketAggregationActions%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, U: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html\" title=\"struct hopr_transport_ticket_aggregation::TicketAggregationActions\">TicketAggregationActions</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#198\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hopr_transport_ticket_aggregation::BasicTicketAggregationActions"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TicketAggregationActions%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#214-263\">Source</a><a href=\"#impl-TicketAggregationActions%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"struct\" href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html\" title=\"struct hopr_transport_ticket_aggregation::TicketAggregationActions\">TicketAggregationActions</a>&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive_ticket\" class=\"method\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#216-223\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html#tymethod.receive_ticket\" class=\"fn\">receive_ticket</a>(\n    &amp;mut self,\n    source: PeerId,\n    ticket: <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Ticket, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    request: U,\n) -&gt; <a class=\"type\" href=\"hopr_transport_ticket_aggregation/type.Result.html\" title=\"type hopr_transport_ticket_aggregation::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Pushes the aggregated ticket received from the transport layer into processing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive_aggregation_request\" class=\"method\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#226-233\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html#tymethod.receive_aggregation_request\" class=\"fn\">receive_aggregation_request</a>(\n    &amp;mut self,\n    source: PeerId,\n    tickets: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;TransferableWinningTicket&gt;,\n    request: T,\n) -&gt; <a class=\"type\" href=\"hopr_transport_ticket_aggregation/type.Result.html\" title=\"type hopr_transport_ticket_aggregation::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Process the received aggregation request</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.aggregate_tickets\" class=\"method\"><a class=\"src rightside\" href=\"src/hopr_transport_ticket_aggregation/lib.rs.html#236-250\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationActions.html#tymethod.aggregate_tickets\" class=\"fn\">aggregate_tickets</a>(\n    &amp;mut self,\n    channel: &amp;Hash,\n    prerequisites: AggregationPrerequisites,\n) -&gt; <a class=\"type\" href=\"hopr_transport_ticket_aggregation/type.Result.html\" title=\"type hopr_transport_ticket_aggregation::Result\">Result</a>&lt;<a class=\"struct\" href=\"hopr_transport_ticket_aggregation/struct.TicketAggregationAwaiter.html\" title=\"struct hopr_transport_ticket_aggregation::TicketAggregationAwaiter\">TicketAggregationAwaiter</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Pushes a new collection of tickets into the processing.</p>\n</div></details></div></details>",0,"hopr_transport_ticket_aggregation::BasicTicketAggregationActions"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[8190]}