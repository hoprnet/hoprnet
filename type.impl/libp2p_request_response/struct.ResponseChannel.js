(function() {
    var type_impls = Object.fromEntries([["hopr_transport_p2p",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ResponseChannel%3CTResponse%3E\" class=\"impl\"><a href=\"#impl-Debug-for-ResponseChannel%3CTResponse%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TResponse&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for ResponseChannel&lt;TResponse&gt;<div class=\"where\">where\n    TResponse: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hopr_transport_p2p::swarm::TicketAggregationResponseType"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ResponseChannel%3CTResponse%3E\" class=\"impl\"><a href=\"#impl-ResponseChannel%3CTResponse%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;TResponse&gt; ResponseChannel&lt;TResponse&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_open\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_open</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Checks whether the response channel is still open, i.e.\nthe <code>Behaviour</code> is still waiting for a\na response to be sent via [<code>Behaviour::send_response</code>]\nand this response channel.</p>\n<p>If the response channel is no longer open then the inbound\nrequest timed out waiting for the response.</p>\n</div></details></div></details>",0,"hopr_transport_p2p::swarm::TicketAggregationResponseType"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[2912]}