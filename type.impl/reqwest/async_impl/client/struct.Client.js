(function() {
    var type_impls = Object.fromEntries([["hopr_chain_api",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-ReqwestClient\" class=\"impl\"><a href=\"#impl-Clone-for-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Client</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hopr_chain_api::DefaultHttpRequestor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-ReqwestClient\" class=\"impl\"><a href=\"#impl-Debug-for-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","hopr_chain_api::DefaultHttpRequestor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-ReqwestClient\" class=\"impl\"><a href=\"#impl-Default-for-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Client</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","hopr_chain_api::DefaultHttpRequestor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HttpRequestor-for-ReqwestClient\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_chain_rpc/transport.rs.html#76\">Source</a><a href=\"#impl-HttpRequestor-for-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"hopr_chain_rpc/transport/trait.HttpRequestor.html\" title=\"trait hopr_chain_rpc::transport::HttpRequestor\">HttpRequestor</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.http_get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_chain_rpc/transport.rs.html#75\">Source</a><a href=\"#method.http_get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"hopr_chain_rpc/transport/trait.HttpRequestor.html#tymethod.http_get\" class=\"fn\">http_get</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    url: &amp;'life1 <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>]&gt;, <a class=\"enum\" href=\"hopr_chain_rpc/errors/enum.HttpRequestError.html\" title=\"enum hopr_chain_rpc::errors::HttpRequestError\">HttpRequestError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    Client: 'async_trait,</div></h4></section></summary><div class='docblock'>Performs HTTP GET query to the given URL and gets the JSON response.</div></details></div></details>","HttpRequestor","hopr_chain_api::DefaultHttpRequestor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReqwestClient\" class=\"impl\"><a href=\"#impl-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">new</a>() -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Client</code>.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>This method panics if a TLS backend cannot be initialized, or the resolver\ncannot load the system configuration.</p>\n<p>Use <code>Client::builder()</code> if you wish to handle the failure as an <code>Error</code>\ninstead of panicking.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">builder</a>() -&gt; ClientBuilder</h4></section></summary><div class=\"docblock\"><p>Creates a <code>ClientBuilder</code> to configure a <code>Client</code>.</p>\n<p>This is the same as <code>ClientBuilder::new()</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">get</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>GET</code> request to a URL.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">post</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>POST</code> request to a URL.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.put\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">put</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>PUT</code> request to a URL.</p>\n<h5 id=\"errors-2\"><a class=\"doc-anchor\" href=\"#errors-2\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.patch\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">patch</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>PATCH</code> request to a URL.</p>\n<h5 id=\"errors-3\"><a class=\"doc-anchor\" href=\"#errors-3\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">delete</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>DELETE</code> request to a URL.</p>\n<h5 id=\"errors-4\"><a class=\"doc-anchor\" href=\"#errors-4\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">head</a>&lt;U&gt;(&amp;self, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Convenience method to make a <code>HEAD</code> request to a URL.</p>\n<h5 id=\"errors-5\"><a class=\"doc-anchor\" href=\"#errors-5\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.request\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">request</a>&lt;U&gt;(&amp;self, method: Method, url: U) -&gt; RequestBuilder<div class=\"where\">where\n    U: IntoUrl,</div></h4></section></summary><div class=\"docblock\"><p>Start building a <code>Request</code> with the <code>Method</code> and <code>Url</code>.</p>\n<p>Returns a <code>RequestBuilder</code>, which will allow setting headers and\nthe request body before sending.</p>\n<h5 id=\"errors-6\"><a class=\"doc-anchor\" href=\"#errors-6\">§</a>Errors</h5>\n<p>This method fails whenever the supplied <code>Url</code> cannot be parsed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.execute\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">execute</a>(\n    &amp;self,\n    request: Request,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Response, Error&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Executes a <code>Request</code>.</p>\n<p>A <code>Request</code> can be built manually with <code>Request::new()</code> or obtained\nfrom a RequestBuilder with <code>RequestBuilder::build()</code>.</p>\n<p>You should prefer to use the <code>RequestBuilder</code> and\n<code>RequestBuilder::send()</code>.</p>\n<h5 id=\"errors-7\"><a class=\"doc-anchor\" href=\"#errors-7\">§</a>Errors</h5>\n<p>This method fails if there was an error while sending request,\nredirect loop was detected or redirect limit was exhausted.</p>\n</div></details></div></details>",0,"hopr_chain_api::DefaultHttpRequestor"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Service%3CRequest%3E-for-ReqwestClient\" class=\"impl\"><a href=\"#impl-Service%3CRequest%3E-for-ReqwestClient\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Service&lt;Request&gt; for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Response\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Response\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Response</a> = Response</h4></section></summary><div class='docblock'>Responses given by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Error</a> = Error</h4></section></summary><div class='docblock'>Errors produced by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Future</a> = Pending</h4></section></summary><div class='docblock'>The future response value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_ready</a>(\n    &amp;mut self,\n    _cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, &lt;Client as Service&lt;Request&gt;&gt;::Error&gt;&gt;</h4></section></summary><div class='docblock'>Returns <code>Poll::Ready(Ok(()))</code> when the service is able to process requests. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">call</a>(&amp;mut self, req: Request) -&gt; &lt;Client as Service&lt;Request&gt;&gt;::Future</h4></section></summary><div class='docblock'>Process the request and return the response asynchronously. <a>Read more</a></div></details></div></details>","Service<Request>","hopr_chain_api::DefaultHttpRequestor"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[16376]}