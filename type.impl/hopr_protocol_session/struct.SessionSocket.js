(function() {
    var type_impls = Object.fromEntries([["hopr_protocol_session",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#394-399\">Source</a><a href=\"#impl-AsyncRead-for-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S: <a class=\"trait\" href=\"hopr_protocol_session/trait.SocketState.html\" title=\"trait hopr_protocol_session::SocketState\">SocketState</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; AsyncRead for <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#396-398\">Source</a><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut [<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>buf</code>. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_read_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;mut [<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSliceMut.html\" title=\"struct std::io::IoSliceMut\">IoSliceMut</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to read from the <code>AsyncRead</code> into <code>bufs</code> using vectored\nIO operations. <a>Read more</a></div></details></div></details>","AsyncRead","hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncRead-for-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#437-449\">Source</a><a href=\"#impl-AsyncRead-for-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S: <a class=\"trait\" href=\"hopr_protocol_session/trait.SocketState.html\" title=\"trait hopr_protocol_session::SocketState\">SocketState</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; AsyncRead for <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_read\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#439-448\">Source</a><a href=\"#method.poll_read\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_read</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;mut ReadBuf&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to read from the <code>AsyncRead</code> into <code>buf</code>. <a>Read more</a></div></details></div></details>","AsyncRead","hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#401-434\">Source</a><a href=\"#impl-AsyncWrite-for-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S: <a class=\"trait\" href=\"hopr_protocol_session/trait.SocketState.html\" title=\"trait hopr_protocol_session::SocketState\">SocketState</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; AsyncWrite for <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#403-421\">Source</a><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#424-426\">Source</a><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to flush the object, ensuring that any buffered data reach\ntheir destination. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_close\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#429-433\">Source</a><a href=\"#method.poll_close\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_close</a>(self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;, cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"type\" href=\"https://doc.rust-lang.org/nightly/std/io/error/type.Result.html\" title=\"type std::io::error::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to close the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>bufs</code> into the object using vectored\nIO operations. <a>Read more</a></div></details></div></details>","AsyncWrite","hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsyncWrite-for-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#452-467\">Source</a><a href=\"#impl-AsyncWrite-for-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S: <a class=\"trait\" href=\"hopr_protocol_session/trait.SocketState.html\" title=\"trait hopr_protocol_session::SocketState\">SocketState</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; AsyncWrite for <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#454-456\">Source</a><a href=\"#method.poll_write\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    buf: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempt to write bytes from <code>buf</code> into the object. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#459-461\">Source</a><a href=\"#method.poll_flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_flush</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Attempts to flush the object, ensuring that any buffered data reach\ntheir destination. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_shutdown\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#464-466\">Source</a><a href=\"#method.poll_shutdown\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_shutdown</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Initiates or attempts to shut down this writer, returning success when\nthe I/O connection has completely shut down. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_write_vectored\" class=\"method trait-impl\"><a href=\"#method.poll_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">poll_write_vectored</a>(\n    self: <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;&amp;mut Self&gt;,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n    bufs: &amp;[<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/struct.IoSlice.html\" title=\"struct std::io::IoSlice\">IoSlice</a>&lt;'_&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Like <a href=\"AsyncWrite::poll_write\"><code>poll_write</code></a>, except that it writes from a slice of buffers. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_write_vectored\" class=\"method trait-impl\"><a href=\"#method.is_write_vectored\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">is_write_vectored</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Determines if this writer has an efficient <a href=\"AsyncWrite::poll_write_vectored\"><code>poll_write_vectored</code></a>\nimplementation. <a>Read more</a></div></details></div></details>","AsyncWrite","hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#210-392\">Source</a><a href=\"#impl-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S: <a class=\"trait\" href=\"hopr_protocol_session/trait.SocketState.html\" title=\"trait hopr_protocol_session::SocketState\">SocketState</a>&lt;C&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + 'static&gt; <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#213-391\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hopr_protocol_session/struct.SessionSocket.html#tymethod.new\" class=\"fn\">new</a>&lt;T&gt;(\n    transport: T,\n    state: S,\n    cfg: <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocketConfig.html\" title=\"struct hopr_protocol_session::SessionSocketConfig\">SessionSocketConfig</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"hopr_protocol_session/errors/enum.SessionError.html\" title=\"enum hopr_protocol_session::errors::SessionError\">SessionError</a>&gt;<div class=\"where\">where\n    T: AsyncRead + AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates a stateful socket with frame inspection capabilities - suitable for communication\nrequiring TCP-like delivery guarantees.</p>\n</div></details></div></details>",0,"hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SessionSocket%3CC,+Stateless%3CC%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#87-208\">Source</a><a href=\"#impl-SessionSocket%3CC,+Stateless%3CC%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, <a class=\"struct\" href=\"hopr_protocol_session/struct.Stateless.html\" title=\"struct hopr_protocol_session::Stateless\">Stateless</a>&lt;C&gt;&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_stateless\" class=\"method\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#92-207\">Source</a><h4 class=\"code-header\">pub fn <a href=\"hopr_protocol_session/struct.SessionSocket.html#tymethod.new_stateless\" class=\"fn\">new_stateless</a>&lt;T, I&gt;(\n    id: I,\n    transport: T,\n    cfg: <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocketConfig.html\" title=\"struct hopr_protocol_session::SessionSocketConfig\">SessionSocketConfig</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"hopr_protocol_session/errors/enum.SessionError.html\" title=\"enum hopr_protocol_session::errors::SessionError\">SessionError</a>&gt;<div class=\"where\">where\n    T: AsyncRead + AsyncWrite + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> + 'static,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new stateless socket suitable for fast UDP-like communication.</p>\n<p>Note that this results in a faster socket than if created via <a href=\"hopr_protocol_session/struct.SessionSocket.html#method.new\" title=\"associated function hopr_protocol_session::SessionSocket::new\"><code>SessionSocket::new</code></a> with\n<a href=\"hopr_protocol_session/struct.Stateless.html\" title=\"struct hopr_protocol_session::Stateless\"><code>Stateless</code></a>. This is because the frame inspector does not need to be instantiated.</p>\n</div></details></div></details>",0,"hopr_protocol_session::UnreliableSocket"],["<section id=\"impl-Unpin-for-SessionSocket%3CC,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/hopr_protocol_session/socket/mod.rs.html#77\">Source</a><a href=\"#impl-Unpin-for-SessionSocket%3CC,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'pin, const C: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>, S&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a> for <a class=\"struct\" href=\"hopr_protocol_session/struct.SessionSocket.html\" title=\"struct hopr_protocol_session::SessionSocket\">SessionSocket</a>&lt;C, S&gt;<div class=\"where\">where\n    PinnedFieldsOf&lt;__SessionSocket&lt;'pin, C, S&gt;&gt;: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Unpin.html\" title=\"trait core::marker::Unpin\">Unpin</a>,</div></h3></section>","Unpin","hopr_protocol_session::UnreliableSocket","hopr_protocol_session::ReliableSocket"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[26579]}