(function() {
    var type_impls = Object.fromEntries([["migration",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-Clone-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#245-247\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","migration::sea_orm::DbBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DatabaseBackend\" class=\"impl\"><a href=\"#impl-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_prefix_of\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"migration/sea_orm/enum.DatabaseBackend.html#tymethod.is_prefix_of\" class=\"fn\">is_prefix_of</a>(self, base_url: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check if the URI is the same as the specified database backend.\nReturns true if they match.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>Panics if <code>base_url</code> cannot be parsed as <code>Url</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.build\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"migration/sea_orm/enum.DatabaseBackend.html#tymethod.build\" class=\"fn\">build</a>&lt;S&gt;(&amp;self, statement: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;S</a>) -&gt; <a class=\"struct\" href=\"migration/sea_orm/struct.Statement.html\" title=\"struct migration::sea_orm::Statement\">Statement</a><div class=\"where\">where\n    S: <a class=\"trait\" href=\"migration/sea_orm/trait.StatementBuilder.html\" title=\"trait migration::sea_orm::StatementBuilder\">StatementBuilder</a>,</div></h4></section></summary><div class=\"docblock\"><p>Build an SQL <a href=\"migration/sea_orm/struct.Statement.html\" title=\"struct migration::sea_orm::Statement\">Statement</a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_query_builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"migration/sea_orm/enum.DatabaseBackend.html#tymethod.get_query_builder\" class=\"fn\">get_query_builder</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"migration/trait.QueryBuilder.html\" title=\"trait migration::QueryBuilder\">QueryBuilder</a>&gt;</h4></section></summary><div class=\"docblock\"><p>A helper for building SQL queries</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.support_returning\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"migration/sea_orm/enum.DatabaseBackend.html#tymethod.support_returning\" class=\"fn\">support_returning</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check if the database supports <code>RETURNING</code> syntax on insert and update</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boolean_value\" class=\"method\"><h4 class=\"code-header\">pub fn <a href=\"migration/sea_orm/enum.DatabaseBackend.html#tymethod.boolean_value\" class=\"fn\">boolean_value</a>(&amp;self, boolean: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a>) -&gt; <a class=\"enum\" href=\"migration/enum.Value.html\" title=\"enum migration::Value\">Value</a></h4></section></summary><div class=\"docblock\"><p>A getter for database dependent boolean value</p>\n</div></details></div></details>",0,"migration::sea_orm::DbBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-Debug-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","migration::sea_orm::DbBackend"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-PartialEq-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#264\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","migration::sea_orm::DbBackend"],["<section id=\"impl-Copy-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-Copy-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section>","Copy","migration::sea_orm::DbBackend"],["<section id=\"impl-Eq-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-Eq-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section>","Eq","migration::sea_orm::DbBackend"],["<section id=\"impl-StructuralPartialEq-for-DatabaseBackend\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-DatabaseBackend\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"enum\" href=\"migration/sea_orm/enum.DatabaseBackend.html\" title=\"enum migration::sea_orm::DatabaseBackend\">DatabaseBackend</a></h3></section>","StructuralPartialEq","migration::sea_orm::DbBackend"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11484]}