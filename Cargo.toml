[workspace]

exclude = ["vendor/cargo/scale-info-2.10.0"]

resolver = "2"

members = [
  "chain/actions",
  "chain/api",
  "chain/indexer",
  "chain/rpc",
  "chain/types",
  "common/async-runtime",
  "common/internal-types",
  "common/network-types",
  "common/parallelize",
  "common/primitive-types",
  "crypto/packet",
  "crypto/random",
  "crypto/sphinx",
  "crypto/types",
  "db/api",
  "db/entity",
  "db/migration",
  "db/sql",
  "ethereum/bindings",
  "hopli",
  "hopr-socks/hopr-socks-server",
  "hopr/hopr-lib",
  "hoprd/hoprd",
  "hoprd/inbox",
  "hoprd/keypair",
  "hoprd/rest-api",
  "logic/path",
  "logic/strategy",
  "misc/metrics",
  "misc/platform",
  "transport/api",
  "transport/network",
  "transport/p2p",
  "transport/protocol",
  "transport/session",
]

[workspace.dependencies]
anyhow = "1.0.86"
aquamarine = "0.5.0"
async-broadcast = "0.7.1"
async-channel = "2.3.1"
async-lock = "3.4.0"
async-signal = "0.2.8"
async-std = { version = "1.12.0", features = ["attributes", "unstable"] }
async-stream = "0.3.5"
async-trait = "0.1.80"
atomic_enum = "0.3.0"
base64 = "0.22.1"
bimap = "0.6.3"
bincode = "1.3.3"
bloomfilter = { version = "1.0.13", features = ["serde"] }
chrono = { version = "0.4.38", default-features = false }
clap = { version = "4.5.7", features = ["derive", "env", "string"] }
const_format = "0.2.32"
criterion = { version = "0.5.1", features = ["async", "html_reports"] }
crossbeam-skiplist = "0.1.3"
dashmap = "6.0.0"
divan = "0.1.14"
env_logger = "0.11.3"
ethers = { version = "2.0.10", default-features = false }
futures = "0.3.30"
futures-concurrency = "7.6.1"
futures-timer = "3.0.3"
generic-array = { version = "0.14.7", features = ["zeroize"] }
getrandom = "0.2.15"
hex = "0.4.3"
hex-literal = "0.4.1"
lazy_static = "1.4.0"
libp2p = { version = "0.53.2" }
libp2p-identity = { version = "0.2.9", features = [
  "peerid",
  "ed25519",
  "rand",
] }
libp2p-mplex = "0.41.0"
mockall = "0.12.1"
mockito = "1.4.0"
moka = { version = "0.12.7", features = ["future"] }
more-asserts = "0.3.1"
multiaddr = "0.18.1"
num_enum = "0.7.2"
parameterized = "2.0.0"
primitive-types = { version = "0.12.2", features = ["serde"] }
rand = "0.8.5"
rayon = "1.10.0"
regex = "1.10.5"
reqwest = { version = "0.12.5" }
ringbuffer = "0.15.0"
rust-stream-ext-concurrent = "1.0.0"
sea-orm = { version = "0.12.15", features = [
  "sqlx-sqlite",
  "with-chrono",
  "debug-print",
] }
sea-orm-cli = { version = "0.12.15", features = ["codegen"] }
sea-orm-migration = { version = "0.12.15", features = [
  "sqlx-sqlite",
  "with-chrono",
] }
semver = "1.0.23"
serde = { version = "1.0.203", features = ["derive"] }
serde_bytes = "0.11.14"
serde_json = "1.0.117"
serde_repr = "0.1.19"
serde_with = { version = "3.8.1" }
serde_yaml = { version = "0.9.33" }
serial_test = "3.1.1"
signal-hook = "0.3.17"
smart-default = "0.7.1"
sqlx = { version = "0.7.4", default-features = false, features = [
  "sqlite",
  "macros",
  "migrate",
] }
strum = { version = "0.26.2", features = ["derive"] }
tempfile = "3.10.1"
thiserror = "1.0.61"
tokio = { version = "1.38.0", features = ["rt-multi-thread", "macros"] }
tokio-util = { version = "0.7.11", features = ["compat"] }
tracing = { version = "0.1.40" }
tracing-futures = { version = "0.2.5" }
tracing-subscriber = { version = "0.3.18", features = [
  "env-filter",
  "fmt",
  "registry",
  "std",
] }
tracing-test = { version = "0.2.5", features = ["no-env-filter"] }
typenum = "1.17.0"
uuid = { version = "1.8.0" }
validator = { version = "0.18.1", features = ["derive"] }

bindings = { path = "ethereum/bindings", default-features = false }
chain-actions = { path = "chain/actions", default-features = false }
chain-api = { path = "chain/api", default-features = false }
chain-indexer = { path = "chain/indexer", default-features = false }
chain-rpc = { path = "chain/rpc", default-features = false }
chain-types = { path = "chain/types", default-features = false }
core-network = { path = "transport/network", default-features = false }
core-path = { path = "logic/path", default-features = false }
core-protocol = { path = "transport/protocol", default-features = false }
core-transport = { path = "transport/api", default-features = false }
hopr-async-runtime = { path = "common/async-runtime" }
hopr-crypto-packet = { path = "crypto/packet", default-features = false }
hopr-crypto-random = { path = "crypto/random", default-features = false }
hopr-crypto-sphinx = { path = "crypto/sphinx", default-features = false, features = [
  "x25519",
] }
hopr-crypto-types = { path = "crypto/types", default-features = false }
hopr-db-api = { path = "db/api" }
hopr-db-entity = { path = "db/entity" }
hopr-db-migration = { path = "db/migration" }
hopr-db-sql = { path = "db/sql" }
hopr-internal-types = { path = "common/internal-types", default-features = false }
hopr-lib = { path = "hopr/hopr-lib", default-features = false }
hopr-metrics = { path = "misc/metrics", default-features = false }
hopr-network-types = { path = "common/network-types", default-features = false }
hopr-parallelize = { path = "common/parallelize" }
hopr-platform = { path = "misc/platform" }
hopr-primitive-types = { path = "common/primitive-types", default-features = false }
hopr-strategy = { path = "logic/strategy", default-features = false }
hopr-transport-p2p = { path = "transport/p2p", default-features = false }
hopr-transport-session = { path = "transport/session" }
hoprd-api = { path = "hoprd/rest-api", default-features = false }
hoprd-inbox = { path = "hoprd/inbox", default-features = false }
hoprd-keypair = { path = "hoprd/keypair", default-features = false }

# [build]
# rustflags = ["-C", "link-arg=-fuse-ld=lld"]       # needs the "pkgs.llvmPackages.bintools" nix package

[profile.release]
codegen-units = 1
lto = "fat"
panic = "abort"
strip = true
opt-level = 3
