[workspace]

resolver = "2"

members = [
  "chain/actions",
  "chain/api",
  "chain/indexer",
  "chain/rpc",
  "chain/types",
  "common/async-runtime",
  "common/internal-types",
  "common/network-types",
  "common/parallelize",
  "common/primitive-types",
  "crypto/packet",
  "crypto/random",
  "crypto/sphinx",
  "crypto/types",
  "db/api",
  "db/entity",
  "db/migration",
  "db/sql",
  "ethereum/bindings",
  "hopli",
  "hopr/hopr-lib",
  "hoprd/hoprd",
  "hoprd/keypair",
  "hoprd/rest-api",
  "logic/path",
  "logic/strategy",
  "misc/metrics",
  "misc/platform",
  "transport/api",
  "transport/identity",
  "transport/mixer",
  "transport/network",
  "transport/packet",
  "transport/p2p",
  "transport/protocol",
  "transport/session",
  "transport/ticket-aggregation",
]

[workspace.dependencies]
alloy = { version = "1.0.4", default-features = false, features = [
  "essentials",
  "json-rpc",
  "node-bindings",
  "contract",
  "k256",
  "std",
] }
anyhow = "1.0.98"
aquamarine = "0.6.0"
arrayvec = { version = "0.7.6", features = ["serde"] }
async-channel = "2.3.1"
async-lock = "3.4.0"
async-signal = "0.2.10"
async-std = { version = "1.13.1", features = ["attributes", "unstable"] }
async-std-resolver = { version = "0.24.4" }
async-stream = "0.3.6"
async-trait = "0.1.88"
asynchronous-codec = { version = "0.7.0", features = ["cbor"] }
atomic_enum = "0.3.0"
axum = { version = "0.8.4", features = ["ws", "http2"] }
axum-extra = { version = "0.10.1", features = ["query"] }
backon = { version = "1.5.0", default-features = false }
base64 = "0.22.1"
bigdecimal = "0.4.8"
bimap = "0.6.3"
bincode = { version = "2.0.1", features = ["serde"] }
bitvec = "1.0.1"
bloomfilter = { version = "3.0.1", features = ["serde"] }
bytesize = { version = "2.0.1", features = ["serde"] }
cbor4ii = { version = "1.0.0" }
cfg_eval = "0.1.2"
cfg-if = "1.0.0"
chrono = { version = "0.4.41", default-features = false }
clap = { version = "4.5.38", features = ["derive", "env", "string"] }
const_format = "0.2.34"
console-subscriber = "0.4.1"
criterion = { version = "0.6.0", features = ["async_tokio", "html_reports"] }
crossbeam-queue = "0.3.12"
crossbeam-skiplist = "0.1.3"
ctor = "0.4.2"
ctr = "0.9.2"
dashmap = "6.1.0"
divan = "0.1.21"
env_logger = "0.11.8"
either = "1.15.0"
flume = "0.11.1"
float-cmp = "0.10.0"
futures = "0.3.31"
futures-concurrency = "7.6.3"
futures-timer = "3.0.3"
futures-time = "3.0.0"
generic-array = "1.2.0"
glob = "0.3.2"
governor = { version = "0.10" }
hex = "0.4.3"
hex-literal = "1.0.0"
hickory-resolver = "0.24.4" # ignored in renovate, cannot be updated, until libp2p-dns is updated
http = "1.3.1"
k256 = { version = "0.13.4", features = [
  "arithmetic",
  "ecdh",
  "hash2curve",
  "serde",
] }
lazy_static = "1.5.0"
libp2p = { version = "0.55.0" }
libp2p-identity = { version = "0.2.11", features = [
  "peerid",
  "ed25519",
  "rand",
] }
libp2p-stream = { version = "0.3.0-alpha" }
mockall = "0.13.1"
mockito = "1.7.0"
moka = { version = "0.12.10", features = ["future"] }
more-asserts = "0.3.1"
multiaddr = "0.18.2"
num_enum = "0.7.3"
opentelemetry = { version = "0.29.1" }
opentelemetry-otlp = { version = "0.29.0", default-features = false }
opentelemetry_sdk = { version = "0.29.0" }
tracing-opentelemetry = { version = "0.30.0" }
temp-env = "0.3.6"
parameterized = "2.0.0"
petgraph = { version = "0.8.1", features = ["serde-1"] }
primitive-types = { version = "0.12.2", features = [ # ignored in renovate, primitive-types 0.13 not compatible with ethers.rs
  "serde",
] }
proc-macro-regex = "~1.1.0"
prometheus = "0.14.0"
rand = "0.8.5" # ignored in renovate, cannot be updated, dependencies reference old ones
rand_distr = "0.4.3" # ignored in renovate, cannot be updated, dependencies reference old ones
rayon = "1.10.0"
regex = "1.11.1"
reqwest = { version = "0.12.15", features = ["json"] }
ringbuffer = "0.15.0"
rpassword = "7.4.0"
rust-stream-ext-concurrent = "1.0.0"
scrypt = { version = "0.11.0", default-features = false }
sea-orm = { version = "1.1.11", features = [ # ?
  "sqlx-sqlite",
  "with-chrono",
  "debug-print",
] }
sea-orm-cli = { version = "1.1.11", features = ["codegen"] }
sea-orm-migration = { version = "1.1.11", features = [
  "sqlx-sqlite",
  "with-chrono",
] }
sea-query = { version = "0.32.5", default-features = false }
sea-query-binder = { version = "0.7.0", default-features = false, features = [
  "with-chrono",
  "sqlx-sqlite",
  "runtime-tokio-rustls",
] }
semver = "1.0.26"
serde = { version = "1.0.219", features = ["derive"] }
serde_bytes = "0.11.17"
serde_json = "1.0.140"
serde_repr = "0.1.20"
serde_with = { version = "3.12.0", features = ["base64"] }
serde_yaml = { version = "0.9.34+deprecated" }
serial_test = "3.2.0"
sha3 = "0.10.8"
signal-hook = "0.3.18"
smart-default = "0.7.1"
socket2 = "0.5.9"
sqlx = { version = "0.8.5", default-features = false, features = [
  "sqlite",
  "macros",
  "migrate",
] }
strum = { version = "0.27.1", features = ["derive"] }
subtle = "2.6.1"
tempfile = "3.20.0"
test-log = { version = "0.2.17", features = ["trace"] }
thiserror = "2.0.12"
tokio = { version = "1.45.0", features = [
  "rt-multi-thread",
  "macros",
  "tracing",
] }
tokio-util = { version = "0.7.15", default-features = false, features = [
  "codec",
  "compat",
] }
tokio-retry = "0.3.0"
tower = { version = "0.5", default-features = false, features = ["util"] }
tracing = { version = "0.1.41" }
tracing-futures = { version = "0.2.5" }
tracing-subscriber = { version = "0.3.19", features = [
  "env-filter",
  "fmt",
  "registry",
  "std",
] }
tracing-test = { version = "0.2.5", features = ["no-env-filter"] }
typenum = "1.18.0"
uuid = { version = "1.16.0" }
url = { version = "2.5.4", features = ["serde"] }
validator = { version = "0.20.0", features = ["derive"] }
vergen-gix = { version = "1.0.9", features = ["build"] }
void = "1.0.2"


hopr-async-runtime = { path = "common/async-runtime" }
hopr-bindings = { path = "ethereum/bindings", default-features = false }
hopr-chain-actions = { path = "chain/actions", default-features = false }
hopr-chain-api = { path = "chain/api", default-features = false }
hopr-chain-indexer = { path = "chain/indexer", default-features = false }
hopr-chain-rpc = { path = "chain/rpc", default-features = false }
hopr-chain-types = { path = "chain/types", default-features = false }
hopr-crypto-packet = { path = "crypto/packet", default-features = false }
hopr-crypto-random = { path = "crypto/random", default-features = false }
hopr-crypto-sphinx = { path = "crypto/sphinx", default-features = false, features = [
  "x25519",
] }
hopr-crypto-types = { path = "crypto/types", default-features = false }
hopr-db-api = { path = "db/api" }
hopr-db-entity = { path = "db/entity" }
hopr-db-migration = { path = "db/migration" }
hopr-db-sql = { path = "db/sql" }
hopr-internal-types = { path = "common/internal-types", default-features = false }
hopr-lib = { path = "hopr/hopr-lib", default-features = false }
hopr-metrics = { path = "misc/metrics", default-features = false }
hopr-network-types = { path = "common/network-types", default-features = false }
hopr-path = { path = "logic/path" }
hopr-parallelize = { path = "common/parallelize" }
hopr-platform = { path = "misc/platform" }
hopr-primitive-types = { path = "common/primitive-types", default-features = false }
hopr-strategy = { path = "logic/strategy", default-features = false }
hopr-transport = { path = "transport/api" }
hopr-transport-identity = { path = "transport/identity" }
hopr-transport-network = { path = "transport/network" }
hopr-transport-mixer = { path = "transport/mixer" }
hopr-transport-protocol = { path = "transport/protocol" }
hopr-transport-packet = { path = "transport/packet" }
hopr-transport-p2p = { path = "transport/p2p" }
hopr-transport-session = { path = "transport/session" }
hopr-transport-ticket-aggregation = { path = "transport/ticket-aggregation" } # dead package waiting for reimplementation as a session protocol
hoprd-api = { path = "hoprd/rest-api", default-features = false }
hoprd-keypair = { path = "hoprd/keypair", default-features = false }

[profile.dev]
panic = "abort"

# this profile focuses on speed of compilation
[profile.candidate]
inherits = "release"
codegen-units = 16   # normal release default
lto = false          # do the smallest amount of link-time optimization
panic = "abort"
strip = true
opt-level = 2

# perform minimal optimizations to prevent stack overflows in large tests
[profile.test]
opt-level = 1

# this profile focuses on best runtime performance and smallest binary size
[profile.release]
codegen-units = 1
lto = "fat"
panic = "abort"
strip = true
opt-level = 3
