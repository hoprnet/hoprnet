ARG HOPR_TOOLCHAIN_IMAGE=${HOPR_TOOLCHAIN_IMAGE:-hopr-toolchain}

# Run HOPRd  within a single container using yarn
FROM ${HOPR_TOOLCHAIN_IMAGE} as build

WORKDIR /app/hoprnet

# Get all we need from the monorepo
COPY .yarn .yarn/
COPY packages packages/
COPY package.json .yarnrc.yml yarn.lock tsconfig.json Makefile Makefile.deps Cargo.toml Cargo.lock ./

LABEL description="Launches a hardhat node running a local network with the HOPR contracts deployed and available."

WORKDIR /app/hoprnet/packages/ethereum

# Turn Ethereum package into hardhat package
RUN mv package.hardhat.json package.json && mv tsconfig.hardhat.json tsconfig.json 

WORKDIR /app/hoprnet

RUN CI=true make deps package=hopr-ethereum

RUN NO_NEXT=true make build package=ethereum

# Remove all unused packages
RUN rm -R packages/avado packages/connect packages/cover-traffic-daemon packages/core-ethereum packages/hoprd

WORKDIR /app/hoprnet/packages/ethereum/

# # use alpine version of node for smallest image sizes
FROM node:16-alpine as runtime

WORKDIR /app/hardhat

RUN apk add --no-cache tini libc6-compat make

# Required to make hardhat work
RUN ln -s /lib/libc.musl-x86_64.so.1 /lib/ld-linux-x86-64.so.2

COPY --from=build /app/hoprnet/.yarn .yarn/
COPY Makefile Makefile.deps .yarnrc.yml package.json yarn.lock tsconfig.json ./
COPY --from=build /app/hoprnet/node_modules node_modules/
COPY --from=build /app/hoprnet/packages/ packages/

# Rerun yarn to recreate symlinks
RUN CI=true NO_CARGO=true make deps package=hopr-ethereum

WORKDIR /app/hardhat/packages/ethereum

RUN yarn run compile

EXPOSE 8545

ENV NODE_OPTIONS=--max_old_space_size=1024

ENTRYPOINT ["/sbin/tini", "--", "yarn", "run", "network", "--network", "hardhat", "--show-stack-traces"]
