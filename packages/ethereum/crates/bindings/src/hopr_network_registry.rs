pub use hopr_network_registry::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types
)]
pub mod hopr_network_registry {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requirementImplementation\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"ArrayLengthNotMatch\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"type\":\"error\",\"name\":\"CannotOperateForNode\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"GloballyDisabledRegistry\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"GloballyEnabledRegistry\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"type\":\"error\",\"name\":\"NodeAlreadyRegisterd\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"type\":\"error\",\"name\":\"NodeNotYetRegisterd\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"type\":\"error\",\"name\":\"NodeRegisterdToOtherAccount\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"NotEnoughAllowanceToRegisterNode\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Deregistered\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"DeregisteredByManager\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"bool\",\"name\":\"eligibility\",\"type\":\"bool\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"EligibilityUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"NetworkRegistryStatusUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Registered\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RegisteredByManager\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"requirementImplementation\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RequirementUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleAdminChanged\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleGranted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleRevoked\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"countRegisterdNodesPerAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"disableRegistry\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"enableRegistry\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"enabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"grantRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isAccountEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isNodeRegisteredAndEligible\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isNodeRegisteredByAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"nodeAddresses\",\"type\":\"address[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"managerDeregister\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"stakingAccounts\",\"type\":\"address[]\",\"components\":[]},{\"internalType\":\"bool[]\",\"name\":\"eligibilities\",\"type\":\"bool[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"managerForceSync\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"stakingAccounts\",\"type\":\"address[]\",\"components\":[]},{\"internalType\":\"address[]\",\"name\":\"nodeAddresses\",\"type\":\"address[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"managerRegister\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"stakingAccounts\",\"type\":\"address[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"managerSync\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxAdditionalRegistrations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nodeRegisterdToAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"renounceRole\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"requirementImplementation\",\"outputs\":[{\"internalType\":\"contract IHoprNetworkRegistryRequirement\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"revokeRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"nodeAddresses\",\"type\":\"address[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"selfDeregister\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"nodeAddresses\",\"type\":\"address[]\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"selfRegister\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"selfSync\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_requirementImplementation\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateRequirementImplementation\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static HOPRNETWORKREGISTRY_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> =
        ::ethers::contract::Lazy::new(|| {
            ::ethers::core::utils::__serde_json::from_str(__ABI).expect("ABI is always valid")
        });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        98,
        0,
        0,
        17,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        0,
        30,
        63,
        56,
        3,
        128,
        98,
        0,
        30,
        63,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        98,
        0,
        0,
        52,
        145,
        98,
        0,
        2,
        106,
        86,
        91,
        98,
        0,
        0,
        65,
        96,
        0,
        131,
        98,
        0,
        1,
        0,
        86,
        91,
        98,
        0,
        0,
        92,
        96,
        0,
        128,
        81,
        96,
        32,
        98,
        0,
        30,
        31,
        131,
        57,
        129,
        81,
        145,
        82,
        131,
        98,
        0,
        1,
        0,
        86,
        91,
        98,
        0,
        0,
        119,
        96,
        0,
        128,
        81,
        96,
        32,
        98,
        0,
        30,
        31,
        131,
        57,
        129,
        81,
        145,
        82,
        130,
        98,
        0,
        1,
        0,
        86,
        91,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        5,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        96,
        64,
        81,
        127,
        138,
        196,
        178,
        235,
        119,
        73,
        247,
        92,
        91,
        153,
        184,
        152,
        229,
        71,
        253,
        97,
        93,
        215,
        164,
        36,
        230,
        131,
        86,
        234,
        25,
        107,
        125,
        174,
        116,
        45,
        108,
        50,
        144,
        96,
        0,
        144,
        162,
        96,
        64,
        81,
        96,
        1,
        144,
        127,
        139,
        200,
        95,
        37,
        227,
        233,
        51,
        151,
        143,
        9,
        148,
        8,
        179,
        187,
        62,
        183,
        99,
        11,
        118,
        247,
        69,
        95,
        46,
        32,
        91,
        203,
        192,
        167,
        128,
        225,
        126,
        114,
        144,
        96,
        0,
        144,
        162,
        80,
        80,
        80,
        98,
        0,
        2,
        180,
        86,
        91,
        98,
        0,
        1,
        12,
        130,
        130,
        98,
        0,
        1,
        16,
        86,
        91,
        80,
        80,
        86,
        91,
        98,
        0,
        1,
        28,
        130,
        130,
        98,
        0,
        1,
        59,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        98,
        0,
        1,
        54,
        144,
        130,
        98,
        0,
        1,
        219,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        98,
        0,
        1,
        12,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        98,
        0,
        1,
        151,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        98,
        0,
        1,
        242,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        98,
        0,
        1,
        251,
        86,
        91,
        144,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        98,
        0,
        2,
        68,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        98,
        0,
        1,
        245,
        86,
        91,
        80,
        96,
        0,
        98,
        0,
        1,
        245,
        86,
        91,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        2,
        101,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        96,
        132,
        134,
        3,
        18,
        21,
        98,
        0,
        2,
        128,
        87,
        96,
        0,
        128,
        253,
        91,
        98,
        0,
        2,
        139,
        132,
        98,
        0,
        2,
        77,
        86,
        91,
        146,
        80,
        98,
        0,
        2,
        155,
        96,
        32,
        133,
        1,
        98,
        0,
        2,
        77,
        86,
        91,
        145,
        80,
        98,
        0,
        2,
        171,
        96,
        64,
        133,
        1,
        98,
        0,
        2,
        77,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        97,
        27,
        91,
        128,
        98,
        0,
        2,
        196,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        196,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        144,
        16,
        208,
        124,
        17,
        97,
        0,
        249,
        87,
        128,
        99,
        202,
        21,
        200,
        115,
        17,
        97,
        0,
        151,
        87,
        128,
        99,
        207,
        179,
        115,
        95,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        207,
        179,
        115,
        95,
        20,
        97,
        3,
        218,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        3,
        226,
        87,
        128,
        99,
        227,
        210,
        160,
        113,
        20,
        97,
        3,
        245,
        87,
        128,
        99,
        236,
        135,
        98,
        28,
        20,
        97,
        4,
        8,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        202,
        21,
        200,
        115,
        20,
        97,
        3,
        172,
        87,
        128,
        99,
        202,
        245,
        245,
        1,
        20,
        97,
        3,
        191,
        87,
        128,
        99,
        203,
        235,
        175,
        224,
        20,
        97,
        3,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        160,
        94,
        15,
        109,
        17,
        97,
        0,
        211,
        87,
        128,
        99,
        160,
        94,
        15,
        109,
        20,
        97,
        3,
        85,
        87,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        3,
        104,
        87,
        128,
        99,
        165,
        96,
        93,
        165,
        20,
        97,
        3,
        112,
        87,
        128,
        99,
        199,
        236,
        171,
        143,
        20,
        97,
        3,
        131,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        144,
        16,
        208,
        124,
        20,
        97,
        3,
        15,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        3,
        58,
        87,
        128,
        99,
        156,
        127,
        100,
        59,
        20,
        97,
        3,
        77,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        17,
        97,
        1,
        102,
        87,
        128,
        99,
        78,
        177,
        128,
        92,
        17,
        97,
        1,
        64,
        87,
        128,
        99,
        78,
        177,
        128,
        92,
        20,
        97,
        2,
        195,
        87,
        128,
        99,
        111,
        251,
        249,
        136,
        20,
        97,
        2,
        214,
        87,
        128,
        99,
        118,
        89,
        58,
        57,
        20,
        97,
        2,
        233,
        87,
        128,
        99,
        141,
        117,
        59,
        45,
        20,
        97,
        2,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        2,
        125,
        87,
        128,
        99,
        63,
        165,
        132,
        87,
        20,
        97,
        2,
        144,
        87,
        128,
        99,
        65,
        182,
        73,
        101,
        20,
        97,
        2,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        39,
        176,
        64,
        161,
        17,
        97,
        1,
        162,
        87,
        128,
        99,
        39,
        176,
        64,
        161,
        20,
        97,
        2,
        47,
        87,
        128,
        99,
        42,
        45,
        238,
        226,
        20,
        97,
        2,
        68,
        87,
        128,
        99,
        44,
        51,
        202,
        251,
        20,
        97,
        2,
        87,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        2,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        201,
        87,
        128,
        99,
        35,
        141,
        175,
        224,
        20,
        97,
        1,
        241,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        254,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        220,
        97,
        1,
        215,
        54,
        96,
        4,
        97,
        22,
        43,
        86,
        91,
        97,
        4,
        29,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        5,
        84,
        97,
        1,
        220,
        144,
        96,
        255,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        97,
        2,
        12,
        54,
        96,
        4,
        97,
        22,
        85,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        232,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        61,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        4,
        72,
        86,
        91,
        0,
        91,
        97,
        2,
        33,
        97,
        2,
        82,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        4,
        171,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        101,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        5,
        93,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        120,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        5,
        199,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        139,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        5,
        241,
        86,
        91,
        97,
        2,
        33,
        97,
        2,
        158,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        96,
        3,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        190,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        6,
        116,
        86,
        91,
        97,
        1,
        220,
        97,
        2,
        209,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        7,
        151,
        86,
        91,
        97,
        1,
        220,
        97,
        2,
        228,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        7,
        232,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        247,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        7,
        243,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        10,
        54,
        96,
        4,
        97,
        23,
        95,
        86,
        91,
        97,
        9,
        136,
        86,
        91,
        97,
        3,
        34,
        97,
        3,
        29,
        54,
        96,
        4,
        97,
        23,
        203,
        86,
        91,
        97,
        11,
        2,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        232,
        86,
        91,
        97,
        1,
        220,
        97,
        3,
        72,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        11,
        26,
        86,
        91,
        97,
        2,
        66,
        97,
        11,
        67,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        99,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        11,
        113,
        86,
        91,
        97,
        2,
        33,
        96,
        0,
        129,
        86,
        91,
        97,
        1,
        220,
        97,
        3,
        126,
        54,
        96,
        4,
        97,
        23,
        237,
        86,
        91,
        97,
        12,
        196,
        86,
        91,
        97,
        3,
        34,
        97,
        3,
        145,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        96,
        4,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        97,
        3,
        186,
        54,
        96,
        4,
        97,
        22,
        85,
        86,
        91,
        97,
        13,
        19,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        205,
        54,
        96,
        4,
        97,
        24,
        70,
        86,
        91,
        97,
        13,
        42,
        86,
        91,
        97,
        2,
        66,
        97,
        14,
        68,
        86,
        91,
        97,
        2,
        66,
        97,
        14,
        183,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        240,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        15,
        47,
        86,
        91,
        96,
        2,
        84,
        97,
        3,
        34,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        129,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        90,
        5,
        24,
        15,
        96,
        224,
        27,
        20,
        128,
        97,
        4,
        66,
        87,
        80,
        97,
        4,
        66,
        130,
        97,
        15,
        84,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        4,
        96,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        138,
        196,
        178,
        235,
        119,
        73,
        247,
        92,
        91,
        153,
        184,
        152,
        229,
        71,
        253,
        97,
        93,
        215,
        164,
        36,
        230,
        131,
        86,
        234,
        25,
        107,
        125,
        174,
        116,
        45,
        108,
        50,
        144,
        96,
        0,
        144,
        162,
        80,
        80,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        89,
        170,
        39,
        65,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        179,
        84,
        78,
        130,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        249,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        29,
        145,
        144,
        97,
        25,
        52,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        5,
        83,
        87,
        97,
        5,
        75,
        129,
        131,
        97,
        25,
        99,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        80,
        96,
        0,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        5,
        117,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        5,
        193,
        87,
        97,
        5,
        175,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        5,
        149,
        87,
        97,
        5,
        149,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        5,
        170,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        97,
        15,
        150,
        86,
        91,
        128,
        97,
        5,
        185,
        129,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        5,
        120,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        5,
        226,
        129,
        97,
        15,
        137,
        86,
        91,
        97,
        5,
        236,
        131,
        131,
        97,
        15,
        243,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        6,
        102,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        110,
        16,
        57,
        55,
        182,
        50,
        185,
        144,
        51,
        55,
        185,
        16,
        57,
        178,
        182,
        51,
        96,
        137,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        6,
        112,
        130,
        130,
        97,
        16,
        21,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        6,
        140,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        5,
        193,
        87,
        96,
        0,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        6,
        171,
        87,
        97,
        6,
        171,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        6,
        192,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        128,
        97,
        7,
        7,
        87,
        96,
        64,
        81,
        99,
        22,
        56,
        121,
        21,
        96,
        227,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        7,
        43,
        131,
        97,
        25,
        165,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        131,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        144,
        85,
        81,
        145,
        146,
        132,
        22,
        145,
        127,
        145,
        118,
        10,
        16,
        1,
        245,
        49,
        236,
        43,
        238,
        134,
        2,
        190,
        85,
        173,
        43,
        17,
        89,
        70,
        94,
        223,
        245,
        187,
        205,
        65,
        210,
        7,
        3,
        116,
        42,
        77,
        66,
        145,
        144,
        163,
        80,
        80,
        128,
        128,
        97,
        7,
        143,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        6,
        143,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        7,
        175,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        128,
        97,
        7,
        216,
        87,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        7,
        225,
        129,
        97,
        16,
        55,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        66,
        130,
        97,
        16,
        55,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        8,
        22,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        65,
        87,
        96,
        0,
        131,
        131,
        131,
        129,
        129,
        16,
        97,
        8,
        53,
        87,
        97,
        8,
        53,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        8,
        74,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        97,
        8,
        114,
        51,
        131,
        97,
        16,
        237,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        8,
        248,
        87,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        8,
        155,
        131,
        97,
        25,
        140,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        51,
        144,
        129,
        23,
        144,
        145,
        85,
        144,
        81,
        144,
        145,
        127,
        10,
        49,
        238,
        157,
        70,
        168,
        40,
        136,
        75,
        129,
        0,
        60,
        132,
        152,
        21,
        110,
        166,
        170,
        21,
        185,
        181,
        75,
        221,
        14,
        240,
        181,
        51,
        217,
        235,
        165,
        126,
        85,
        145,
        163,
        97,
        9,
        44,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        9,
        44,
        87,
        96,
        64,
        81,
        99,
        91,
        83,
        59,
        161,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        80,
        80,
        128,
        128,
        97,
        9,
        57,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        8,
        25,
        86,
        91,
        80,
        97,
        9,
        75,
        51,
        97,
        16,
        55,
        86,
        91,
        97,
        9,
        104,
        87,
        96,
        64,
        81,
        99,
        3,
        238,
        111,
        87,
        96,
        226,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        96,
        1,
        144,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        0,
        144,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        9,
        160,
        129,
        97,
        15,
        137,
        86,
        91,
        131,
        130,
        20,
        97,
        9,
        192,
        87,
        96,
        64,
        81,
        99,
        237,
        136,
        47,
        113,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        132,
        129,
        16,
        21,
        97,
        10,
        250,
        87,
        96,
        0,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        9,
        223,
        87,
        97,
        9,
        223,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        9,
        244,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        144,
        80,
        96,
        0,
        135,
        135,
        132,
        129,
        129,
        16,
        97,
        10,
        10,
        87,
        97,
        10,
        10,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        10,
        31,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        21,
        97,
        10,
        102,
        87,
        96,
        64,
        81,
        99,
        91,
        83,
        59,
        161,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        10,
        138,
        131,
        97,
        25,
        140,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        148,
        134,
        22,
        148,
        133,
        23,
        144,
        85,
        81,
        145,
        146,
        145,
        127,
        4,
        225,
        234,
        164,
        218,
        24,
        247,
        231,
        66,
        164,
        237,
        187,
        233,
        237,
        227,
        108,
        223,
        117,
        247,
        147,
        187,
        3,
        171,
        33,
        88,
        192,
        135,
        127,
        28,
        175,
        43,
        147,
        145,
        144,
        163,
        80,
        80,
        128,
        128,
        97,
        10,
        242,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        9,
        195,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        7,
        225,
        144,
        131,
        97,
        17,
        143,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        11,
        102,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        11,
        111,
        51,
        97,
        15,
        150,
        86,
        91,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        11,
        148,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        12,
        186,
        87,
        96,
        0,
        131,
        131,
        131,
        129,
        129,
        16,
        97,
        11,
        179,
        87,
        97,
        11,
        179,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        11,
        200,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        97,
        11,
        240,
        51,
        131,
        97,
        16,
        237,
        86,
        91,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        3,
        97,
        12,
        114,
        87,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        12,
        27,
        131,
        97,
        25,
        165,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        144,
        85,
        81,
        51,
        145,
        127,
        21,
        154,
        138,
        233,
        72,
        252,
        198,
        231,
        248,
        181,
        73,
        92,
        13,
        115,
        233,
        21,
        152,
        68,
        10,
        248,
        166,
        40,
        23,
        36,
        108,
        9,
        237,
        194,
        194,
        141,
        186,
        138,
        145,
        163,
        97,
        12,
        165,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        97,
        12,
        165,
        87,
        96,
        64,
        81,
        99,
        191,
        79,
        221,
        115,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        80,
        80,
        128,
        128,
        97,
        12,
        178,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        11,
        151,
        86,
        91,
        80,
        97,
        6,
        112,
        51,
        97,
        15,
        150,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        21,
        128,
        97,
        12,
        227,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        91,
        21,
        97,
        12,
        240,
        87,
        80,
        96,
        0,
        97,
        4,
        66,
        86,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        130,
        22,
        145,
        22,
        20,
        144,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        4,
        66,
        144,
        97,
        17,
        155,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        13,
        66,
        129,
        97,
        15,
        137,
        86,
        91,
        129,
        81,
        131,
        20,
        97,
        13,
        99,
        87,
        96,
        64,
        81,
        99,
        237,
        136,
        47,
        113,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        14,
        61,
        87,
        130,
        129,
        129,
        81,
        129,
        16,
        97,
        13,
        128,
        87,
        97,
        13,
        128,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        21,
        97,
        13,
        222,
        87,
        96,
        1,
        133,
        133,
        131,
        129,
        129,
        16,
        97,
        13,
        161,
        87,
        97,
        13,
        161,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        13,
        182,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        14,
        43,
        86,
        91,
        96,
        0,
        133,
        133,
        131,
        129,
        129,
        16,
        97,
        13,
        242,
        87,
        97,
        13,
        242,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        14,
        7,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        91,
        128,
        97,
        14,
        53,
        129,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        13,
        102,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        14,
        92,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        14,
        127,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        96,
        64,
        81,
        96,
        0,
        144,
        127,
        139,
        200,
        95,
        37,
        227,
        233,
        51,
        151,
        143,
        9,
        148,
        8,
        179,
        187,
        62,
        183,
        99,
        11,
        118,
        247,
        69,
        95,
        46,
        32,
        91,
        203,
        192,
        167,
        128,
        225,
        126,
        114,
        144,
        130,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        14,
        207,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        21,
        97,
        14,
        243,
        87,
        96,
        64,
        81,
        99,
        237,
        26,
        12,
        119,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        139,
        200,
        95,
        37,
        227,
        233,
        51,
        151,
        143,
        9,
        148,
        8,
        179,
        187,
        62,
        183,
        99,
        11,
        118,
        247,
        69,
        95,
        46,
        32,
        91,
        203,
        192,
        167,
        128,
        225,
        126,
        114,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        15,
        74,
        129,
        97,
        15,
        137,
        86,
        91,
        97,
        5,
        236,
        131,
        131,
        97,
        16,
        21,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        121,
        101,
        219,
        11,
        96,
        224,
        27,
        20,
        128,
        97,
        4,
        66,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        97,
        4,
        66,
        86,
        91,
        97,
        15,
        147,
        129,
        51,
        97,
        17,
        165,
        86,
        91,
        80,
        86,
        91,
        97,
        15,
        159,
        129,
        97,
        16,
        55,
        86,
        91,
        21,
        97,
        15,
        204,
        87,
        96,
        64,
        81,
        96,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        0,
        144,
        163,
        80,
        86,
        91,
        96,
        64,
        81,
        96,
        0,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        131,
        144,
        163,
        80,
        86,
        91,
        97,
        15,
        253,
        130,
        130,
        97,
        17,
        254,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        5,
        236,
        144,
        130,
        97,
        18,
        130,
        86,
        91,
        97,
        16,
        31,
        130,
        130,
        97,
        18,
        151,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        5,
        236,
        144,
        130,
        97,
        18,
        252,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        89,
        170,
        39,
        65,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        179,
        84,
        78,
        130,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        16,
        133,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        16,
        169,
        145,
        144,
        97,
        25,
        52,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        16,
        188,
        87,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        16,
        97,
        16,
        228,
        87,
        80,
        96,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        54,
        22,
        180,
        17,
        96,
        226,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        131,
        129,
        22,
        96,
        36,
        131,
        1,
        82,
        96,
        0,
        146,
        22,
        144,
        99,
        216,
        90,
        208,
        68,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        17,
        64,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        17,
        100,
        145,
        144,
        97,
        25,
        188,
        86,
        91,
        144,
        80,
        128,
        97,
        5,
        236,
        87,
        96,
        64,
        81,
        99,
        7,
        65,
        73,
        103,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        131,
        97,
        19,
        17,
        86,
        91,
        96,
        0,
        97,
        4,
        66,
        130,
        84,
        144,
        86,
        91,
        97,
        17,
        175,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        97,
        6,
        112,
        87,
        97,
        17,
        188,
        129,
        97,
        19,
        59,
        86,
        91,
        97,
        17,
        199,
        131,
        96,
        32,
        97,
        19,
        77,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        17,
        216,
        146,
        145,
        144,
        97,
        25,
        253,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        130,
        82,
        97,
        6,
        93,
        145,
        96,
        4,
        1,
        97,
        26,
        114,
        86,
        91,
        97,
        18,
        8,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        97,
        6,
        112,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        18,
        62,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        20,
        233,
        86,
        91,
        97,
        18,
        161,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        21,
        97,
        6,
        112,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        21,
        56,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        19,
        40,
        87,
        97,
        19,
        40,
        97,
        25,
        118,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        4,
        66,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        19,
        92,
        131,
        96,
        2,
        97,
        26,
        165,
        86,
        91,
        97,
        19,
        103,
        144,
        96,
        2,
        97,
        26,
        188,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        19,
        127,
        87,
        97,
        19,
        127,
        97,
        24,
        23,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        19,
        169,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        96,
        3,
        96,
        252,
        27,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        19,
        196,
        87,
        97,
        19,
        196,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        15,
        96,
        251,
        27,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        19,
        243,
        87,
        97,
        19,
        243,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        20,
        23,
        132,
        96,
        2,
        97,
        26,
        165,
        86,
        91,
        97,
        20,
        34,
        144,
        96,
        1,
        97,
        26,
        188,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        20,
        154,
        87,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        20,
        86,
        87,
        97,
        20,
        86,
        97,
        25,
        118,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        20,
        108,
        87,
        97,
        20,
        108,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        20,
        147,
        129,
        97,
        25,
        165,
        86,
        91,
        144,
        80,
        97,
        20,
        37,
        86,
        91,
        80,
        131,
        21,
        97,
        7,
        225,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        21,
        48,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        97,
        4,
        66,
        86,
        91,
        80,
        96,
        0,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        128,
        21,
        97,
        22,
        33,
        87,
        96,
        0,
        97,
        21,
        92,
        96,
        1,
        131,
        97,
        25,
        99,
        86,
        91,
        133,
        84,
        144,
        145,
        80,
        96,
        0,
        144,
        97,
        21,
        112,
        144,
        96,
        1,
        144,
        97,
        25,
        99,
        86,
        91,
        144,
        80,
        129,
        129,
        20,
        97,
        21,
        213,
        87,
        96,
        0,
        134,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        21,
        144,
        87,
        97,
        21,
        144,
        97,
        25,
        118,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        128,
        135,
        96,
        0,
        1,
        132,
        129,
        84,
        129,
        16,
        97,
        21,
        179,
        87,
        97,
        21,
        179,
        97,
        25,
        118,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        128,
        131,
        32,
        144,
        145,
        1,
        146,
        144,
        146,
        85,
        145,
        130,
        82,
        96,
        1,
        136,
        1,
        144,
        82,
        96,
        64,
        144,
        32,
        131,
        144,
        85,
        91,
        133,
        84,
        134,
        144,
        128,
        97,
        21,
        230,
        87,
        97,
        21,
        230,
        97,
        26,
        207,
        86,
        91,
        96,
        1,
        144,
        3,
        129,
        129,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        96,
        0,
        144,
        85,
        144,
        85,
        133,
        96,
        1,
        1,
        96,
        0,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        0,
        32,
        96,
        0,
        144,
        85,
        96,
        1,
        147,
        80,
        80,
        80,
        80,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        145,
        80,
        80,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        7,
        225,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        103,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        22,
        133,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        7,
        225,
        130,
        97,
        22,
        110,
        86,
        91,
        96,
        0,
        128,
        131,
        96,
        31,
        132,
        1,
        18,
        97,
        22,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        22,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        32,
        131,
        1,
        145,
        80,
        131,
        96,
        32,
        130,
        96,
        5,
        27,
        133,
        1,
        1,
        17,
        21,
        97,
        22,
        234,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        32,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        23,
        27,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        39,
        133,
        130,
        134,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        150,
        144,
        149,
        80,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        70,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        97,
        23,
        86,
        96,
        32,
        132,
        1,
        97,
        22,
        110,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        64,
        133,
        135,
        3,
        18,
        21,
        97,
        23,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        132,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        23,
        141,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        153,
        136,
        131,
        137,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        150,
        80,
        148,
        80,
        96,
        32,
        135,
        1,
        53,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        23,
        178,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        23,
        191,
        135,
        130,
        136,
        1,
        97,
        22,
        165,
        86,
        91,
        149,
        152,
        148,
        151,
        80,
        149,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        9,
        131,
        97,
        22,
        110,
        86,
        91,
        145,
        80,
        97,
        23,
        86,
        96,
        32,
        132,
        1,
        97,
        22,
        110,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        21,
        21,
        129,
        20,
        97,
        15,
        147,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        97,
        22,
        133,
        129,
        97,
        24,
        45,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        64,
        132,
        134,
        3,
        18,
        21,
        97,
        24,
        91,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        24,
        115,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        127,
        135,
        131,
        136,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        149,
        80,
        147,
        80,
        96,
        32,
        145,
        80,
        133,
        130,
        1,
        53,
        129,
        129,
        17,
        21,
        97,
        24,
        153,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        1,
        96,
        31,
        129,
        1,
        136,
        19,
        97,
        24,
        170,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        130,
        129,
        17,
        21,
        97,
        24,
        188,
        87,
        97,
        24,
        188,
        97,
        24,
        23,
        86,
        91,
        128,
        96,
        5,
        27,
        96,
        64,
        81,
        96,
        31,
        25,
        96,
        63,
        131,
        1,
        22,
        129,
        1,
        129,
        129,
        16,
        134,
        130,
        17,
        23,
        21,
        97,
        24,
        225,
        87,
        97,
        24,
        225,
        97,
        24,
        23,
        86,
        91,
        96,
        64,
        82,
        145,
        130,
        82,
        132,
        130,
        1,
        147,
        80,
        130,
        129,
        1,
        133,
        1,
        145,
        138,
        131,
        17,
        21,
        97,
        24,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        133,
        1,
        146,
        91,
        130,
        132,
        16,
        21,
        97,
        25,
        36,
        87,
        97,
        25,
        21,
        132,
        97,
        24,
        59,
        86,
        91,
        133,
        82,
        147,
        133,
        1,
        147,
        146,
        133,
        1,
        146,
        97,
        25,
        4,
        86,
        91,
        128,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        70,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        25,
        158,
        87,
        97,
        25,
        158,
        97,
        25,
        77,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        129,
        97,
        25,
        180,
        87,
        97,
        25,
        180,
        97,
        25,
        77,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        206,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        7,
        225,
        129,
        97,
        24,
        45,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        25,
        244,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        25,
        220,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        26,
        53,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        25,
        217,
        86,
        91,
        112,
        1,
        3,
        75,
        153,
        3,
        107,
        75,
        155,
        155,
        75,
        115,
        57,
        3,
        147,
        123,
        99,
        41,
        96,
        125,
        27,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        26,
        102,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        25,
        217,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        26,
        145,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        25,
        217,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        49,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        226,
        153,
        79,
        141,
        111,
        96,
        10,
        212,
        115,
        219,
        168,
        44,
        10,
        137,
        10,
        183,
        175,
        250,
        203,
        134,
        13,
        51,
        101,
        244,
        116,
        186,
        163,
        220,
        4,
        162,
        229,
        87,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        59,
        178,
        116,
        97,
        50,
        61,
        5,
        100,
        213,
        232,
        202,
        51,
        3,
        196,
        1,
        247,
        54,
        199,
        118,
        11,
        106,
        9,
        124,
        161,
        185,
        248,
        23,
        160,
        35,
        53,
        42,
        44,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
    ];
    ///The bytecode of the contract.
    pub static HOPRNETWORKREGISTRY_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__BYTECODE);
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        196,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        144,
        16,
        208,
        124,
        17,
        97,
        0,
        249,
        87,
        128,
        99,
        202,
        21,
        200,
        115,
        17,
        97,
        0,
        151,
        87,
        128,
        99,
        207,
        179,
        115,
        95,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        207,
        179,
        115,
        95,
        20,
        97,
        3,
        218,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        3,
        226,
        87,
        128,
        99,
        227,
        210,
        160,
        113,
        20,
        97,
        3,
        245,
        87,
        128,
        99,
        236,
        135,
        98,
        28,
        20,
        97,
        4,
        8,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        202,
        21,
        200,
        115,
        20,
        97,
        3,
        172,
        87,
        128,
        99,
        202,
        245,
        245,
        1,
        20,
        97,
        3,
        191,
        87,
        128,
        99,
        203,
        235,
        175,
        224,
        20,
        97,
        3,
        210,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        160,
        94,
        15,
        109,
        17,
        97,
        0,
        211,
        87,
        128,
        99,
        160,
        94,
        15,
        109,
        20,
        97,
        3,
        85,
        87,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        3,
        104,
        87,
        128,
        99,
        165,
        96,
        93,
        165,
        20,
        97,
        3,
        112,
        87,
        128,
        99,
        199,
        236,
        171,
        143,
        20,
        97,
        3,
        131,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        144,
        16,
        208,
        124,
        20,
        97,
        3,
        15,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        3,
        58,
        87,
        128,
        99,
        156,
        127,
        100,
        59,
        20,
        97,
        3,
        77,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        17,
        97,
        1,
        102,
        87,
        128,
        99,
        78,
        177,
        128,
        92,
        17,
        97,
        1,
        64,
        87,
        128,
        99,
        78,
        177,
        128,
        92,
        20,
        97,
        2,
        195,
        87,
        128,
        99,
        111,
        251,
        249,
        136,
        20,
        97,
        2,
        214,
        87,
        128,
        99,
        118,
        89,
        58,
        57,
        20,
        97,
        2,
        233,
        87,
        128,
        99,
        141,
        117,
        59,
        45,
        20,
        97,
        2,
        252,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        2,
        125,
        87,
        128,
        99,
        63,
        165,
        132,
        87,
        20,
        97,
        2,
        144,
        87,
        128,
        99,
        65,
        182,
        73,
        101,
        20,
        97,
        2,
        176,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        39,
        176,
        64,
        161,
        17,
        97,
        1,
        162,
        87,
        128,
        99,
        39,
        176,
        64,
        161,
        20,
        97,
        2,
        47,
        87,
        128,
        99,
        42,
        45,
        238,
        226,
        20,
        97,
        2,
        68,
        87,
        128,
        99,
        44,
        51,
        202,
        251,
        20,
        97,
        2,
        87,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        2,
        106,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        201,
        87,
        128,
        99,
        35,
        141,
        175,
        224,
        20,
        97,
        1,
        241,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        254,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        220,
        97,
        1,
        215,
        54,
        96,
        4,
        97,
        22,
        43,
        86,
        91,
        97,
        4,
        29,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        96,
        5,
        84,
        97,
        1,
        220,
        144,
        96,
        255,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        97,
        2,
        12,
        54,
        96,
        4,
        97,
        22,
        85,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        232,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        61,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        4,
        72,
        86,
        91,
        0,
        91,
        97,
        2,
        33,
        97,
        2,
        82,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        4,
        171,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        101,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        5,
        93,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        120,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        5,
        199,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        139,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        5,
        241,
        86,
        91,
        97,
        2,
        33,
        97,
        2,
        158,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        96,
        3,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        190,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        6,
        116,
        86,
        91,
        97,
        1,
        220,
        97,
        2,
        209,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        7,
        151,
        86,
        91,
        97,
        1,
        220,
        97,
        2,
        228,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        97,
        7,
        232,
        86,
        91,
        97,
        2,
        66,
        97,
        2,
        247,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        7,
        243,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        10,
        54,
        96,
        4,
        97,
        23,
        95,
        86,
        91,
        97,
        9,
        136,
        86,
        91,
        97,
        3,
        34,
        97,
        3,
        29,
        54,
        96,
        4,
        97,
        23,
        203,
        86,
        91,
        97,
        11,
        2,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        232,
        86,
        91,
        97,
        1,
        220,
        97,
        3,
        72,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        11,
        26,
        86,
        91,
        97,
        2,
        66,
        97,
        11,
        67,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        99,
        54,
        96,
        4,
        97,
        22,
        241,
        86,
        91,
        97,
        11,
        113,
        86,
        91,
        97,
        2,
        33,
        96,
        0,
        129,
        86,
        91,
        97,
        1,
        220,
        97,
        3,
        126,
        54,
        96,
        4,
        97,
        23,
        237,
        86,
        91,
        97,
        12,
        196,
        86,
        91,
        97,
        3,
        34,
        97,
        3,
        145,
        54,
        96,
        4,
        97,
        22,
        138,
        86,
        91,
        96,
        4,
        96,
        32,
        82,
        96,
        0,
        144,
        129,
        82,
        96,
        64,
        144,
        32,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        97,
        3,
        186,
        54,
        96,
        4,
        97,
        22,
        85,
        86,
        91,
        97,
        13,
        19,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        205,
        54,
        96,
        4,
        97,
        24,
        70,
        86,
        91,
        97,
        13,
        42,
        86,
        91,
        97,
        2,
        66,
        97,
        14,
        68,
        86,
        91,
        97,
        2,
        66,
        97,
        14,
        183,
        86,
        91,
        97,
        2,
        66,
        97,
        3,
        240,
        54,
        96,
        4,
        97,
        23,
        51,
        86,
        91,
        97,
        15,
        47,
        86,
        91,
        96,
        2,
        84,
        97,
        3,
        34,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        97,
        2,
        33,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        129,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        90,
        5,
        24,
        15,
        96,
        224,
        27,
        20,
        128,
        97,
        4,
        66,
        87,
        80,
        97,
        4,
        66,
        130,
        97,
        15,
        84,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        4,
        96,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        138,
        196,
        178,
        235,
        119,
        73,
        247,
        92,
        91,
        153,
        184,
        152,
        229,
        71,
        253,
        97,
        93,
        215,
        164,
        36,
        230,
        131,
        86,
        234,
        25,
        107,
        125,
        174,
        116,
        45,
        108,
        50,
        144,
        96,
        0,
        144,
        162,
        80,
        80,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        89,
        170,
        39,
        65,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        179,
        84,
        78,
        130,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        4,
        249,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        29,
        145,
        144,
        97,
        25,
        52,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        144,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        5,
        83,
        87,
        97,
        5,
        75,
        129,
        131,
        97,
        25,
        99,
        86,
        91,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        80,
        96,
        0,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        5,
        117,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        5,
        193,
        87,
        97,
        5,
        175,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        5,
        149,
        87,
        97,
        5,
        149,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        5,
        170,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        97,
        15,
        150,
        86,
        91,
        128,
        97,
        5,
        185,
        129,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        5,
        120,
        86,
        91,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        5,
        226,
        129,
        97,
        15,
        137,
        86,
        91,
        97,
        5,
        236,
        131,
        131,
        97,
        15,
        243,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        6,
        102,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        110,
        16,
        57,
        55,
        182,
        50,
        185,
        144,
        51,
        55,
        185,
        16,
        57,
        178,
        182,
        51,
        96,
        137,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        6,
        112,
        130,
        130,
        97,
        16,
        21,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        6,
        140,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        0,
        91,
        130,
        129,
        16,
        21,
        97,
        5,
        193,
        87,
        96,
        0,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        6,
        171,
        87,
        97,
        6,
        171,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        6,
        192,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        128,
        97,
        7,
        7,
        87,
        96,
        64,
        81,
        99,
        22,
        56,
        121,
        21,
        96,
        227,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        7,
        43,
        131,
        97,
        25,
        165,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        131,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        144,
        85,
        81,
        145,
        146,
        132,
        22,
        145,
        127,
        145,
        118,
        10,
        16,
        1,
        245,
        49,
        236,
        43,
        238,
        134,
        2,
        190,
        85,
        173,
        43,
        17,
        89,
        70,
        94,
        223,
        245,
        187,
        205,
        65,
        210,
        7,
        3,
        116,
        42,
        77,
        66,
        145,
        144,
        163,
        80,
        80,
        128,
        128,
        97,
        7,
        143,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        6,
        143,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        97,
        7,
        175,
        87,
        80,
        96,
        0,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        22,
        128,
        97,
        7,
        216,
        87,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        97,
        7,
        225,
        129,
        97,
        16,
        55,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        66,
        130,
        97,
        16,
        55,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        8,
        22,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        9,
        65,
        87,
        96,
        0,
        131,
        131,
        131,
        129,
        129,
        16,
        97,
        8,
        53,
        87,
        97,
        8,
        53,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        8,
        74,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        97,
        8,
        114,
        51,
        131,
        97,
        16,
        237,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        97,
        8,
        248,
        87,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        8,
        155,
        131,
        97,
        25,
        140,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        51,
        144,
        129,
        23,
        144,
        145,
        85,
        144,
        81,
        144,
        145,
        127,
        10,
        49,
        238,
        157,
        70,
        168,
        40,
        136,
        75,
        129,
        0,
        60,
        132,
        152,
        21,
        110,
        166,
        170,
        21,
        185,
        181,
        75,
        221,
        14,
        240,
        181,
        51,
        217,
        235,
        165,
        126,
        85,
        145,
        163,
        97,
        9,
        44,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        9,
        44,
        87,
        96,
        64,
        81,
        99,
        91,
        83,
        59,
        161,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        80,
        80,
        128,
        128,
        97,
        9,
        57,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        8,
        25,
        86,
        91,
        80,
        97,
        9,
        75,
        51,
        97,
        16,
        55,
        86,
        91,
        97,
        9,
        104,
        87,
        96,
        64,
        81,
        99,
        3,
        238,
        111,
        87,
        96,
        226,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        64,
        81,
        96,
        1,
        144,
        51,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        0,
        144,
        163,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        9,
        160,
        129,
        97,
        15,
        137,
        86,
        91,
        131,
        130,
        20,
        97,
        9,
        192,
        87,
        96,
        64,
        81,
        99,
        237,
        136,
        47,
        113,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        132,
        129,
        16,
        21,
        97,
        10,
        250,
        87,
        96,
        0,
        132,
        132,
        131,
        129,
        129,
        16,
        97,
        9,
        223,
        87,
        97,
        9,
        223,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        9,
        244,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        144,
        80,
        96,
        0,
        135,
        135,
        132,
        129,
        129,
        16,
        97,
        10,
        10,
        87,
        97,
        10,
        10,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        10,
        31,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        21,
        97,
        10,
        102,
        87,
        96,
        64,
        81,
        99,
        91,
        83,
        59,
        161,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        10,
        138,
        131,
        97,
        25,
        140,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        129,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        148,
        134,
        22,
        148,
        133,
        23,
        144,
        85,
        81,
        145,
        146,
        145,
        127,
        4,
        225,
        234,
        164,
        218,
        24,
        247,
        231,
        66,
        164,
        237,
        187,
        233,
        237,
        227,
        108,
        223,
        117,
        247,
        147,
        187,
        3,
        171,
        33,
        88,
        192,
        135,
        127,
        28,
        175,
        43,
        147,
        145,
        144,
        163,
        80,
        80,
        128,
        128,
        97,
        10,
        242,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        9,
        195,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        7,
        225,
        144,
        131,
        97,
        17,
        143,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        11,
        102,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        11,
        111,
        51,
        97,
        15,
        150,
        86,
        91,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        11,
        148,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        129,
        129,
        16,
        21,
        97,
        12,
        186,
        87,
        96,
        0,
        131,
        131,
        131,
        129,
        129,
        16,
        97,
        11,
        179,
        87,
        97,
        11,
        179,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        11,
        200,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        128,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        145,
        146,
        80,
        22,
        97,
        11,
        240,
        51,
        131,
        97,
        16,
        237,
        86,
        91,
        51,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        3,
        97,
        12,
        114,
        87,
        51,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        128,
        84,
        145,
        97,
        12,
        27,
        131,
        97,
        25,
        165,
        86,
        91,
        144,
        145,
        85,
        80,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        96,
        0,
        129,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        128,
        130,
        32,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        22,
        144,
        85,
        81,
        51,
        145,
        127,
        21,
        154,
        138,
        233,
        72,
        252,
        198,
        231,
        248,
        181,
        73,
        92,
        13,
        115,
        233,
        21,
        152,
        68,
        10,
        248,
        166,
        40,
        23,
        36,
        108,
        9,
        237,
        194,
        194,
        141,
        186,
        138,
        145,
        163,
        97,
        12,
        165,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        21,
        97,
        12,
        165,
        87,
        96,
        64,
        81,
        99,
        191,
        79,
        221,
        115,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        80,
        80,
        128,
        128,
        97,
        12,
        178,
        144,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        11,
        151,
        86,
        91,
        80,
        97,
        6,
        112,
        51,
        97,
        15,
        150,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        21,
        128,
        97,
        12,
        227,
        87,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        130,
        22,
        21,
        91,
        21,
        97,
        12,
        240,
        87,
        80,
        96,
        0,
        97,
        4,
        66,
        86,
        91,
        80,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        145,
        130,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        4,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        130,
        22,
        145,
        22,
        20,
        144,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        4,
        66,
        144,
        97,
        17,
        155,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        13,
        66,
        129,
        97,
        15,
        137,
        86,
        91,
        129,
        81,
        131,
        20,
        97,
        13,
        99,
        87,
        96,
        64,
        81,
        99,
        237,
        136,
        47,
        113,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        14,
        61,
        87,
        130,
        129,
        129,
        81,
        129,
        16,
        97,
        13,
        128,
        87,
        97,
        13,
        128,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        2,
        96,
        32,
        1,
        1,
        81,
        21,
        97,
        13,
        222,
        87,
        96,
        1,
        133,
        133,
        131,
        129,
        129,
        16,
        97,
        13,
        161,
        87,
        97,
        13,
        161,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        13,
        182,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        97,
        14,
        43,
        86,
        91,
        96,
        0,
        133,
        133,
        131,
        129,
        129,
        16,
        97,
        13,
        242,
        87,
        97,
        13,
        242,
        97,
        25,
        118,
        86,
        91,
        144,
        80,
        96,
        32,
        2,
        1,
        96,
        32,
        129,
        1,
        144,
        97,
        14,
        7,
        145,
        144,
        97,
        22,
        138,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        163,
        91,
        128,
        97,
        14,
        53,
        129,
        97,
        25,
        140,
        86,
        91,
        145,
        80,
        80,
        97,
        13,
        102,
        86,
        91,
        80,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        14,
        92,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        97,
        14,
        127,
        87,
        96,
        64,
        81,
        99,
        196,
        38,
        56,
        187,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        96,
        64,
        81,
        96,
        0,
        144,
        127,
        139,
        200,
        95,
        37,
        227,
        233,
        51,
        151,
        143,
        9,
        148,
        8,
        179,
        187,
        62,
        183,
        99,
        11,
        118,
        247,
        69,
        95,
        46,
        32,
        91,
        203,
        192,
        167,
        128,
        225,
        126,
        114,
        144,
        130,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        26,
        230,
        131,
        57,
        129,
        81,
        145,
        82,
        97,
        14,
        207,
        129,
        97,
        15,
        137,
        86,
        91,
        96,
        5,
        84,
        96,
        255,
        22,
        21,
        97,
        14,
        243,
        87,
        96,
        64,
        81,
        99,
        237,
        26,
        12,
        119,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        96,
        5,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        139,
        200,
        95,
        37,
        227,
        233,
        51,
        151,
        143,
        9,
        148,
        8,
        179,
        187,
        62,
        183,
        99,
        11,
        118,
        247,
        69,
        95,
        46,
        32,
        91,
        203,
        192,
        167,
        128,
        225,
        126,
        114,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        15,
        74,
        129,
        97,
        15,
        137,
        86,
        91,
        97,
        5,
        236,
        131,
        131,
        97,
        16,
        21,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        121,
        101,
        219,
        11,
        96,
        224,
        27,
        20,
        128,
        97,
        4,
        66,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        97,
        4,
        66,
        86,
        91,
        97,
        15,
        147,
        129,
        51,
        97,
        17,
        165,
        86,
        91,
        80,
        86,
        91,
        97,
        15,
        159,
        129,
        97,
        16,
        55,
        86,
        91,
        21,
        97,
        15,
        204,
        87,
        96,
        64,
        81,
        96,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        96,
        0,
        144,
        163,
        80,
        86,
        91,
        96,
        64,
        81,
        96,
        0,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        144,
        96,
        0,
        128,
        81,
        96,
        32,
        97,
        27,
        6,
        131,
        57,
        129,
        81,
        145,
        82,
        144,
        131,
        144,
        163,
        80,
        86,
        91,
        97,
        15,
        253,
        130,
        130,
        97,
        17,
        254,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        5,
        236,
        144,
        130,
        97,
        18,
        130,
        86,
        91,
        97,
        16,
        31,
        130,
        130,
        97,
        18,
        151,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        5,
        236,
        144,
        130,
        97,
        18,
        252,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        89,
        170,
        39,
        65,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        179,
        84,
        78,
        130,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        16,
        133,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        16,
        169,
        145,
        144,
        97,
        25,
        52,
        86,
        91,
        144,
        80,
        128,
        96,
        0,
        3,
        97,
        16,
        188,
        87,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        0,
        144,
        129,
        82,
        96,
        3,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        84,
        129,
        16,
        97,
        16,
        228,
        87,
        80,
        96,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        80,
        96,
        0,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        2,
        84,
        96,
        64,
        81,
        99,
        54,
        22,
        180,
        17,
        96,
        226,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        131,
        129,
        22,
        96,
        36,
        131,
        1,
        82,
        96,
        0,
        146,
        22,
        144,
        99,
        216,
        90,
        208,
        68,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        17,
        64,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        17,
        100,
        145,
        144,
        97,
        25,
        188,
        86,
        91,
        144,
        80,
        128,
        97,
        5,
        236,
        87,
        96,
        64,
        81,
        99,
        7,
        65,
        73,
        103,
        96,
        224,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        4,
        130,
        1,
        82,
        96,
        36,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        131,
        97,
        19,
        17,
        86,
        91,
        96,
        0,
        97,
        4,
        66,
        130,
        84,
        144,
        86,
        91,
        97,
        17,
        175,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        97,
        6,
        112,
        87,
        97,
        17,
        188,
        129,
        97,
        19,
        59,
        86,
        91,
        97,
        17,
        199,
        131,
        96,
        32,
        97,
        19,
        77,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        17,
        216,
        146,
        145,
        144,
        97,
        25,
        253,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        130,
        82,
        97,
        6,
        93,
        145,
        96,
        4,
        1,
        97,
        26,
        114,
        86,
        91,
        97,
        18,
        8,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        97,
        6,
        112,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        18,
        62,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        20,
        233,
        86,
        91,
        97,
        18,
        161,
        130,
        130,
        97,
        11,
        26,
        86,
        91,
        21,
        97,
        6,
        112,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        7,
        225,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        21,
        56,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        19,
        40,
        87,
        97,
        19,
        40,
        97,
        25,
        118,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        4,
        66,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        19,
        92,
        131,
        96,
        2,
        97,
        26,
        165,
        86,
        91,
        97,
        19,
        103,
        144,
        96,
        2,
        97,
        26,
        188,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        19,
        127,
        87,
        97,
        19,
        127,
        97,
        24,
        23,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        19,
        169,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        96,
        3,
        96,
        252,
        27,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        19,
        196,
        87,
        97,
        19,
        196,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        15,
        96,
        251,
        27,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        19,
        243,
        87,
        97,
        19,
        243,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        20,
        23,
        132,
        96,
        2,
        97,
        26,
        165,
        86,
        91,
        97,
        20,
        34,
        144,
        96,
        1,
        97,
        26,
        188,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        20,
        154,
        87,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        20,
        86,
        87,
        97,
        20,
        86,
        97,
        25,
        118,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        20,
        108,
        87,
        97,
        20,
        108,
        97,
        25,
        118,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        20,
        147,
        129,
        97,
        25,
        165,
        86,
        91,
        144,
        80,
        97,
        20,
        37,
        86,
        91,
        80,
        131,
        21,
        97,
        7,
        225,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        6,
        93,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        21,
        48,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        97,
        4,
        66,
        86,
        91,
        80,
        96,
        0,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        128,
        21,
        97,
        22,
        33,
        87,
        96,
        0,
        97,
        21,
        92,
        96,
        1,
        131,
        97,
        25,
        99,
        86,
        91,
        133,
        84,
        144,
        145,
        80,
        96,
        0,
        144,
        97,
        21,
        112,
        144,
        96,
        1,
        144,
        97,
        25,
        99,
        86,
        91,
        144,
        80,
        129,
        129,
        20,
        97,
        21,
        213,
        87,
        96,
        0,
        134,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        21,
        144,
        87,
        97,
        21,
        144,
        97,
        25,
        118,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        128,
        135,
        96,
        0,
        1,
        132,
        129,
        84,
        129,
        16,
        97,
        21,
        179,
        87,
        97,
        21,
        179,
        97,
        25,
        118,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        128,
        131,
        32,
        144,
        145,
        1,
        146,
        144,
        146,
        85,
        145,
        130,
        82,
        96,
        1,
        136,
        1,
        144,
        82,
        96,
        64,
        144,
        32,
        131,
        144,
        85,
        91,
        133,
        84,
        134,
        144,
        128,
        97,
        21,
        230,
        87,
        97,
        21,
        230,
        97,
        26,
        207,
        86,
        91,
        96,
        1,
        144,
        3,
        129,
        129,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        96,
        0,
        144,
        85,
        144,
        85,
        133,
        96,
        1,
        1,
        96,
        0,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        0,
        32,
        96,
        0,
        144,
        85,
        96,
        1,
        147,
        80,
        80,
        80,
        80,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        145,
        80,
        80,
        97,
        4,
        66,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        7,
        225,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        103,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        128,
        53,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        22,
        133,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        22,
        156,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        7,
        225,
        130,
        97,
        22,
        110,
        86,
        91,
        96,
        0,
        128,
        131,
        96,
        31,
        132,
        1,
        18,
        97,
        22,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        129,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        22,
        207,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        32,
        131,
        1,
        145,
        80,
        131,
        96,
        32,
        130,
        96,
        5,
        27,
        133,
        1,
        1,
        17,
        21,
        97,
        22,
        234,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        32,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        4,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        23,
        27,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        39,
        133,
        130,
        134,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        150,
        144,
        149,
        80,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        70,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        97,
        23,
        86,
        96,
        32,
        132,
        1,
        97,
        22,
        110,
        86,
        91,
        144,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        64,
        133,
        135,
        3,
        18,
        21,
        97,
        23,
        117,
        87,
        96,
        0,
        128,
        253,
        91,
        132,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        23,
        141,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        23,
        153,
        136,
        131,
        137,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        150,
        80,
        148,
        80,
        96,
        32,
        135,
        1,
        53,
        145,
        80,
        128,
        130,
        17,
        21,
        97,
        23,
        178,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        97,
        23,
        191,
        135,
        130,
        136,
        1,
        97,
        22,
        165,
        86,
        91,
        149,
        152,
        148,
        151,
        80,
        149,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        23,
        222,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        24,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        9,
        131,
        97,
        22,
        110,
        86,
        91,
        145,
        80,
        97,
        23,
        86,
        96,
        32,
        132,
        1,
        97,
        22,
        110,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        21,
        21,
        129,
        20,
        97,
        15,
        147,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        97,
        22,
        133,
        129,
        97,
        24,
        45,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        96,
        64,
        132,
        134,
        3,
        18,
        21,
        97,
        24,
        91,
        87,
        96,
        0,
        128,
        253,
        91,
        131,
        53,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        128,
        130,
        17,
        21,
        97,
        24,
        115,
        87,
        96,
        0,
        128,
        253,
        91,
        97,
        24,
        127,
        135,
        131,
        136,
        1,
        97,
        22,
        165,
        86,
        91,
        144,
        149,
        80,
        147,
        80,
        96,
        32,
        145,
        80,
        133,
        130,
        1,
        53,
        129,
        129,
        17,
        21,
        97,
        24,
        153,
        87,
        96,
        0,
        128,
        253,
        91,
        134,
        1,
        96,
        31,
        129,
        1,
        136,
        19,
        97,
        24,
        170,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        53,
        130,
        129,
        17,
        21,
        97,
        24,
        188,
        87,
        97,
        24,
        188,
        97,
        24,
        23,
        86,
        91,
        128,
        96,
        5,
        27,
        96,
        64,
        81,
        96,
        31,
        25,
        96,
        63,
        131,
        1,
        22,
        129,
        1,
        129,
        129,
        16,
        134,
        130,
        17,
        23,
        21,
        97,
        24,
        225,
        87,
        97,
        24,
        225,
        97,
        24,
        23,
        86,
        91,
        96,
        64,
        82,
        145,
        130,
        82,
        132,
        130,
        1,
        147,
        80,
        130,
        129,
        1,
        133,
        1,
        145,
        138,
        131,
        17,
        21,
        97,
        24,
        255,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        133,
        1,
        146,
        91,
        130,
        132,
        16,
        21,
        97,
        25,
        36,
        87,
        97,
        25,
        21,
        132,
        97,
        24,
        59,
        86,
        91,
        133,
        82,
        147,
        133,
        1,
        147,
        146,
        133,
        1,
        146,
        97,
        25,
        4,
        86,
        91,
        128,
        150,
        80,
        80,
        80,
        80,
        80,
        80,
        80,
        146,
        80,
        146,
        80,
        146,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        70,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        96,
        1,
        130,
        1,
        97,
        25,
        158,
        87,
        97,
        25,
        158,
        97,
        25,
        77,
        86,
        91,
        80,
        96,
        1,
        1,
        144,
        86,
        91,
        96,
        0,
        129,
        97,
        25,
        180,
        87,
        97,
        25,
        180,
        97,
        25,
        77,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        25,
        206,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        7,
        225,
        129,
        97,
        24,
        45,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        25,
        244,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        25,
        220,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        26,
        53,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        25,
        217,
        86,
        91,
        112,
        1,
        3,
        75,
        153,
        3,
        107,
        75,
        155,
        155,
        75,
        115,
        57,
        3,
        147,
        123,
        99,
        41,
        96,
        125,
        27,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        26,
        102,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        25,
        217,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        26,
        145,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        25,
        217,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        4,
        66,
        87,
        97,
        4,
        66,
        97,
        25,
        77,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        49,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        226,
        153,
        79,
        141,
        111,
        96,
        10,
        212,
        115,
        219,
        168,
        44,
        10,
        137,
        10,
        183,
        175,
        250,
        203,
        134,
        13,
        51,
        101,
        244,
        116,
        186,
        163,
        220,
        4,
        162,
        229,
        87,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        59,
        178,
        116,
        97,
        50,
        61,
        5,
        100,
        213,
        232,
        202,
        51,
        3,
        196,
        1,
        247,
        54,
        199,
        118,
        11,
        106,
        9,
        124,
        161,
        185,
        248,
        23,
        160,
        35,
        53,
        42,
        44,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static HOPRNETWORKREGISTRY_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes =
        ::ethers::core::types::Bytes::from_static(__DEPLOYED_BYTECODE);
    pub struct HoprNetworkRegistry<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for HoprNetworkRegistry<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for HoprNetworkRegistry<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for HoprNetworkRegistry<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for HoprNetworkRegistry<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(HoprNetworkRegistry))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> HoprNetworkRegistry<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(address: T, client: ::std::sync::Arc<M>) -> Self {
            Self(::ethers::contract::Contract::new(
                address.into(),
                HOPRNETWORKREGISTRY_ABI.clone(),
                client,
            ))
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                HOPRNETWORKREGISTRY_ABI.clone(),
                HOPRNETWORKREGISTRY_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `DEFAULT_ADMIN_ROLE` (0xa217fddf) function
        pub fn default_admin_role(&self) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([162, 23, 253, 223], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `MANAGER_ROLE` (0xec87621c) function
        pub fn manager_role(&self) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([236, 135, 98, 28], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `countRegisterdNodesPerAccount` (0x3fa58457) function
        pub fn count_registerd_nodes_per_account(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([63, 165, 132, 87], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `disableRegistry` (0xcbebafe0) function
        pub fn disable_registry(&self) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([203, 235, 175, 224], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `enableRegistry` (0xcfb3735f) function
        pub fn enable_registry(&self) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([207, 179, 115, 95], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `enabled` (0x238dafe0) function
        pub fn enabled(&self) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([35, 141, 175, 224], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleAdmin` (0x248a9ca3) function
        pub fn get_role_admin(&self, role: [u8; 32]) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([36, 138, 156, 163], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMember` (0x9010d07c) function
        pub fn get_role_member(
            &self,
            role: [u8; 32],
            index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([144, 16, 208, 124], (role, index))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMemberCount` (0xca15c873) function
        pub fn get_role_member_count(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([202, 21, 200, 115], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `grantRole` (0x2f2ff15d) function
        pub fn grant_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([47, 47, 241, 93], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasRole` (0x91d14854) function
        pub fn has_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([145, 209, 72, 84], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isAccountEligible` (0x6ffbf988) function
        pub fn is_account_eligible(
            &self,
            staking_account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([111, 251, 249, 136], staking_account)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isNodeRegisteredAndEligible` (0x4eb1805c) function
        pub fn is_node_registered_and_eligible(
            &self,
            node_address: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([78, 177, 128, 92], node_address)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isNodeRegisteredByAccount` (0xa5605da5) function
        pub fn is_node_registered_by_account(
            &self,
            node_address: ::ethers::core::types::Address,
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([165, 96, 93, 165], (node_address, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `managerDeregister` (0x41b64965) function
        pub fn manager_deregister(
            &self,
            node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([65, 182, 73, 101], node_addresses)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `managerForceSync` (0xcaf5f501) function
        pub fn manager_force_sync(
            &self,
            staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
            eligibilities: ::std::vec::Vec<bool>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([202, 245, 245, 1], (staking_accounts, eligibilities))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `managerRegister` (0x8d753b2d) function
        pub fn manager_register(
            &self,
            staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
            node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([141, 117, 59, 45], (staking_accounts, node_addresses))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `managerSync` (0x2c33cafb) function
        pub fn manager_sync(
            &self,
            staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([44, 51, 202, 251], staking_accounts)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxAdditionalRegistrations` (0x2a2deee2) function
        pub fn max_additional_registrations(
            &self,
            staking_account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([42, 45, 238, 226], staking_account)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nodeRegisterdToAccount` (0xc7ecab8f) function
        pub fn node_registerd_to_account(
            &self,
            p0: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([199, 236, 171, 143], p0)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceRole` (0x36568abe) function
        pub fn renounce_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([54, 86, 138, 190], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `requirementImplementation` (0xe3d2a071) function
        pub fn requirement_implementation(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::Address> {
            self.0
                .method_hash([227, 210, 160, 113], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `revokeRole` (0xd547741f) function
        pub fn revoke_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([213, 71, 116, 31], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `selfDeregister` (0xa05e0f6d) function
        pub fn self_deregister(
            &self,
            node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([160, 94, 15, 109], node_addresses)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `selfRegister` (0x76593a39) function
        pub fn self_register(
            &self,
            node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([118, 89, 58, 57], node_addresses)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `selfSync` (0x9c7f643b) function
        pub fn self_sync(&self) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([156, 127, 100, 59], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `supportsInterface` (0x01ffc9a7) function
        pub fn supports_interface(&self, interface_id: [u8; 4]) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([1, 255, 201, 167], interface_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateRequirementImplementation` (0x27b040a1) function
        pub fn update_requirement_implementation(
            &self,
            requirement_implementation: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([39, 176, 64, 161], requirement_implementation)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Deregistered` event
        pub fn deregistered_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, DeregisteredFilter> {
            self.0.event()
        }
        ///Gets the contract's `DeregisteredByManager` event
        pub fn deregistered_by_manager_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, DeregisteredByManagerFilter> {
            self.0.event()
        }
        ///Gets the contract's `EligibilityUpdated` event
        pub fn eligibility_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, EligibilityUpdatedFilter> {
            self.0.event()
        }
        ///Gets the contract's `NetworkRegistryStatusUpdated` event
        pub fn network_registry_status_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, NetworkRegistryStatusUpdatedFilter> {
            self.0.event()
        }
        ///Gets the contract's `Registered` event
        pub fn registered_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RegisteredFilter> {
            self.0.event()
        }
        ///Gets the contract's `RegisteredByManager` event
        pub fn registered_by_manager_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RegisteredByManagerFilter> {
            self.0.event()
        }
        ///Gets the contract's `RequirementUpdated` event
        pub fn requirement_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RequirementUpdatedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleAdminChanged` event
        pub fn role_admin_changed_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RoleAdminChangedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleGranted` event
        pub fn role_granted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RoleGrantedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleRevoked` event
        pub fn role_revoked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, RoleRevokedFilter> {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(&self) -> ::ethers::contract::builders::Event<::std::sync::Arc<M>, M, HoprNetworkRegistryEvents> {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>> for HoprNetworkRegistry<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `ArrayLengthNotMatch` with signature `ArrayLengthNotMatch()` and selector `0xed882f71`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "ArrayLengthNotMatch", abi = "ArrayLengthNotMatch()")]
    pub struct ArrayLengthNotMatch;
    ///Custom Error type `CannotOperateForNode` with signature `CannotOperateForNode(address)` and selector `0x07414967`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "CannotOperateForNode", abi = "CannotOperateForNode(address)")]
    pub struct CannotOperateForNode {
        pub node_address: ::ethers::core::types::Address,
    }
    ///Custom Error type `GloballyDisabledRegistry` with signature `GloballyDisabledRegistry()` and selector `0xc42638bb`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "GloballyDisabledRegistry", abi = "GloballyDisabledRegistry()")]
    pub struct GloballyDisabledRegistry;
    ///Custom Error type `GloballyEnabledRegistry` with signature `GloballyEnabledRegistry()` and selector `0xed1a0c77`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "GloballyEnabledRegistry", abi = "GloballyEnabledRegistry()")]
    pub struct GloballyEnabledRegistry;
    ///Custom Error type `NodeAlreadyRegisterd` with signature `NodeAlreadyRegisterd(address)` and selector `0x5b533ba1`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "NodeAlreadyRegisterd", abi = "NodeAlreadyRegisterd(address)")]
    pub struct NodeAlreadyRegisterd {
        pub node_address: ::ethers::core::types::Address,
    }
    ///Custom Error type `NodeNotYetRegisterd` with signature `NodeNotYetRegisterd(address)` and selector `0xb1c3c8a8`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "NodeNotYetRegisterd", abi = "NodeNotYetRegisterd(address)")]
    pub struct NodeNotYetRegisterd {
        pub node_address: ::ethers::core::types::Address,
    }
    ///Custom Error type `NodeRegisterdToOtherAccount` with signature `NodeRegisterdToOtherAccount(address)` and selector `0xbf4fdd73`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(name = "NodeRegisterdToOtherAccount", abi = "NodeRegisterdToOtherAccount(address)")]
    pub struct NodeRegisterdToOtherAccount {
        pub node_address: ::ethers::core::types::Address,
    }
    ///Custom Error type `NotEnoughAllowanceToRegisterNode` with signature `NotEnoughAllowanceToRegisterNode()` and selector `0x0fb9bd5c`
    #[derive(
        Clone, ::ethers::contract::EthError, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[etherror(
        name = "NotEnoughAllowanceToRegisterNode",
        abi = "NotEnoughAllowanceToRegisterNode()"
    )]
    pub struct NotEnoughAllowanceToRegisterNode;
    ///Container type for all of the contract's custom errors
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum HoprNetworkRegistryErrors {
        ArrayLengthNotMatch(ArrayLengthNotMatch),
        CannotOperateForNode(CannotOperateForNode),
        GloballyDisabledRegistry(GloballyDisabledRegistry),
        GloballyEnabledRegistry(GloballyEnabledRegistry),
        NodeAlreadyRegisterd(NodeAlreadyRegisterd),
        NodeNotYetRegisterd(NodeNotYetRegisterd),
        NodeRegisterdToOtherAccount(NodeRegisterdToOtherAccount),
        NotEnoughAllowanceToRegisterNode(NotEnoughAllowanceToRegisterNode),
        /// The standard solidity revert string, with selector
        /// Error(string) -- 0x08c379a0
        RevertString(::std::string::String),
    }
    impl ::ethers::core::abi::AbiDecode for HoprNetworkRegistryErrors {
        fn decode(data: impl AsRef<[u8]>) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <::std::string::String as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RevertString(decoded));
            }
            if let Ok(decoded) = <ArrayLengthNotMatch as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ArrayLengthNotMatch(decoded));
            }
            if let Ok(decoded) = <CannotOperateForNode as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CannotOperateForNode(decoded));
            }
            if let Ok(decoded) = <GloballyDisabledRegistry as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GloballyDisabledRegistry(decoded));
            }
            if let Ok(decoded) = <GloballyEnabledRegistry as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GloballyEnabledRegistry(decoded));
            }
            if let Ok(decoded) = <NodeAlreadyRegisterd as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NodeAlreadyRegisterd(decoded));
            }
            if let Ok(decoded) = <NodeNotYetRegisterd as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NodeNotYetRegisterd(decoded));
            }
            if let Ok(decoded) = <NodeRegisterdToOtherAccount as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NodeRegisterdToOtherAccount(decoded));
            }
            if let Ok(decoded) = <NotEnoughAllowanceToRegisterNode as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NotEnoughAllowanceToRegisterNode(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for HoprNetworkRegistryErrors {
        fn encode(self) -> ::std::vec::Vec<u8> {
            match self {
                Self::ArrayLengthNotMatch(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::CannotOperateForNode(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GloballyDisabledRegistry(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GloballyEnabledRegistry(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::NodeAlreadyRegisterd(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::NodeNotYetRegisterd(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::NodeRegisterdToOtherAccount(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::NotEnoughAllowanceToRegisterNode(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RevertString(s) => ::ethers::core::abi::AbiEncode::encode(s),
            }
        }
    }
    impl ::ethers::contract::ContractRevert for HoprNetworkRegistryErrors {
        fn valid_selector(selector: [u8; 4]) -> bool {
            match selector {
                [0x08, 0xc3, 0x79, 0xa0] => true,
                _ if selector == <ArrayLengthNotMatch as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <CannotOperateForNode as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <GloballyDisabledRegistry as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <GloballyEnabledRegistry as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <NodeAlreadyRegisterd as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <NodeNotYetRegisterd as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <NodeRegisterdToOtherAccount as ::ethers::contract::EthError>::selector() => true,
                _ if selector == <NotEnoughAllowanceToRegisterNode as ::ethers::contract::EthError>::selector() => true,
                _ => false,
            }
        }
    }
    impl ::core::fmt::Display for HoprNetworkRegistryErrors {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::ArrayLengthNotMatch(element) => ::core::fmt::Display::fmt(element, f),
                Self::CannotOperateForNode(element) => ::core::fmt::Display::fmt(element, f),
                Self::GloballyDisabledRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::GloballyEnabledRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::NodeAlreadyRegisterd(element) => ::core::fmt::Display::fmt(element, f),
                Self::NodeNotYetRegisterd(element) => ::core::fmt::Display::fmt(element, f),
                Self::NodeRegisterdToOtherAccount(element) => ::core::fmt::Display::fmt(element, f),
                Self::NotEnoughAllowanceToRegisterNode(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevertString(s) => ::core::fmt::Display::fmt(s, f),
            }
        }
    }
    impl ::core::convert::From<::std::string::String> for HoprNetworkRegistryErrors {
        fn from(value: String) -> Self {
            Self::RevertString(value)
        }
    }
    impl ::core::convert::From<ArrayLengthNotMatch> for HoprNetworkRegistryErrors {
        fn from(value: ArrayLengthNotMatch) -> Self {
            Self::ArrayLengthNotMatch(value)
        }
    }
    impl ::core::convert::From<CannotOperateForNode> for HoprNetworkRegistryErrors {
        fn from(value: CannotOperateForNode) -> Self {
            Self::CannotOperateForNode(value)
        }
    }
    impl ::core::convert::From<GloballyDisabledRegistry> for HoprNetworkRegistryErrors {
        fn from(value: GloballyDisabledRegistry) -> Self {
            Self::GloballyDisabledRegistry(value)
        }
    }
    impl ::core::convert::From<GloballyEnabledRegistry> for HoprNetworkRegistryErrors {
        fn from(value: GloballyEnabledRegistry) -> Self {
            Self::GloballyEnabledRegistry(value)
        }
    }
    impl ::core::convert::From<NodeAlreadyRegisterd> for HoprNetworkRegistryErrors {
        fn from(value: NodeAlreadyRegisterd) -> Self {
            Self::NodeAlreadyRegisterd(value)
        }
    }
    impl ::core::convert::From<NodeNotYetRegisterd> for HoprNetworkRegistryErrors {
        fn from(value: NodeNotYetRegisterd) -> Self {
            Self::NodeNotYetRegisterd(value)
        }
    }
    impl ::core::convert::From<NodeRegisterdToOtherAccount> for HoprNetworkRegistryErrors {
        fn from(value: NodeRegisterdToOtherAccount) -> Self {
            Self::NodeRegisterdToOtherAccount(value)
        }
    }
    impl ::core::convert::From<NotEnoughAllowanceToRegisterNode> for HoprNetworkRegistryErrors {
        fn from(value: NotEnoughAllowanceToRegisterNode) -> Self {
            Self::NotEnoughAllowanceToRegisterNode(value)
        }
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "Deregistered", abi = "Deregistered(address,address)")]
    pub struct DeregisteredFilter {
        #[ethevent(indexed)]
        pub staking_account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub node_address: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "DeregisteredByManager", abi = "DeregisteredByManager(address,address)")]
    pub struct DeregisteredByManagerFilter {
        #[ethevent(indexed)]
        pub staking_account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub node_address: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "EligibilityUpdated", abi = "EligibilityUpdated(address,bool)")]
    pub struct EligibilityUpdatedFilter {
        #[ethevent(indexed)]
        pub staking_account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub eligibility: bool,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "NetworkRegistryStatusUpdated", abi = "NetworkRegistryStatusUpdated(bool)")]
    pub struct NetworkRegistryStatusUpdatedFilter {
        #[ethevent(indexed)]
        pub is_enabled: bool,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "Registered", abi = "Registered(address,address)")]
    pub struct RegisteredFilter {
        #[ethevent(indexed)]
        pub staking_account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub node_address: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "RegisteredByManager", abi = "RegisteredByManager(address,address)")]
    pub struct RegisteredByManagerFilter {
        #[ethevent(indexed)]
        pub staking_account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub node_address: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "RequirementUpdated", abi = "RequirementUpdated(address)")]
    pub struct RequirementUpdatedFilter {
        #[ethevent(indexed)]
        pub requirement_implementation: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "RoleAdminChanged", abi = "RoleAdminChanged(bytes32,bytes32,bytes32)")]
    pub struct RoleAdminChangedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub previous_admin_role: [u8; 32],
        #[ethevent(indexed)]
        pub new_admin_role: [u8; 32],
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "RoleGranted", abi = "RoleGranted(bytes32,address,address)")]
    pub struct RoleGrantedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone, ::ethers::contract::EthEvent, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethevent(name = "RoleRevoked", abi = "RoleRevoked(bytes32,address,address)")]
    pub struct RoleRevokedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum HoprNetworkRegistryEvents {
        DeregisteredFilter(DeregisteredFilter),
        DeregisteredByManagerFilter(DeregisteredByManagerFilter),
        EligibilityUpdatedFilter(EligibilityUpdatedFilter),
        NetworkRegistryStatusUpdatedFilter(NetworkRegistryStatusUpdatedFilter),
        RegisteredFilter(RegisteredFilter),
        RegisteredByManagerFilter(RegisteredByManagerFilter),
        RequirementUpdatedFilter(RequirementUpdatedFilter),
        RoleAdminChangedFilter(RoleAdminChangedFilter),
        RoleGrantedFilter(RoleGrantedFilter),
        RoleRevokedFilter(RoleRevokedFilter),
    }
    impl ::ethers::contract::EthLogDecode for HoprNetworkRegistryEvents {
        fn decode_log(log: &::ethers::core::abi::RawLog) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = DeregisteredFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::DeregisteredFilter(decoded));
            }
            if let Ok(decoded) = DeregisteredByManagerFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::DeregisteredByManagerFilter(decoded));
            }
            if let Ok(decoded) = EligibilityUpdatedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::EligibilityUpdatedFilter(decoded));
            }
            if let Ok(decoded) = NetworkRegistryStatusUpdatedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::NetworkRegistryStatusUpdatedFilter(decoded));
            }
            if let Ok(decoded) = RegisteredFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RegisteredFilter(decoded));
            }
            if let Ok(decoded) = RegisteredByManagerFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RegisteredByManagerFilter(decoded));
            }
            if let Ok(decoded) = RequirementUpdatedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RequirementUpdatedFilter(decoded));
            }
            if let Ok(decoded) = RoleAdminChangedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RoleAdminChangedFilter(decoded));
            }
            if let Ok(decoded) = RoleGrantedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RoleGrantedFilter(decoded));
            }
            if let Ok(decoded) = RoleRevokedFilter::decode_log(log) {
                return Ok(HoprNetworkRegistryEvents::RoleRevokedFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for HoprNetworkRegistryEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DeregisteredFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::DeregisteredByManagerFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::EligibilityUpdatedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::NetworkRegistryStatusUpdatedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RegisteredFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RegisteredByManagerFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RequirementUpdatedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleAdminChangedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleGrantedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleRevokedFilter(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DeregisteredFilter> for HoprNetworkRegistryEvents {
        fn from(value: DeregisteredFilter) -> Self {
            Self::DeregisteredFilter(value)
        }
    }
    impl ::core::convert::From<DeregisteredByManagerFilter> for HoprNetworkRegistryEvents {
        fn from(value: DeregisteredByManagerFilter) -> Self {
            Self::DeregisteredByManagerFilter(value)
        }
    }
    impl ::core::convert::From<EligibilityUpdatedFilter> for HoprNetworkRegistryEvents {
        fn from(value: EligibilityUpdatedFilter) -> Self {
            Self::EligibilityUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<NetworkRegistryStatusUpdatedFilter> for HoprNetworkRegistryEvents {
        fn from(value: NetworkRegistryStatusUpdatedFilter) -> Self {
            Self::NetworkRegistryStatusUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<RegisteredFilter> for HoprNetworkRegistryEvents {
        fn from(value: RegisteredFilter) -> Self {
            Self::RegisteredFilter(value)
        }
    }
    impl ::core::convert::From<RegisteredByManagerFilter> for HoprNetworkRegistryEvents {
        fn from(value: RegisteredByManagerFilter) -> Self {
            Self::RegisteredByManagerFilter(value)
        }
    }
    impl ::core::convert::From<RequirementUpdatedFilter> for HoprNetworkRegistryEvents {
        fn from(value: RequirementUpdatedFilter) -> Self {
            Self::RequirementUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<RoleAdminChangedFilter> for HoprNetworkRegistryEvents {
        fn from(value: RoleAdminChangedFilter) -> Self {
            Self::RoleAdminChangedFilter(value)
        }
    }
    impl ::core::convert::From<RoleGrantedFilter> for HoprNetworkRegistryEvents {
        fn from(value: RoleGrantedFilter) -> Self {
            Self::RoleGrantedFilter(value)
        }
    }
    impl ::core::convert::From<RoleRevokedFilter> for HoprNetworkRegistryEvents {
        fn from(value: RoleRevokedFilter) -> Self {
            Self::RoleRevokedFilter(value)
        }
    }
    ///Container type for all input parameters for the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "DEFAULT_ADMIN_ROLE", abi = "DEFAULT_ADMIN_ROLE()")]
    pub struct DefaultAdminRoleCall;
    ///Container type for all input parameters for the `MANAGER_ROLE` function with signature `MANAGER_ROLE()` and selector `0xec87621c`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "MANAGER_ROLE", abi = "MANAGER_ROLE()")]
    pub struct ManagerRoleCall;
    ///Container type for all input parameters for the `countRegisterdNodesPerAccount` function with signature `countRegisterdNodesPerAccount(address)` and selector `0x3fa58457`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(
        name = "countRegisterdNodesPerAccount",
        abi = "countRegisterdNodesPerAccount(address)"
    )]
    pub struct CountRegisterdNodesPerAccountCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `disableRegistry` function with signature `disableRegistry()` and selector `0xcbebafe0`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "disableRegistry", abi = "disableRegistry()")]
    pub struct DisableRegistryCall;
    ///Container type for all input parameters for the `enableRegistry` function with signature `enableRegistry()` and selector `0xcfb3735f`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "enableRegistry", abi = "enableRegistry()")]
    pub struct EnableRegistryCall;
    ///Container type for all input parameters for the `enabled` function with signature `enabled()` and selector `0x238dafe0`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "enabled", abi = "enabled()")]
    pub struct EnabledCall;
    ///Container type for all input parameters for the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "getRoleAdmin", abi = "getRoleAdmin(bytes32)")]
    pub struct GetRoleAdminCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "getRoleMember", abi = "getRoleMember(bytes32,uint256)")]
    pub struct GetRoleMemberCall {
        pub role: [u8; 32],
        pub index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "getRoleMemberCount", abi = "getRoleMemberCount(bytes32)")]
    pub struct GetRoleMemberCountCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `grantRole` function with signature `grantRole(bytes32,address)` and selector `0x2f2ff15d`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "grantRole", abi = "grantRole(bytes32,address)")]
    pub struct GrantRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "hasRole", abi = "hasRole(bytes32,address)")]
    pub struct HasRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `isAccountEligible` function with signature `isAccountEligible(address)` and selector `0x6ffbf988`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "isAccountEligible", abi = "isAccountEligible(address)")]
    pub struct IsAccountEligibleCall {
        pub staking_account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `isNodeRegisteredAndEligible` function with signature `isNodeRegisteredAndEligible(address)` and selector `0x4eb1805c`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "isNodeRegisteredAndEligible", abi = "isNodeRegisteredAndEligible(address)")]
    pub struct IsNodeRegisteredAndEligibleCall {
        pub node_address: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `isNodeRegisteredByAccount` function with signature `isNodeRegisteredByAccount(address,address)` and selector `0xa5605da5`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(
        name = "isNodeRegisteredByAccount",
        abi = "isNodeRegisteredByAccount(address,address)"
    )]
    pub struct IsNodeRegisteredByAccountCall {
        pub node_address: ::ethers::core::types::Address,
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `managerDeregister` function with signature `managerDeregister(address[])` and selector `0x41b64965`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "managerDeregister", abi = "managerDeregister(address[])")]
    pub struct ManagerDeregisterCall {
        pub node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///Container type for all input parameters for the `managerForceSync` function with signature `managerForceSync(address[],bool[])` and selector `0xcaf5f501`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "managerForceSync", abi = "managerForceSync(address[],bool[])")]
    pub struct ManagerForceSyncCall {
        pub staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
        pub eligibilities: ::std::vec::Vec<bool>,
    }
    ///Container type for all input parameters for the `managerRegister` function with signature `managerRegister(address[],address[])` and selector `0x8d753b2d`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "managerRegister", abi = "managerRegister(address[],address[])")]
    pub struct ManagerRegisterCall {
        pub staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
        pub node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///Container type for all input parameters for the `managerSync` function with signature `managerSync(address[])` and selector `0x2c33cafb`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "managerSync", abi = "managerSync(address[])")]
    pub struct ManagerSyncCall {
        pub staking_accounts: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///Container type for all input parameters for the `maxAdditionalRegistrations` function with signature `maxAdditionalRegistrations(address)` and selector `0x2a2deee2`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "maxAdditionalRegistrations", abi = "maxAdditionalRegistrations(address)")]
    pub struct MaxAdditionalRegistrationsCall {
        pub staking_account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `nodeRegisterdToAccount` function with signature `nodeRegisterdToAccount(address)` and selector `0xc7ecab8f`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "nodeRegisterdToAccount", abi = "nodeRegisterdToAccount(address)")]
    pub struct NodeRegisterdToAccountCall(pub ::ethers::core::types::Address);
    ///Container type for all input parameters for the `renounceRole` function with signature `renounceRole(bytes32,address)` and selector `0x36568abe`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "renounceRole", abi = "renounceRole(bytes32,address)")]
    pub struct RenounceRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `requirementImplementation` function with signature `requirementImplementation()` and selector `0xe3d2a071`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "requirementImplementation", abi = "requirementImplementation()")]
    pub struct RequirementImplementationCall;
    ///Container type for all input parameters for the `revokeRole` function with signature `revokeRole(bytes32,address)` and selector `0xd547741f`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "revokeRole", abi = "revokeRole(bytes32,address)")]
    pub struct RevokeRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `selfDeregister` function with signature `selfDeregister(address[])` and selector `0xa05e0f6d`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "selfDeregister", abi = "selfDeregister(address[])")]
    pub struct SelfDeregisterCall {
        pub node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///Container type for all input parameters for the `selfRegister` function with signature `selfRegister(address[])` and selector `0x76593a39`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "selfRegister", abi = "selfRegister(address[])")]
    pub struct SelfRegisterCall {
        pub node_addresses: ::std::vec::Vec<::ethers::core::types::Address>,
    }
    ///Container type for all input parameters for the `selfSync` function with signature `selfSync()` and selector `0x9c7f643b`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "selfSync", abi = "selfSync()")]
    pub struct SelfSyncCall;
    ///Container type for all input parameters for the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(name = "supportsInterface", abi = "supportsInterface(bytes4)")]
    pub struct SupportsInterfaceCall {
        pub interface_id: [u8; 4],
    }
    ///Container type for all input parameters for the `updateRequirementImplementation` function with signature `updateRequirementImplementation(address)` and selector `0x27b040a1`
    #[derive(
        Clone, ::ethers::contract::EthCall, ::ethers::contract::EthDisplay, Default, Debug, PartialEq, Eq, Hash,
    )]
    #[ethcall(
        name = "updateRequirementImplementation",
        abi = "updateRequirementImplementation(address)"
    )]
    pub struct UpdateRequirementImplementationCall {
        pub requirement_implementation: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum HoprNetworkRegistryCalls {
        DefaultAdminRole(DefaultAdminRoleCall),
        ManagerRole(ManagerRoleCall),
        CountRegisterdNodesPerAccount(CountRegisterdNodesPerAccountCall),
        DisableRegistry(DisableRegistryCall),
        EnableRegistry(EnableRegistryCall),
        Enabled(EnabledCall),
        GetRoleAdmin(GetRoleAdminCall),
        GetRoleMember(GetRoleMemberCall),
        GetRoleMemberCount(GetRoleMemberCountCall),
        GrantRole(GrantRoleCall),
        HasRole(HasRoleCall),
        IsAccountEligible(IsAccountEligibleCall),
        IsNodeRegisteredAndEligible(IsNodeRegisteredAndEligibleCall),
        IsNodeRegisteredByAccount(IsNodeRegisteredByAccountCall),
        ManagerDeregister(ManagerDeregisterCall),
        ManagerForceSync(ManagerForceSyncCall),
        ManagerRegister(ManagerRegisterCall),
        ManagerSync(ManagerSyncCall),
        MaxAdditionalRegistrations(MaxAdditionalRegistrationsCall),
        NodeRegisterdToAccount(NodeRegisterdToAccountCall),
        RenounceRole(RenounceRoleCall),
        RequirementImplementation(RequirementImplementationCall),
        RevokeRole(RevokeRoleCall),
        SelfDeregister(SelfDeregisterCall),
        SelfRegister(SelfRegisterCall),
        SelfSync(SelfSyncCall),
        SupportsInterface(SupportsInterfaceCall),
        UpdateRequirementImplementation(UpdateRequirementImplementationCall),
    }
    impl ::ethers::core::abi::AbiDecode for HoprNetworkRegistryCalls {
        fn decode(data: impl AsRef<[u8]>) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded) = <DefaultAdminRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DefaultAdminRole(decoded));
            }
            if let Ok(decoded) = <ManagerRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerRole(decoded));
            }
            if let Ok(decoded) = <CountRegisterdNodesPerAccountCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CountRegisterdNodesPerAccount(decoded));
            }
            if let Ok(decoded) = <DisableRegistryCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::DisableRegistry(decoded));
            }
            if let Ok(decoded) = <EnableRegistryCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::EnableRegistry(decoded));
            }
            if let Ok(decoded) = <EnabledCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Enabled(decoded));
            }
            if let Ok(decoded) = <GetRoleAdminCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleAdmin(decoded));
            }
            if let Ok(decoded) = <GetRoleMemberCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleMember(decoded));
            }
            if let Ok(decoded) = <GetRoleMemberCountCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleMemberCount(decoded));
            }
            if let Ok(decoded) = <GrantRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GrantRole(decoded));
            }
            if let Ok(decoded) = <HasRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HasRole(decoded));
            }
            if let Ok(decoded) = <IsAccountEligibleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsAccountEligible(decoded));
            }
            if let Ok(decoded) = <IsNodeRegisteredAndEligibleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsNodeRegisteredAndEligible(decoded));
            }
            if let Ok(decoded) = <IsNodeRegisteredByAccountCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::IsNodeRegisteredByAccount(decoded));
            }
            if let Ok(decoded) = <ManagerDeregisterCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerDeregister(decoded));
            }
            if let Ok(decoded) = <ManagerForceSyncCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerForceSync(decoded));
            }
            if let Ok(decoded) = <ManagerRegisterCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerRegister(decoded));
            }
            if let Ok(decoded) = <ManagerSyncCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerSync(decoded));
            }
            if let Ok(decoded) = <MaxAdditionalRegistrationsCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::MaxAdditionalRegistrations(decoded));
            }
            if let Ok(decoded) = <NodeRegisterdToAccountCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::NodeRegisterdToAccount(decoded));
            }
            if let Ok(decoded) = <RenounceRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RenounceRole(decoded));
            }
            if let Ok(decoded) = <RequirementImplementationCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RequirementImplementation(decoded));
            }
            if let Ok(decoded) = <RevokeRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RevokeRole(decoded));
            }
            if let Ok(decoded) = <SelfDeregisterCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SelfDeregister(decoded));
            }
            if let Ok(decoded) = <SelfRegisterCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SelfRegister(decoded));
            }
            if let Ok(decoded) = <SelfSyncCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SelfSync(decoded));
            }
            if let Ok(decoded) = <SupportsInterfaceCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::SupportsInterface(decoded));
            }
            if let Ok(decoded) = <UpdateRequirementImplementationCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::UpdateRequirementImplementation(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for HoprNetworkRegistryCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DefaultAdminRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::ManagerRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::CountRegisterdNodesPerAccount(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::DisableRegistry(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::EnableRegistry(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::Enabled(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetRoleAdmin(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetRoleMember(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GetRoleMemberCount(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::GrantRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::HasRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::IsAccountEligible(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::IsNodeRegisteredAndEligible(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::IsNodeRegisteredByAccount(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::ManagerDeregister(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::ManagerForceSync(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::ManagerRegister(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::ManagerSync(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::MaxAdditionalRegistrations(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::NodeRegisterdToAccount(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RenounceRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RequirementImplementation(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::RevokeRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SelfDeregister(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SelfRegister(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SelfSync(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::SupportsInterface(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::UpdateRequirementImplementation(element) => ::ethers::core::abi::AbiEncode::encode(element),
            }
        }
    }
    impl ::core::fmt::Display for HoprNetworkRegistryCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DefaultAdminRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::CountRegisterdNodesPerAccount(element) => ::core::fmt::Display::fmt(element, f),
                Self::DisableRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::EnableRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::Enabled(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleAdmin(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleMember(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleMemberCount(element) => ::core::fmt::Display::fmt(element, f),
                Self::GrantRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::HasRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsAccountEligible(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsNodeRegisteredAndEligible(element) => ::core::fmt::Display::fmt(element, f),
                Self::IsNodeRegisteredByAccount(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerDeregister(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerForceSync(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerRegister(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerSync(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxAdditionalRegistrations(element) => ::core::fmt::Display::fmt(element, f),
                Self::NodeRegisterdToAccount(element) => ::core::fmt::Display::fmt(element, f),
                Self::RenounceRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::RequirementImplementation(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevokeRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::SelfDeregister(element) => ::core::fmt::Display::fmt(element, f),
                Self::SelfRegister(element) => ::core::fmt::Display::fmt(element, f),
                Self::SelfSync(element) => ::core::fmt::Display::fmt(element, f),
                Self::SupportsInterface(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateRequirementImplementation(element) => ::core::fmt::Display::fmt(element, f),
            }
        }
    }
    impl ::core::convert::From<DefaultAdminRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: DefaultAdminRoleCall) -> Self {
            Self::DefaultAdminRole(value)
        }
    }
    impl ::core::convert::From<ManagerRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: ManagerRoleCall) -> Self {
            Self::ManagerRole(value)
        }
    }
    impl ::core::convert::From<CountRegisterdNodesPerAccountCall> for HoprNetworkRegistryCalls {
        fn from(value: CountRegisterdNodesPerAccountCall) -> Self {
            Self::CountRegisterdNodesPerAccount(value)
        }
    }
    impl ::core::convert::From<DisableRegistryCall> for HoprNetworkRegistryCalls {
        fn from(value: DisableRegistryCall) -> Self {
            Self::DisableRegistry(value)
        }
    }
    impl ::core::convert::From<EnableRegistryCall> for HoprNetworkRegistryCalls {
        fn from(value: EnableRegistryCall) -> Self {
            Self::EnableRegistry(value)
        }
    }
    impl ::core::convert::From<EnabledCall> for HoprNetworkRegistryCalls {
        fn from(value: EnabledCall) -> Self {
            Self::Enabled(value)
        }
    }
    impl ::core::convert::From<GetRoleAdminCall> for HoprNetworkRegistryCalls {
        fn from(value: GetRoleAdminCall) -> Self {
            Self::GetRoleAdmin(value)
        }
    }
    impl ::core::convert::From<GetRoleMemberCall> for HoprNetworkRegistryCalls {
        fn from(value: GetRoleMemberCall) -> Self {
            Self::GetRoleMember(value)
        }
    }
    impl ::core::convert::From<GetRoleMemberCountCall> for HoprNetworkRegistryCalls {
        fn from(value: GetRoleMemberCountCall) -> Self {
            Self::GetRoleMemberCount(value)
        }
    }
    impl ::core::convert::From<GrantRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: GrantRoleCall) -> Self {
            Self::GrantRole(value)
        }
    }
    impl ::core::convert::From<HasRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: HasRoleCall) -> Self {
            Self::HasRole(value)
        }
    }
    impl ::core::convert::From<IsAccountEligibleCall> for HoprNetworkRegistryCalls {
        fn from(value: IsAccountEligibleCall) -> Self {
            Self::IsAccountEligible(value)
        }
    }
    impl ::core::convert::From<IsNodeRegisteredAndEligibleCall> for HoprNetworkRegistryCalls {
        fn from(value: IsNodeRegisteredAndEligibleCall) -> Self {
            Self::IsNodeRegisteredAndEligible(value)
        }
    }
    impl ::core::convert::From<IsNodeRegisteredByAccountCall> for HoprNetworkRegistryCalls {
        fn from(value: IsNodeRegisteredByAccountCall) -> Self {
            Self::IsNodeRegisteredByAccount(value)
        }
    }
    impl ::core::convert::From<ManagerDeregisterCall> for HoprNetworkRegistryCalls {
        fn from(value: ManagerDeregisterCall) -> Self {
            Self::ManagerDeregister(value)
        }
    }
    impl ::core::convert::From<ManagerForceSyncCall> for HoprNetworkRegistryCalls {
        fn from(value: ManagerForceSyncCall) -> Self {
            Self::ManagerForceSync(value)
        }
    }
    impl ::core::convert::From<ManagerRegisterCall> for HoprNetworkRegistryCalls {
        fn from(value: ManagerRegisterCall) -> Self {
            Self::ManagerRegister(value)
        }
    }
    impl ::core::convert::From<ManagerSyncCall> for HoprNetworkRegistryCalls {
        fn from(value: ManagerSyncCall) -> Self {
            Self::ManagerSync(value)
        }
    }
    impl ::core::convert::From<MaxAdditionalRegistrationsCall> for HoprNetworkRegistryCalls {
        fn from(value: MaxAdditionalRegistrationsCall) -> Self {
            Self::MaxAdditionalRegistrations(value)
        }
    }
    impl ::core::convert::From<NodeRegisterdToAccountCall> for HoprNetworkRegistryCalls {
        fn from(value: NodeRegisterdToAccountCall) -> Self {
            Self::NodeRegisterdToAccount(value)
        }
    }
    impl ::core::convert::From<RenounceRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: RenounceRoleCall) -> Self {
            Self::RenounceRole(value)
        }
    }
    impl ::core::convert::From<RequirementImplementationCall> for HoprNetworkRegistryCalls {
        fn from(value: RequirementImplementationCall) -> Self {
            Self::RequirementImplementation(value)
        }
    }
    impl ::core::convert::From<RevokeRoleCall> for HoprNetworkRegistryCalls {
        fn from(value: RevokeRoleCall) -> Self {
            Self::RevokeRole(value)
        }
    }
    impl ::core::convert::From<SelfDeregisterCall> for HoprNetworkRegistryCalls {
        fn from(value: SelfDeregisterCall) -> Self {
            Self::SelfDeregister(value)
        }
    }
    impl ::core::convert::From<SelfRegisterCall> for HoprNetworkRegistryCalls {
        fn from(value: SelfRegisterCall) -> Self {
            Self::SelfRegister(value)
        }
    }
    impl ::core::convert::From<SelfSyncCall> for HoprNetworkRegistryCalls {
        fn from(value: SelfSyncCall) -> Self {
            Self::SelfSync(value)
        }
    }
    impl ::core::convert::From<SupportsInterfaceCall> for HoprNetworkRegistryCalls {
        fn from(value: SupportsInterfaceCall) -> Self {
            Self::SupportsInterface(value)
        }
    }
    impl ::core::convert::From<UpdateRequirementImplementationCall> for HoprNetworkRegistryCalls {
        fn from(value: UpdateRequirementImplementationCall) -> Self {
            Self::UpdateRequirementImplementation(value)
        }
    }
    ///Container type for all return fields from the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct DefaultAdminRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `MANAGER_ROLE` function with signature `MANAGER_ROLE()` and selector `0xec87621c`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct ManagerRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `countRegisterdNodesPerAccount` function with signature `countRegisterdNodesPerAccount(address)` and selector `0x3fa58457`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct CountRegisterdNodesPerAccountReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `enabled` function with signature `enabled()` and selector `0x238dafe0`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct EnabledReturn(pub bool);
    ///Container type for all return fields from the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct GetRoleAdminReturn(pub [u8; 32]);
    ///Container type for all return fields from the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct GetRoleMemberReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct GetRoleMemberCountReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct HasRoleReturn(pub bool);
    ///Container type for all return fields from the `isAccountEligible` function with signature `isAccountEligible(address)` and selector `0x6ffbf988`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct IsAccountEligibleReturn(pub bool);
    ///Container type for all return fields from the `isNodeRegisteredAndEligible` function with signature `isNodeRegisteredAndEligible(address)` and selector `0x4eb1805c`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct IsNodeRegisteredAndEligibleReturn(pub bool);
    ///Container type for all return fields from the `isNodeRegisteredByAccount` function with signature `isNodeRegisteredByAccount(address,address)` and selector `0xa5605da5`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct IsNodeRegisteredByAccountReturn(pub bool);
    ///Container type for all return fields from the `maxAdditionalRegistrations` function with signature `maxAdditionalRegistrations(address)` and selector `0x2a2deee2`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct MaxAdditionalRegistrationsReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `nodeRegisterdToAccount` function with signature `nodeRegisterdToAccount(address)` and selector `0xc7ecab8f`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct NodeRegisterdToAccountReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `requirementImplementation` function with signature `requirementImplementation()` and selector `0xe3d2a071`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct RequirementImplementationReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone, ::ethers::contract::EthAbiType, ::ethers::contract::EthAbiCodec, Default, Debug, PartialEq, Eq, Hash,
    )]
    pub struct SupportsInterfaceReturn(pub bool);
}
