pub use hopr_safe_proxy_for_network_registry::*;
/// This module was auto-generated with ethers-rs Abigen.
/// More information at: <https://github.com/gakonst/ethers-rs>
#[allow(
    clippy::enum_variant_names,
    clippy::too_many_arguments,
    clippy::upper_case_acronyms,
    clippy::type_complexity,
    dead_code,
    non_camel_case_types,
)]
pub mod hopr_safe_proxy_for_network_registry {
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_manager\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"_stakeThreshold\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint128\",\"name\":\"_snapshotBlockNumber\",\"type\":\"uint128\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"_nodeSafeRegistry\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[],\"type\":\"error\",\"name\":\"SameValue\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleAdminChanged\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleGranted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleRevoked\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"blockNumber\",\"type\":\"uint128\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"SnapshotUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"ThresholdUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"nodeSafeRegistry\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"TokenAndRegistryUpdated\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakingAccount\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"canOperateFor\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"eligiblity\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"grantRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"safeAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"maxAllowedRegistrations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nodeSafeRegistry\",\"outputs\":[{\"internalType\":\"contract IHoprNodeSafeRegistry\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"renounceRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"revokeRole\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"snapshotBlockNumber\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"stakeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC777Snapshot\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"newSnapshotBlock\",\"type\":\"uint128\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateSnapshotBlockNumber\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateStakeThreshold\",\"outputs\":[]}]";
    ///The parsed JSON ABI of the contract.
    pub static HOPRSAFEPROXYFORNETWORKREGISTRY_ABI: ::ethers::contract::Lazy<
        ::ethers::core::abi::Abi,
    > = ::ethers::contract::Lazy::new(|| {
        ::ethers::core::utils::__serde_json::from_str(__ABI)
            .expect("ABI is always valid")
    });
    #[rustfmt::skip]
    const __BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        98,
        0,
        0,
        17,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        64,
        81,
        98,
        0,
        18,
        134,
        56,
        3,
        128,
        98,
        0,
        18,
        134,
        131,
        57,
        129,
        1,
        96,
        64,
        129,
        144,
        82,
        98,
        0,
        0,
        52,
        145,
        98,
        0,
        2,
        218,
        86,
        91,
        98,
        0,
        0,
        65,
        96,
        0,
        135,
        98,
        0,
        0,
        243,
        86,
        91,
        98,
        0,
        0,
        92,
        96,
        0,
        128,
        81,
        96,
        32,
        98,
        0,
        18,
        102,
        131,
        57,
        129,
        81,
        145,
        82,
        135,
        98,
        0,
        0,
        243,
        86,
        91,
        98,
        0,
        0,
        119,
        96,
        0,
        128,
        81,
        96,
        32,
        98,
        0,
        18,
        102,
        131,
        57,
        129,
        81,
        145,
        82,
        134,
        98,
        0,
        0,
        243,
        86,
        91,
        98,
        0,
        0,
        130,
        132,
        98,
        0,
        1,
        3,
        86,
        91,
        98,
        0,
        0,
        141,
        131,
        98,
        0,
        1,
        54,
        86,
        91,
        96,
        2,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        25,
        144,
        129,
        22,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        129,
        22,
        145,
        130,
        23,
        144,
        147,
        85,
        96,
        3,
        128,
        84,
        144,
        146,
        22,
        146,
        132,
        22,
        146,
        131,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        119,
        185,
        203,
        79,
        135,
        254,
        171,
        30,
        189,
        129,
        75,
        182,
        148,
        183,
        213,
        20,
        238,
        45,
        193,
        240,
        171,
        212,
        195,
        149,
        127,
        70,
        130,
        156,
        46,
        36,
        157,
        255,
        144,
        96,
        0,
        144,
        163,
        80,
        80,
        80,
        80,
        80,
        80,
        98,
        0,
        3,
        96,
        86,
        91,
        98,
        0,
        0,
        255,
        130,
        130,
        98,
        0,
        1,
        128,
        86,
        91,
        80,
        80,
        86,
        91,
        96,
        4,
        129,
        144,
        85,
        96,
        64,
        81,
        129,
        144,
        127,
        173,
        250,
        142,
        203,
        33,
        182,
        150,
        46,
        188,
        208,
        173,
        189,
        154,
        185,
        133,
        183,
        180,
        197,
        181,
        235,
        59,
        13,
        234,
        214,
        131,
        23,
        21,
        101,
        199,
        191,
        225,
        113,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        5,
        128,
        84,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        175,
        29,
        21,
        153,
        181,
        199,
        218,
        154,
        32,
        4,
        181,
        122,
        193,
        71,
        132,
        25,
        151,
        24,
        169,
        3,
        100,
        174,
        71,
        242,
        122,
        200,
        148,
        146,
        111,
        6,
        85,
        252,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        98,
        0,
        1,
        140,
        130,
        130,
        98,
        0,
        1,
        171,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        98,
        0,
        1,
        166,
        144,
        130,
        98,
        0,
        2,
        75,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        98,
        0,
        0,
        255,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        98,
        0,
        2,
        7,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        98,
        0,
        2,
        98,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        98,
        0,
        2,
        107,
        86,
        91,
        144,
        80,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        98,
        0,
        2,
        180,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        98,
        0,
        2,
        101,
        86,
        91,
        80,
        96,
        0,
        98,
        0,
        2,
        101,
        86,
        91,
        128,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        2,
        213,
        87,
        96,
        0,
        128,
        253,
        91,
        145,
        144,
        80,
        86,
        91,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        0,
        128,
        96,
        192,
        135,
        137,
        3,
        18,
        21,
        98,
        0,
        2,
        244,
        87,
        96,
        0,
        128,
        253,
        91,
        98,
        0,
        2,
        255,
        135,
        98,
        0,
        2,
        189,
        86,
        91,
        149,
        80,
        98,
        0,
        3,
        15,
        96,
        32,
        136,
        1,
        98,
        0,
        2,
        189,
        86,
        91,
        96,
        64,
        136,
        1,
        81,
        96,
        96,
        137,
        1,
        81,
        145,
        150,
        80,
        148,
        80,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        129,
        22,
        129,
        20,
        98,
        0,
        3,
        52,
        87,
        96,
        0,
        128,
        253,
        91,
        146,
        80,
        98,
        0,
        3,
        68,
        96,
        128,
        136,
        1,
        98,
        0,
        2,
        189,
        86,
        91,
        145,
        80,
        98,
        0,
        3,
        84,
        96,
        160,
        136,
        1,
        98,
        0,
        2,
        189,
        86,
        91,
        144,
        80,
        146,
        149,
        80,
        146,
        149,
        80,
        146,
        149,
        86,
        91,
        97,
        14,
        246,
        128,
        98,
        0,
        3,
        112,
        96,
        0,
        57,
        96,
        0,
        243,
        254,
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        22,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        162,
        23,
        253,
        223,
        17,
        97,
        0,
        162,
        87,
        128,
        99,
        216,
        90,
        208,
        68,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        216,
        90,
        208,
        68,
        20,
        97,
        2,
        84,
        87,
        128,
        99,
        236,
        135,
        98,
        28,
        20,
        97,
        2,
        103,
        87,
        128,
        99,
        241,
        31,
        119,
        249,
        20,
        97,
        2,
        142,
        87,
        128,
        99,
        242,
        94,
        113,
        8,
        20,
        97,
        2,
        151,
        87,
        128,
        99,
        252,
        12,
        84,
        106,
        20,
        97,
        2,
        194,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        2,
        19,
        87,
        128,
        99,
        179,
        84,
        78,
        130,
        20,
        97,
        2,
        27,
        87,
        128,
        99,
        202,
        21,
        200,
        115,
        20,
        97,
        2,
        46,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        2,
        65,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        90,
        190,
        83,
        8,
        17,
        97,
        0,
        233,
        87,
        128,
        99,
        90,
        190,
        83,
        8,
        20,
        97,
        1,
        156,
        87,
        128,
        99,
        94,
        245,
        51,
        41,
        20,
        97,
        1,
        175,
        87,
        128,
        99,
        106,
        74,
        64,
        65,
        20,
        97,
        1,
        194,
        87,
        128,
        99,
        144,
        16,
        208,
        124,
        20,
        97,
        1,
        237,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        2,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        27,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        67,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        1,
        116,
        87,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        1,
        137,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        46,
        97,
        1,
        41,
        54,
        96,
        4,
        97,
        11,
        210,
        86,
        91,
        97,
        2,
        213,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        102,
        97,
        1,
        81,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        130,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        3,
        0,
        86,
        91,
        0,
        91,
        97,
        1,
        135,
        97,
        1,
        151,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        3,
        42,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        170,
        54,
        96,
        4,
        97,
        12,
        90,
        86,
        91,
        97,
        3,
        173,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        189,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        97,
        4,
        14,
        86,
        91,
        96,
        3,
        84,
        97,
        1,
        213,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        97,
        1,
        213,
        97,
        1,
        251,
        54,
        96,
        4,
        97,
        12,
        131,
        86,
        91,
        97,
        4,
        99,
        86,
        91,
        97,
        1,
        46,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        4,
        130,
        86,
        91,
        97,
        1,
        102,
        96,
        0,
        129,
        86,
        91,
        97,
        1,
        102,
        97,
        2,
        41,
        54,
        96,
        4,
        97,
        12,
        165,
        86,
        91,
        97,
        4,
        171,
        86,
        91,
        97,
        1,
        102,
        97,
        2,
        60,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        97,
        5,
        63,
        86,
        91,
        97,
        1,
        135,
        97,
        2,
        79,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        5,
        86,
        86,
        91,
        97,
        1,
        46,
        97,
        2,
        98,
        54,
        96,
        4,
        97,
        12,
        194,
        86,
        91,
        97,
        5,
        123,
        86,
        91,
        97,
        1,
        102,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        129,
        86,
        91,
        97,
        1,
        102,
        96,
        4,
        84,
        129,
        86,
        91,
        96,
        5,
        84,
        97,
        2,
        170,
        144,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        96,
        2,
        84,
        97,
        1,
        213,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        53,
        135,
        79,
        99,
        96,
        225,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        97,
        2,
        250,
        130,
        97,
        6,
        5,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        3,
        27,
        129,
        97,
        6,
        42,
        86,
        91,
        97,
        3,
        37,
        131,
        131,
        97,
        6,
        55,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        3,
        159,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        110,
        16,
        57,
        55,
        182,
        50,
        185,
        144,
        51,
        55,
        185,
        16,
        57,
        178,
        182,
        51,
        96,
        137,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        130,
        97,
        6,
        89,
        86,
        91,
        80,
        80,
        86,
        91,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        97,
        3,
        215,
        129,
        97,
        6,
        42,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        145,
        22,
        3,
        97,
        4,
        5,
        87,
        96,
        64,
        81,
        99,
        194,
        63,
        108,
        203,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        6,
        123,
        86,
        91,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        97,
        4,
        56,
        129,
        97,
        6,
        42,
        86,
        91,
        129,
        96,
        4,
        84,
        3,
        97,
        4,
        90,
        87,
        96,
        64,
        81,
        99,
        194,
        63,
        108,
        203,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        6,
        206,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        4,
        123,
        144,
        131,
        97,
        7,
        1,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        4,
        128,
        84,
        96,
        2,
        84,
        96,
        5,
        84,
        96,
        64,
        81,
        99,
        123,
        185,
        80,
        73,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        149,
        130,
        1,
        149,
        144,
        149,
        82,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        144,
        145,
        22,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        147,
        144,
        145,
        22,
        144,
        99,
        247,
        114,
        160,
        146,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        17,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        53,
        145,
        144,
        97,
        12,
        240,
        86,
        91,
        97,
        2,
        250,
        145,
        144,
        97,
        13,
        31,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        2,
        250,
        144,
        97,
        7,
        13,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        5,
        113,
        129,
        97,
        6,
        42,
        86,
        91,
        97,
        3,
        37,
        131,
        131,
        97,
        6,
        89,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        2,
        38,
        94,
        49,
        96,
        230,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        137,
        151,
        140,
        64,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        201,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        237,
        145,
        144,
        97,
        13,
        65,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        144,
        133,
        22,
        20,
        145,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        90,
        5,
        24,
        15,
        96,
        224,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        97,
        2,
        250,
        130,
        97,
        7,
        23,
        86,
        91,
        97,
        6,
        52,
        129,
        51,
        97,
        7,
        76,
        86,
        91,
        80,
        86,
        91,
        97,
        6,
        65,
        130,
        130,
        97,
        7,
        165,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        3,
        37,
        144,
        130,
        97,
        8,
        41,
        86,
        91,
        97,
        6,
        99,
        130,
        130,
        97,
        8,
        62,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        3,
        37,
        144,
        130,
        97,
        8,
        163,
        86,
        91,
        96,
        5,
        128,
        84,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        175,
        29,
        21,
        153,
        181,
        199,
        218,
        154,
        32,
        4,
        181,
        122,
        193,
        71,
        132,
        25,
        151,
        24,
        169,
        3,
        100,
        174,
        71,
        242,
        122,
        200,
        148,
        146,
        111,
        6,
        85,
        252,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        4,
        129,
        144,
        85,
        96,
        64,
        81,
        129,
        144,
        127,
        173,
        250,
        142,
        203,
        33,
        182,
        150,
        46,
        188,
        208,
        173,
        189,
        154,
        185,
        133,
        183,
        180,
        197,
        181,
        235,
        59,
        13,
        234,
        214,
        131,
        23,
        21,
        101,
        199,
        191,
        225,
        113,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        131,
        97,
        8,
        184,
        86,
        91,
        96,
        0,
        97,
        2,
        250,
        130,
        84,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        121,
        101,
        219,
        11,
        96,
        224,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        97,
        2,
        250,
        86,
        91,
        97,
        7,
        86,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        97,
        3,
        169,
        87,
        97,
        7,
        99,
        129,
        97,
        8,
        226,
        86,
        91,
        97,
        7,
        110,
        131,
        96,
        32,
        97,
        8,
        244,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        7,
        127,
        146,
        145,
        144,
        97,
        13,
        130,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        130,
        82,
        97,
        3,
        150,
        145,
        96,
        4,
        1,
        97,
        13,
        247,
        86,
        91,
        97,
        7,
        175,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        97,
        3,
        169,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        7,
        229,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        10,
        144,
        86,
        91,
        97,
        8,
        72,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        21,
        97,
        3,
        169,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        10,
        223,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        8,
        207,
        87,
        97,
        8,
        207,
        97,
        14,
        42,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        2,
        250,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        9,
        3,
        131,
        96,
        2,
        97,
        14,
        64,
        86,
        91,
        97,
        9,
        14,
        144,
        96,
        2,
        97,
        14,
        87,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        9,
        38,
        87,
        97,
        9,
        38,
        97,
        14,
        106,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        9,
        80,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        96,
        3,
        96,
        252,
        27,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        9,
        107,
        87,
        97,
        9,
        107,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        15,
        96,
        251,
        27,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        9,
        154,
        87,
        97,
        9,
        154,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        9,
        190,
        132,
        96,
        2,
        97,
        14,
        64,
        86,
        91,
        97,
        9,
        201,
        144,
        96,
        1,
        97,
        14,
        87,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        10,
        65,
        87,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        9,
        253,
        87,
        97,
        9,
        253,
        97,
        14,
        42,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        10,
        19,
        87,
        97,
        10,
        19,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        10,
        58,
        129,
        97,
        14,
        128,
        86,
        91,
        144,
        80,
        97,
        9,
        204,
        86,
        91,
        80,
        131,
        21,
        97,
        4,
        123,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        3,
        150,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        10,
        215,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        97,
        2,
        250,
        86,
        91,
        80,
        96,
        0,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        128,
        21,
        97,
        11,
        200,
        87,
        96,
        0,
        97,
        11,
        3,
        96,
        1,
        131,
        97,
        14,
        151,
        86,
        91,
        133,
        84,
        144,
        145,
        80,
        96,
        0,
        144,
        97,
        11,
        23,
        144,
        96,
        1,
        144,
        97,
        14,
        151,
        86,
        91,
        144,
        80,
        129,
        129,
        20,
        97,
        11,
        124,
        87,
        96,
        0,
        134,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        11,
        55,
        87,
        97,
        11,
        55,
        97,
        14,
        42,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        128,
        135,
        96,
        0,
        1,
        132,
        129,
        84,
        129,
        16,
        97,
        11,
        90,
        87,
        97,
        11,
        90,
        97,
        14,
        42,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        128,
        131,
        32,
        144,
        145,
        1,
        146,
        144,
        146,
        85,
        145,
        130,
        82,
        96,
        1,
        136,
        1,
        144,
        82,
        96,
        64,
        144,
        32,
        131,
        144,
        85,
        91,
        133,
        84,
        134,
        144,
        128,
        97,
        11,
        141,
        87,
        97,
        11,
        141,
        97,
        14,
        170,
        86,
        91,
        96,
        1,
        144,
        3,
        129,
        129,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        96,
        0,
        144,
        85,
        144,
        85,
        133,
        96,
        1,
        1,
        96,
        0,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        0,
        32,
        96,
        0,
        144,
        85,
        96,
        1,
        147,
        80,
        80,
        80,
        80,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        145,
        80,
        80,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        11,
        228,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        4,
        123,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        14,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        6,
        52,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        79,
        129,
        97,
        12,
        21,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        4,
        123,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        4,
        123,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        213,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        12,
        224,
        129,
        97,
        12,
        21,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        79,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        2,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        97,
        13,
        60,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        83,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        4,
        123,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        13,
        121,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        13,
        97,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        13,
        186,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        94,
        86,
        91,
        112,
        1,
        3,
        75,
        153,
        3,
        107,
        75,
        155,
        155,
        75,
        115,
        57,
        3,
        147,
        123,
        99,
        41,
        96,
        125,
        27,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        13,
        235,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        94,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        14,
        22,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        13,
        94,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        97,
        14,
        143,
        87,
        97,
        14,
        143,
        97,
        13,
        9,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        49,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        240,
        28,
        63,
        18,
        148,
        81,
        187,
        141,
        57,
        103,
        124,
        14,
        59,
        167,
        63,
        204,
        116,
        213,
        253,
        105,
        233,
        7,
        85,
        150,
        0,
        71,
        70,
        228,
        71,
        4,
        196,
        26,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
    ];
    ///The bytecode of the contract.
    pub static HOPRSAFEPROXYFORNETWORKREGISTRY_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __BYTECODE,
    );
    #[rustfmt::skip]
    const __DEPLOYED_BYTECODE: &[u8] = &[
        96,
        128,
        96,
        64,
        82,
        52,
        128,
        21,
        97,
        0,
        16,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        96,
        4,
        54,
        16,
        97,
        1,
        22,
        87,
        96,
        0,
        53,
        96,
        224,
        28,
        128,
        99,
        162,
        23,
        253,
        223,
        17,
        97,
        0,
        162,
        87,
        128,
        99,
        216,
        90,
        208,
        68,
        17,
        97,
        0,
        113,
        87,
        128,
        99,
        216,
        90,
        208,
        68,
        20,
        97,
        2,
        84,
        87,
        128,
        99,
        236,
        135,
        98,
        28,
        20,
        97,
        2,
        103,
        87,
        128,
        99,
        241,
        31,
        119,
        249,
        20,
        97,
        2,
        142,
        87,
        128,
        99,
        242,
        94,
        113,
        8,
        20,
        97,
        2,
        151,
        87,
        128,
        99,
        252,
        12,
        84,
        106,
        20,
        97,
        2,
        194,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        162,
        23,
        253,
        223,
        20,
        97,
        2,
        19,
        87,
        128,
        99,
        179,
        84,
        78,
        130,
        20,
        97,
        2,
        27,
        87,
        128,
        99,
        202,
        21,
        200,
        115,
        20,
        97,
        2,
        46,
        87,
        128,
        99,
        213,
        71,
        116,
        31,
        20,
        97,
        2,
        65,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        90,
        190,
        83,
        8,
        17,
        97,
        0,
        233,
        87,
        128,
        99,
        90,
        190,
        83,
        8,
        20,
        97,
        1,
        156,
        87,
        128,
        99,
        94,
        245,
        51,
        41,
        20,
        97,
        1,
        175,
        87,
        128,
        99,
        106,
        74,
        64,
        65,
        20,
        97,
        1,
        194,
        87,
        128,
        99,
        144,
        16,
        208,
        124,
        20,
        97,
        1,
        237,
        87,
        128,
        99,
        145,
        209,
        72,
        84,
        20,
        97,
        2,
        0,
        87,
        96,
        0,
        128,
        253,
        91,
        128,
        99,
        1,
        255,
        201,
        167,
        20,
        97,
        1,
        27,
        87,
        128,
        99,
        36,
        138,
        156,
        163,
        20,
        97,
        1,
        67,
        87,
        128,
        99,
        47,
        47,
        241,
        93,
        20,
        97,
        1,
        116,
        87,
        128,
        99,
        54,
        86,
        138,
        190,
        20,
        97,
        1,
        137,
        87,
        91,
        96,
        0,
        128,
        253,
        91,
        97,
        1,
        46,
        97,
        1,
        41,
        54,
        96,
        4,
        97,
        11,
        210,
        86,
        91,
        97,
        2,
        213,
        86,
        91,
        96,
        64,
        81,
        144,
        21,
        21,
        129,
        82,
        96,
        32,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        243,
        91,
        97,
        1,
        102,
        97,
        1,
        81,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        96,
        0,
        144,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        144,
        86,
        91,
        96,
        64,
        81,
        144,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        130,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        3,
        0,
        86,
        91,
        0,
        91,
        97,
        1,
        135,
        97,
        1,
        151,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        3,
        42,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        170,
        54,
        96,
        4,
        97,
        12,
        90,
        86,
        91,
        97,
        3,
        173,
        86,
        91,
        97,
        1,
        135,
        97,
        1,
        189,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        97,
        4,
        14,
        86,
        91,
        96,
        3,
        84,
        97,
        1,
        213,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        97,
        1,
        213,
        97,
        1,
        251,
        54,
        96,
        4,
        97,
        12,
        131,
        86,
        91,
        97,
        4,
        99,
        86,
        91,
        97,
        1,
        46,
        97,
        2,
        14,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        4,
        130,
        86,
        91,
        97,
        1,
        102,
        96,
        0,
        129,
        86,
        91,
        97,
        1,
        102,
        97,
        2,
        41,
        54,
        96,
        4,
        97,
        12,
        165,
        86,
        91,
        97,
        4,
        171,
        86,
        91,
        97,
        1,
        102,
        97,
        2,
        60,
        54,
        96,
        4,
        97,
        11,
        252,
        86,
        91,
        97,
        5,
        63,
        86,
        91,
        97,
        1,
        135,
        97,
        2,
        79,
        54,
        96,
        4,
        97,
        12,
        42,
        86,
        91,
        97,
        5,
        86,
        86,
        91,
        97,
        1,
        46,
        97,
        2,
        98,
        54,
        96,
        4,
        97,
        12,
        194,
        86,
        91,
        97,
        5,
        123,
        86,
        91,
        97,
        1,
        102,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        129,
        86,
        91,
        97,
        1,
        102,
        96,
        4,
        84,
        129,
        86,
        91,
        96,
        5,
        84,
        97,
        2,
        170,
        144,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        64,
        81,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        144,
        145,
        22,
        129,
        82,
        96,
        32,
        1,
        97,
        1,
        58,
        86,
        91,
        96,
        2,
        84,
        97,
        1,
        213,
        144,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        53,
        135,
        79,
        99,
        96,
        225,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        97,
        2,
        250,
        130,
        97,
        6,
        5,
        86,
        91,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        3,
        27,
        129,
        97,
        6,
        42,
        86,
        91,
        97,
        3,
        37,
        131,
        131,
        97,
        6,
        55,
        86,
        91,
        80,
        80,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        51,
        20,
        97,
        3,
        159,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        82,
        96,
        47,
        96,
        36,
        130,
        1,
        82,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        99,
        97,
        110,
        32,
        111,
        110,
        108,
        121,
        32,
        114,
        101,
        110,
        111,
        117,
        110,
        99,
        101,
        96,
        68,
        130,
        1,
        82,
        110,
        16,
        57,
        55,
        182,
        50,
        185,
        144,
        51,
        55,
        185,
        16,
        57,
        178,
        182,
        51,
        96,
        137,
        27,
        96,
        100,
        130,
        1,
        82,
        96,
        132,
        1,
        91,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        130,
        97,
        6,
        89,
        86,
        91,
        80,
        80,
        86,
        91,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        97,
        3,
        215,
        129,
        97,
        6,
        42,
        86,
        91,
        96,
        5,
        84,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        128,
        132,
        22,
        145,
        22,
        3,
        97,
        4,
        5,
        87,
        96,
        64,
        81,
        99,
        194,
        63,
        108,
        203,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        6,
        123,
        86,
        91,
        127,
        36,
        30,
        207,
        22,
        215,
        157,
        15,
        141,
        191,
        185,
        44,
        188,
        7,
        254,
        23,
        132,
        4,
        37,
        151,
        108,
        240,
        102,
        127,
        2,
        47,
        233,
        135,
        124,
        170,
        131,
        27,
        8,
        97,
        4,
        56,
        129,
        97,
        6,
        42,
        86,
        91,
        129,
        96,
        4,
        84,
        3,
        97,
        4,
        90,
        87,
        96,
        64,
        81,
        99,
        194,
        63,
        108,
        203,
        96,
        224,
        27,
        129,
        82,
        96,
        4,
        1,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        253,
        91,
        97,
        3,
        169,
        130,
        97,
        6,
        206,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        4,
        123,
        144,
        131,
        97,
        7,
        1,
        86,
        91,
        147,
        146,
        80,
        80,
        80,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        130,
        129,
        82,
        96,
        64,
        128,
        132,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        147,
        144,
        147,
        22,
        132,
        82,
        145,
        144,
        82,
        144,
        32,
        84,
        96,
        255,
        22,
        144,
        86,
        91,
        96,
        4,
        128,
        84,
        96,
        2,
        84,
        96,
        5,
        84,
        96,
        64,
        81,
        99,
        123,
        185,
        80,
        73,
        96,
        225,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        134,
        129,
        22,
        149,
        130,
        1,
        149,
        144,
        149,
        82,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        144,
        145,
        22,
        96,
        36,
        130,
        1,
        82,
        96,
        0,
        147,
        144,
        145,
        22,
        144,
        99,
        247,
        114,
        160,
        146,
        144,
        96,
        68,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        17,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        53,
        145,
        144,
        97,
        12,
        240,
        86,
        91,
        97,
        2,
        250,
        145,
        144,
        97,
        13,
        31,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        97,
        2,
        250,
        144,
        97,
        7,
        13,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        144,
        82,
        96,
        64,
        144,
        32,
        96,
        1,
        1,
        84,
        97,
        5,
        113,
        129,
        97,
        6,
        42,
        86,
        91,
        97,
        3,
        37,
        131,
        131,
        97,
        6,
        89,
        86,
        91,
        96,
        3,
        84,
        96,
        64,
        81,
        99,
        2,
        38,
        94,
        49,
        96,
        230,
        27,
        129,
        82,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        129,
        22,
        96,
        4,
        131,
        1,
        82,
        96,
        0,
        146,
        131,
        146,
        145,
        22,
        144,
        99,
        137,
        151,
        140,
        64,
        144,
        96,
        36,
        1,
        96,
        32,
        96,
        64,
        81,
        128,
        131,
        3,
        129,
        134,
        90,
        250,
        21,
        128,
        21,
        97,
        5,
        201,
        87,
        61,
        96,
        0,
        128,
        62,
        61,
        96,
        0,
        253,
        91,
        80,
        80,
        80,
        80,
        96,
        64,
        81,
        61,
        96,
        31,
        25,
        96,
        31,
        130,
        1,
        22,
        130,
        1,
        128,
        96,
        64,
        82,
        80,
        129,
        1,
        144,
        97,
        5,
        237,
        145,
        144,
        97,
        13,
        65,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        144,
        129,
        22,
        144,
        133,
        22,
        20,
        145,
        80,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        90,
        5,
        24,
        15,
        96,
        224,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        97,
        2,
        250,
        130,
        97,
        7,
        23,
        86,
        91,
        97,
        6,
        52,
        129,
        51,
        97,
        7,
        76,
        86,
        91,
        80,
        86,
        91,
        97,
        6,
        65,
        130,
        130,
        97,
        7,
        165,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        3,
        37,
        144,
        130,
        97,
        8,
        41,
        86,
        91,
        97,
        6,
        99,
        130,
        130,
        97,
        8,
        62,
        86,
        91,
        96,
        0,
        130,
        129,
        82,
        96,
        1,
        96,
        32,
        82,
        96,
        64,
        144,
        32,
        97,
        3,
        37,
        144,
        130,
        97,
        8,
        163,
        86,
        91,
        96,
        5,
        128,
        84,
        111,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        25,
        22,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        131,
        22,
        144,
        129,
        23,
        144,
        145,
        85,
        96,
        64,
        81,
        127,
        175,
        29,
        21,
        153,
        181,
        199,
        218,
        154,
        32,
        4,
        181,
        122,
        193,
        71,
        132,
        25,
        151,
        24,
        169,
        3,
        100,
        174,
        71,
        242,
        122,
        200,
        148,
        146,
        111,
        6,
        85,
        252,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        4,
        129,
        144,
        85,
        96,
        64,
        81,
        129,
        144,
        127,
        173,
        250,
        142,
        203,
        33,
        182,
        150,
        46,
        188,
        208,
        173,
        189,
        154,
        185,
        133,
        183,
        180,
        197,
        181,
        235,
        59,
        13,
        234,
        214,
        131,
        23,
        21,
        101,
        199,
        191,
        225,
        113,
        144,
        96,
        0,
        144,
        162,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        131,
        97,
        8,
        184,
        86,
        91,
        96,
        0,
        97,
        2,
        250,
        130,
        84,
        144,
        86,
        91,
        96,
        0,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        130,
        22,
        99,
        121,
        101,
        219,
        11,
        96,
        224,
        27,
        20,
        128,
        97,
        2,
        250,
        87,
        80,
        99,
        1,
        255,
        201,
        167,
        96,
        224,
        27,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        131,
        22,
        20,
        97,
        2,
        250,
        86,
        91,
        97,
        7,
        86,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        97,
        3,
        169,
        87,
        97,
        7,
        99,
        129,
        97,
        8,
        226,
        86,
        91,
        97,
        7,
        110,
        131,
        96,
        32,
        97,
        8,
        244,
        86,
        91,
        96,
        64,
        81,
        96,
        32,
        1,
        97,
        7,
        127,
        146,
        145,
        144,
        97,
        13,
        130,
        86,
        91,
        96,
        64,
        128,
        81,
        96,
        31,
        25,
        129,
        132,
        3,
        1,
        129,
        82,
        144,
        130,
        144,
        82,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        130,
        82,
        97,
        3,
        150,
        145,
        96,
        4,
        1,
        97,
        13,
        247,
        86,
        91,
        97,
        7,
        175,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        97,
        3,
        169,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        132,
        82,
        144,
        145,
        82,
        144,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        96,
        1,
        23,
        144,
        85,
        97,
        7,
        229,
        51,
        144,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        129,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        22,
        131,
        127,
        47,
        135,
        136,
        17,
        126,
        126,
        255,
        29,
        130,
        233,
        38,
        236,
        121,
        73,
        1,
        209,
        124,
        120,
        2,
        74,
        80,
        39,
        9,
        64,
        48,
        69,
        64,
        167,
        51,
        101,
        111,
        13,
        96,
        64,
        81,
        96,
        64,
        81,
        128,
        145,
        3,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        10,
        144,
        86,
        91,
        97,
        8,
        72,
        130,
        130,
        97,
        4,
        130,
        86,
        91,
        21,
        97,
        3,
        169,
        87,
        96,
        0,
        130,
        129,
        82,
        96,
        32,
        129,
        129,
        82,
        96,
        64,
        128,
        131,
        32,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        133,
        22,
        128,
        133,
        82,
        146,
        82,
        128,
        131,
        32,
        128,
        84,
        96,
        255,
        25,
        22,
        144,
        85,
        81,
        51,
        146,
        133,
        145,
        127,
        246,
        57,
        31,
        92,
        50,
        217,
        198,
        157,
        42,
        71,
        234,
        103,
        11,
        68,
        41,
        116,
        181,
        57,
        53,
        209,
        237,
        199,
        253,
        100,
        235,
        33,
        224,
        71,
        168,
        57,
        23,
        27,
        145,
        144,
        164,
        80,
        80,
        86,
        91,
        96,
        0,
        97,
        4,
        123,
        131,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        132,
        22,
        97,
        10,
        223,
        86,
        91,
        96,
        0,
        130,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        8,
        207,
        87,
        97,
        8,
        207,
        97,
        14,
        42,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        146,
        145,
        80,
        80,
        86,
        91,
        96,
        96,
        97,
        2,
        250,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        131,
        22,
        96,
        20,
        91,
        96,
        96,
        96,
        0,
        97,
        9,
        3,
        131,
        96,
        2,
        97,
        14,
        64,
        86,
        91,
        97,
        9,
        14,
        144,
        96,
        2,
        97,
        14,
        87,
        86,
        91,
        103,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        255,
        129,
        17,
        21,
        97,
        9,
        38,
        87,
        97,
        9,
        38,
        97,
        14,
        106,
        86,
        91,
        96,
        64,
        81,
        144,
        128,
        130,
        82,
        128,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        96,
        32,
        1,
        130,
        1,
        96,
        64,
        82,
        128,
        21,
        97,
        9,
        80,
        87,
        96,
        32,
        130,
        1,
        129,
        128,
        54,
        131,
        55,
        1,
        144,
        80,
        91,
        80,
        144,
        80,
        96,
        3,
        96,
        252,
        27,
        129,
        96,
        0,
        129,
        81,
        129,
        16,
        97,
        9,
        107,
        87,
        97,
        9,
        107,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        15,
        96,
        251,
        27,
        129,
        96,
        1,
        129,
        81,
        129,
        16,
        97,
        9,
        154,
        87,
        97,
        9,
        154,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        0,
        97,
        9,
        190,
        132,
        96,
        2,
        97,
        14,
        64,
        86,
        91,
        97,
        9,
        201,
        144,
        96,
        1,
        97,
        14,
        87,
        86,
        91,
        144,
        80,
        91,
        96,
        1,
        129,
        17,
        21,
        97,
        10,
        65,
        87,
        111,
        24,
        24,
        153,
        25,
        154,
        26,
        155,
        27,
        156,
        28,
        176,
        177,
        49,
        178,
        50,
        179,
        96,
        129,
        27,
        133,
        96,
        15,
        22,
        96,
        16,
        129,
        16,
        97,
        9,
        253,
        87,
        97,
        9,
        253,
        97,
        14,
        42,
        86,
        91,
        26,
        96,
        248,
        27,
        130,
        130,
        129,
        81,
        129,
        16,
        97,
        10,
        19,
        87,
        97,
        10,
        19,
        97,
        14,
        42,
        86,
        91,
        96,
        32,
        1,
        1,
        144,
        96,
        1,
        96,
        1,
        96,
        248,
        27,
        3,
        25,
        22,
        144,
        129,
        96,
        0,
        26,
        144,
        83,
        80,
        96,
        4,
        148,
        144,
        148,
        28,
        147,
        97,
        10,
        58,
        129,
        97,
        14,
        128,
        86,
        91,
        144,
        80,
        97,
        9,
        204,
        86,
        91,
        80,
        131,
        21,
        97,
        4,
        123,
        87,
        96,
        64,
        81,
        98,
        70,
        27,
        205,
        96,
        229,
        27,
        129,
        82,
        96,
        32,
        96,
        4,
        130,
        1,
        129,
        144,
        82,
        96,
        36,
        130,
        1,
        82,
        127,
        83,
        116,
        114,
        105,
        110,
        103,
        115,
        58,
        32,
        104,
        101,
        120,
        32,
        108,
        101,
        110,
        103,
        116,
        104,
        32,
        105,
        110,
        115,
        117,
        102,
        102,
        105,
        99,
        105,
        101,
        110,
        116,
        96,
        68,
        130,
        1,
        82,
        96,
        100,
        1,
        97,
        3,
        150,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        97,
        10,
        215,
        87,
        80,
        129,
        84,
        96,
        1,
        129,
        129,
        1,
        132,
        85,
        96,
        0,
        132,
        129,
        82,
        96,
        32,
        128,
        130,
        32,
        144,
        147,
        1,
        132,
        144,
        85,
        132,
        84,
        132,
        130,
        82,
        130,
        134,
        1,
        144,
        147,
        82,
        96,
        64,
        144,
        32,
        145,
        144,
        145,
        85,
        97,
        2,
        250,
        86,
        91,
        80,
        96,
        0,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        129,
        129,
        82,
        96,
        1,
        131,
        1,
        96,
        32,
        82,
        96,
        64,
        129,
        32,
        84,
        128,
        21,
        97,
        11,
        200,
        87,
        96,
        0,
        97,
        11,
        3,
        96,
        1,
        131,
        97,
        14,
        151,
        86,
        91,
        133,
        84,
        144,
        145,
        80,
        96,
        0,
        144,
        97,
        11,
        23,
        144,
        96,
        1,
        144,
        97,
        14,
        151,
        86,
        91,
        144,
        80,
        129,
        129,
        20,
        97,
        11,
        124,
        87,
        96,
        0,
        134,
        96,
        0,
        1,
        130,
        129,
        84,
        129,
        16,
        97,
        11,
        55,
        87,
        97,
        11,
        55,
        97,
        14,
        42,
        86,
        91,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        84,
        144,
        80,
        128,
        135,
        96,
        0,
        1,
        132,
        129,
        84,
        129,
        16,
        97,
        11,
        90,
        87,
        97,
        11,
        90,
        97,
        14,
        42,
        86,
        91,
        96,
        0,
        145,
        130,
        82,
        96,
        32,
        128,
        131,
        32,
        144,
        145,
        1,
        146,
        144,
        146,
        85,
        145,
        130,
        82,
        96,
        1,
        136,
        1,
        144,
        82,
        96,
        64,
        144,
        32,
        131,
        144,
        85,
        91,
        133,
        84,
        134,
        144,
        128,
        97,
        11,
        141,
        87,
        97,
        11,
        141,
        97,
        14,
        170,
        86,
        91,
        96,
        1,
        144,
        3,
        129,
        129,
        144,
        96,
        0,
        82,
        96,
        32,
        96,
        0,
        32,
        1,
        96,
        0,
        144,
        85,
        144,
        85,
        133,
        96,
        1,
        1,
        96,
        0,
        134,
        129,
        82,
        96,
        32,
        1,
        144,
        129,
        82,
        96,
        32,
        1,
        96,
        0,
        32,
        96,
        0,
        144,
        85,
        96,
        1,
        147,
        80,
        80,
        80,
        80,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        145,
        80,
        80,
        97,
        2,
        250,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        11,
        228,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        224,
        27,
        3,
        25,
        129,
        22,
        129,
        20,
        97,
        4,
        123,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        14,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        53,
        145,
        144,
        80,
        86,
        91,
        96,
        1,
        96,
        1,
        96,
        160,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        6,
        52,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        61,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        79,
        129,
        97,
        12,
        21,
        86,
        91,
        128,
        145,
        80,
        80,
        146,
        80,
        146,
        144,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        108,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        96,
        1,
        96,
        1,
        96,
        128,
        27,
        3,
        129,
        22,
        129,
        20,
        97,
        4,
        123,
        87,
        96,
        0,
        128,
        253,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        150,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        80,
        128,
        53,
        146,
        96,
        32,
        144,
        145,
        1,
        53,
        145,
        80,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        12,
        183,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        53,
        97,
        4,
        123,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        128,
        96,
        64,
        131,
        133,
        3,
        18,
        21,
        97,
        12,
        213,
        87,
        96,
        0,
        128,
        253,
        91,
        130,
        53,
        97,
        12,
        224,
        129,
        97,
        12,
        21,
        86,
        91,
        145,
        80,
        96,
        32,
        131,
        1,
        53,
        97,
        12,
        79,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        2,
        87,
        96,
        0,
        128,
        253,
        91,
        80,
        81,
        145,
        144,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        17,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        130,
        97,
        13,
        60,
        87,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        18,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        80,
        4,
        144,
        86,
        91,
        96,
        0,
        96,
        32,
        130,
        132,
        3,
        18,
        21,
        97,
        13,
        83,
        87,
        96,
        0,
        128,
        253,
        91,
        129,
        81,
        97,
        4,
        123,
        129,
        97,
        12,
        21,
        86,
        91,
        96,
        0,
        91,
        131,
        129,
        16,
        21,
        97,
        13,
        121,
        87,
        129,
        129,
        1,
        81,
        131,
        130,
        1,
        82,
        96,
        32,
        1,
        97,
        13,
        97,
        86,
        91,
        80,
        80,
        96,
        0,
        145,
        1,
        82,
        86,
        91,
        127,
        65,
        99,
        99,
        101,
        115,
        115,
        67,
        111,
        110,
        116,
        114,
        111,
        108,
        58,
        32,
        97,
        99,
        99,
        111,
        117,
        110,
        116,
        32,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        129,
        82,
        96,
        0,
        131,
        81,
        97,
        13,
        186,
        129,
        96,
        23,
        133,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        94,
        86,
        91,
        112,
        1,
        3,
        75,
        153,
        3,
        107,
        75,
        155,
        155,
        75,
        115,
        57,
        3,
        147,
        123,
        99,
        41,
        96,
        125,
        27,
        96,
        23,
        145,
        132,
        1,
        145,
        130,
        1,
        82,
        131,
        81,
        97,
        13,
        235,
        129,
        96,
        40,
        132,
        1,
        96,
        32,
        136,
        1,
        97,
        13,
        94,
        86,
        91,
        1,
        96,
        40,
        1,
        148,
        147,
        80,
        80,
        80,
        80,
        86,
        91,
        96,
        32,
        129,
        82,
        96,
        0,
        130,
        81,
        128,
        96,
        32,
        132,
        1,
        82,
        97,
        14,
        22,
        129,
        96,
        64,
        133,
        1,
        96,
        32,
        135,
        1,
        97,
        13,
        94,
        86,
        91,
        96,
        31,
        1,
        96,
        31,
        25,
        22,
        145,
        144,
        145,
        1,
        96,
        64,
        1,
        146,
        145,
        80,
        80,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        50,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        128,
        130,
        2,
        129,
        21,
        130,
        130,
        4,
        132,
        20,
        23,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        128,
        130,
        1,
        128,
        130,
        17,
        21,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        65,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        91,
        96,
        0,
        129,
        97,
        14,
        143,
        87,
        97,
        14,
        143,
        97,
        13,
        9,
        86,
        91,
        80,
        96,
        0,
        25,
        1,
        144,
        86,
        91,
        129,
        129,
        3,
        129,
        129,
        17,
        21,
        97,
        2,
        250,
        87,
        97,
        2,
        250,
        97,
        13,
        9,
        86,
        91,
        99,
        78,
        72,
        123,
        113,
        96,
        224,
        27,
        96,
        0,
        82,
        96,
        49,
        96,
        4,
        82,
        96,
        36,
        96,
        0,
        253,
        254,
        162,
        100,
        105,
        112,
        102,
        115,
        88,
        34,
        18,
        32,
        240,
        28,
        63,
        18,
        148,
        81,
        187,
        141,
        57,
        103,
        124,
        14,
        59,
        167,
        63,
        204,
        116,
        213,
        253,
        105,
        233,
        7,
        85,
        150,
        0,
        71,
        70,
        228,
        71,
        4,
        196,
        26,
        100,
        115,
        111,
        108,
        99,
        67,
        0,
        8,
        19,
        0,
        51,
    ];
    ///The deployed bytecode of the contract.
    pub static HOPRSAFEPROXYFORNETWORKREGISTRY_DEPLOYED_BYTECODE: ::ethers::core::types::Bytes = ::ethers::core::types::Bytes::from_static(
        __DEPLOYED_BYTECODE,
    );
    pub struct HoprSafeProxyForNetworkRegistry<M>(::ethers::contract::Contract<M>);
    impl<M> ::core::clone::Clone for HoprSafeProxyForNetworkRegistry<M> {
        fn clone(&self) -> Self {
            Self(::core::clone::Clone::clone(&self.0))
        }
    }
    impl<M> ::core::ops::Deref for HoprSafeProxyForNetworkRegistry<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> ::core::ops::DerefMut for HoprSafeProxyForNetworkRegistry<M> {
        fn deref_mut(&mut self) -> &mut Self::Target {
            &mut self.0
        }
    }
    impl<M> ::core::fmt::Debug for HoprSafeProxyForNetworkRegistry<M> {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            f.debug_tuple(stringify!(HoprSafeProxyForNetworkRegistry))
                .field(&self.address())
                .finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> HoprSafeProxyForNetworkRegistry<M> {
        /// Creates a new contract instance with the specified `ethers` client at
        /// `address`. The contract derefs to a `ethers::Contract` object.
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    HOPRSAFEPROXYFORNETWORKREGISTRY_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// - If there are no constructor arguments, you should pass `()` as the argument.
        /// - The default poll duration is 7 seconds.
        /// - The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter, "../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::core::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                HOPRSAFEPROXYFORNETWORKREGISTRY_ABI.clone(),
                HOPRSAFEPROXYFORNETWORKREGISTRY_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `DEFAULT_ADMIN_ROLE` (0xa217fddf) function
        pub fn default_admin_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([162, 23, 253, 223], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `MANAGER_ROLE` (0xec87621c) function
        pub fn manager_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([236, 135, 98, 28], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `canOperateFor` (0xd85ad044) function
        pub fn can_operate_for(
            &self,
            staking_account: ::ethers::core::types::Address,
            node_address: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([216, 90, 208, 68], (staking_account, node_address))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleAdmin` (0x248a9ca3) function
        pub fn get_role_admin(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([36, 138, 156, 163], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMember` (0x9010d07c) function
        pub fn get_role_member(
            &self,
            role: [u8; 32],
            index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([144, 16, 208, 124], (role, index))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMemberCount` (0xca15c873) function
        pub fn get_role_member_count(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([202, 21, 200, 115], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `grantRole` (0x2f2ff15d) function
        pub fn grant_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([47, 47, 241, 93], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasRole` (0x91d14854) function
        pub fn has_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([145, 209, 72, 84], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `maxAllowedRegistrations` (0xb3544e82) function
        pub fn max_allowed_registrations(
            &self,
            safe_address: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([179, 84, 78, 130], safe_address)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `nodeSafeRegistry` (0x6a4a4041) function
        pub fn node_safe_registry(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([106, 74, 64, 65], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceRole` (0x36568abe) function
        pub fn renounce_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([54, 86, 138, 190], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `revokeRole` (0xd547741f) function
        pub fn revoke_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([213, 71, 116, 31], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `snapshotBlockNumber` (0xf25e7108) function
        pub fn snapshot_block_number(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, u128> {
            self.0
                .method_hash([242, 94, 113, 8], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `stakeThreshold` (0xf11f77f9) function
        pub fn stake_threshold(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([241, 31, 119, 249], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `supportsInterface` (0x01ffc9a7) function
        pub fn supports_interface(
            &self,
            interface_id: [u8; 4],
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([1, 255, 201, 167], interface_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `token` (0xfc0c546a) function
        pub fn token(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([252, 12, 84, 106], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateSnapshotBlockNumber` (0x5abe5308) function
        pub fn update_snapshot_block_number(
            &self,
            new_snapshot_block: u128,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([90, 190, 83, 8], new_snapshot_block)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateStakeThreshold` (0x5ef53329) function
        pub fn update_stake_threshold(
            &self,
            new_threshold: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([94, 245, 51, 41], new_threshold)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `RoleAdminChanged` event
        pub fn role_admin_changed_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleAdminChangedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RoleGranted` event
        pub fn role_granted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleGrantedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `RoleRevoked` event
        pub fn role_revoked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            RoleRevokedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `SnapshotUpdated` event
        pub fn snapshot_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            SnapshotUpdatedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `ThresholdUpdated` event
        pub fn threshold_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            ThresholdUpdatedFilter,
        > {
            self.0.event()
        }
        ///Gets the contract's `TokenAndRegistryUpdated` event
        pub fn token_and_registry_updated_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            TokenAndRegistryUpdatedFilter,
        > {
            self.0.event()
        }
        /// Returns an `Event` builder for all the events of this contract.
        pub fn events(
            &self,
        ) -> ::ethers::contract::builders::Event<
            ::std::sync::Arc<M>,
            M,
            HoprSafeProxyForNetworkRegistryEvents,
        > {
            self.0.event_with_filter(::core::default::Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for HoprSafeProxyForNetworkRegistry<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    ///Custom Error type `SameValue` with signature `SameValue()` and selector `0xc23f6ccb`
    #[derive(
        Clone,
        ::ethers::contract::EthError,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[etherror(name = "SameValue", abi = "SameValue()")]
    pub struct SameValue;
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "RoleAdminChanged",
        abi = "RoleAdminChanged(bytes32,bytes32,bytes32)"
    )]
    pub struct RoleAdminChangedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub previous_admin_role: [u8; 32],
        #[ethevent(indexed)]
        pub new_admin_role: [u8; 32],
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RoleGranted", abi = "RoleGranted(bytes32,address,address)")]
    pub struct RoleGrantedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "RoleRevoked", abi = "RoleRevoked(bytes32,address,address)")]
    pub struct RoleRevokedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "SnapshotUpdated", abi = "SnapshotUpdated(uint128)")]
    pub struct SnapshotUpdatedFilter {
        #[ethevent(indexed)]
        pub block_number: u128,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(name = "ThresholdUpdated", abi = "ThresholdUpdated(uint256)")]
    pub struct ThresholdUpdatedFilter {
        #[ethevent(indexed)]
        pub threshold: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethevent(
        name = "TokenAndRegistryUpdated",
        abi = "TokenAndRegistryUpdated(address,address)"
    )]
    pub struct TokenAndRegistryUpdatedFilter {
        #[ethevent(indexed)]
        pub token: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub node_safe_registry: ::ethers::core::types::Address,
    }
    ///Container type for all of the contract's events
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum HoprSafeProxyForNetworkRegistryEvents {
        RoleAdminChangedFilter(RoleAdminChangedFilter),
        RoleGrantedFilter(RoleGrantedFilter),
        RoleRevokedFilter(RoleRevokedFilter),
        SnapshotUpdatedFilter(SnapshotUpdatedFilter),
        ThresholdUpdatedFilter(ThresholdUpdatedFilter),
        TokenAndRegistryUpdatedFilter(TokenAndRegistryUpdatedFilter),
    }
    impl ::ethers::contract::EthLogDecode for HoprSafeProxyForNetworkRegistryEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::Error> {
            if let Ok(decoded) = RoleAdminChangedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::RoleAdminChangedFilter(
                        decoded,
                    ),
                );
            }
            if let Ok(decoded) = RoleGrantedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::RoleGrantedFilter(decoded),
                );
            }
            if let Ok(decoded) = RoleRevokedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::RoleRevokedFilter(decoded),
                );
            }
            if let Ok(decoded) = SnapshotUpdatedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::SnapshotUpdatedFilter(decoded),
                );
            }
            if let Ok(decoded) = ThresholdUpdatedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::ThresholdUpdatedFilter(
                        decoded,
                    ),
                );
            }
            if let Ok(decoded) = TokenAndRegistryUpdatedFilter::decode_log(log) {
                return Ok(
                    HoprSafeProxyForNetworkRegistryEvents::TokenAndRegistryUpdatedFilter(
                        decoded,
                    ),
                );
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::core::fmt::Display for HoprSafeProxyForNetworkRegistryEvents {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::RoleAdminChangedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::RoleGrantedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::RoleRevokedFilter(element) => ::core::fmt::Display::fmt(element, f),
                Self::SnapshotUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::ThresholdUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::TokenAndRegistryUpdatedFilter(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<RoleAdminChangedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: RoleAdminChangedFilter) -> Self {
            Self::RoleAdminChangedFilter(value)
        }
    }
    impl ::core::convert::From<RoleGrantedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: RoleGrantedFilter) -> Self {
            Self::RoleGrantedFilter(value)
        }
    }
    impl ::core::convert::From<RoleRevokedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: RoleRevokedFilter) -> Self {
            Self::RoleRevokedFilter(value)
        }
    }
    impl ::core::convert::From<SnapshotUpdatedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: SnapshotUpdatedFilter) -> Self {
            Self::SnapshotUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<ThresholdUpdatedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: ThresholdUpdatedFilter) -> Self {
            Self::ThresholdUpdatedFilter(value)
        }
    }
    impl ::core::convert::From<TokenAndRegistryUpdatedFilter>
    for HoprSafeProxyForNetworkRegistryEvents {
        fn from(value: TokenAndRegistryUpdatedFilter) -> Self {
            Self::TokenAndRegistryUpdatedFilter(value)
        }
    }
    ///Container type for all input parameters for the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "DEFAULT_ADMIN_ROLE", abi = "DEFAULT_ADMIN_ROLE()")]
    pub struct DefaultAdminRoleCall;
    ///Container type for all input parameters for the `MANAGER_ROLE` function with signature `MANAGER_ROLE()` and selector `0xec87621c`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "MANAGER_ROLE", abi = "MANAGER_ROLE()")]
    pub struct ManagerRoleCall;
    ///Container type for all input parameters for the `canOperateFor` function with signature `canOperateFor(address,address)` and selector `0xd85ad044`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "canOperateFor", abi = "canOperateFor(address,address)")]
    pub struct CanOperateForCall {
        pub staking_account: ::ethers::core::types::Address,
        pub node_address: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getRoleAdmin", abi = "getRoleAdmin(bytes32)")]
    pub struct GetRoleAdminCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getRoleMember", abi = "getRoleMember(bytes32,uint256)")]
    pub struct GetRoleMemberCall {
        pub role: [u8; 32],
        pub index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "getRoleMemberCount", abi = "getRoleMemberCount(bytes32)")]
    pub struct GetRoleMemberCountCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `grantRole` function with signature `grantRole(bytes32,address)` and selector `0x2f2ff15d`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "grantRole", abi = "grantRole(bytes32,address)")]
    pub struct GrantRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "hasRole", abi = "hasRole(bytes32,address)")]
    pub struct HasRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `maxAllowedRegistrations` function with signature `maxAllowedRegistrations(address)` and selector `0xb3544e82`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "maxAllowedRegistrations",
        abi = "maxAllowedRegistrations(address)"
    )]
    pub struct MaxAllowedRegistrationsCall {
        pub safe_address: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `nodeSafeRegistry` function with signature `nodeSafeRegistry()` and selector `0x6a4a4041`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "nodeSafeRegistry", abi = "nodeSafeRegistry()")]
    pub struct NodeSafeRegistryCall;
    ///Container type for all input parameters for the `renounceRole` function with signature `renounceRole(bytes32,address)` and selector `0x36568abe`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "renounceRole", abi = "renounceRole(bytes32,address)")]
    pub struct RenounceRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `revokeRole` function with signature `revokeRole(bytes32,address)` and selector `0xd547741f`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "revokeRole", abi = "revokeRole(bytes32,address)")]
    pub struct RevokeRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `snapshotBlockNumber` function with signature `snapshotBlockNumber()` and selector `0xf25e7108`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "snapshotBlockNumber", abi = "snapshotBlockNumber()")]
    pub struct SnapshotBlockNumberCall;
    ///Container type for all input parameters for the `stakeThreshold` function with signature `stakeThreshold()` and selector `0xf11f77f9`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "stakeThreshold", abi = "stakeThreshold()")]
    pub struct StakeThresholdCall;
    ///Container type for all input parameters for the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "supportsInterface", abi = "supportsInterface(bytes4)")]
    pub struct SupportsInterfaceCall {
        pub interface_id: [u8; 4],
    }
    ///Container type for all input parameters for the `token` function with signature `token()` and selector `0xfc0c546a`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "token", abi = "token()")]
    pub struct TokenCall;
    ///Container type for all input parameters for the `updateSnapshotBlockNumber` function with signature `updateSnapshotBlockNumber(uint128)` and selector `0x5abe5308`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(
        name = "updateSnapshotBlockNumber",
        abi = "updateSnapshotBlockNumber(uint128)"
    )]
    pub struct UpdateSnapshotBlockNumberCall {
        pub new_snapshot_block: u128,
    }
    ///Container type for all input parameters for the `updateStakeThreshold` function with signature `updateStakeThreshold(uint256)` and selector `0x5ef53329`
    #[derive(
        Clone,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    #[ethcall(name = "updateStakeThreshold", abi = "updateStakeThreshold(uint256)")]
    pub struct UpdateStakeThresholdCall {
        pub new_threshold: ::ethers::core::types::U256,
    }
    ///Container type for all of the contract's call
    #[derive(Clone, ::ethers::contract::EthAbiType, Debug, PartialEq, Eq, Hash)]
    pub enum HoprSafeProxyForNetworkRegistryCalls {
        DefaultAdminRole(DefaultAdminRoleCall),
        ManagerRole(ManagerRoleCall),
        CanOperateFor(CanOperateForCall),
        GetRoleAdmin(GetRoleAdminCall),
        GetRoleMember(GetRoleMemberCall),
        GetRoleMemberCount(GetRoleMemberCountCall),
        GrantRole(GrantRoleCall),
        HasRole(HasRoleCall),
        MaxAllowedRegistrations(MaxAllowedRegistrationsCall),
        NodeSafeRegistry(NodeSafeRegistryCall),
        RenounceRole(RenounceRoleCall),
        RevokeRole(RevokeRoleCall),
        SnapshotBlockNumber(SnapshotBlockNumberCall),
        StakeThreshold(StakeThresholdCall),
        SupportsInterface(SupportsInterfaceCall),
        Token(TokenCall),
        UpdateSnapshotBlockNumber(UpdateSnapshotBlockNumberCall),
        UpdateStakeThreshold(UpdateStakeThresholdCall),
    }
    impl ::ethers::core::abi::AbiDecode for HoprSafeProxyForNetworkRegistryCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::core::result::Result<Self, ::ethers::core::abi::AbiError> {
            let data = data.as_ref();
            if let Ok(decoded)
                = <DefaultAdminRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::DefaultAdminRole(decoded));
            }
            if let Ok(decoded)
                = <ManagerRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::ManagerRole(decoded));
            }
            if let Ok(decoded)
                = <CanOperateForCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::CanOperateFor(decoded));
            }
            if let Ok(decoded)
                = <GetRoleAdminCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleAdmin(decoded));
            }
            if let Ok(decoded)
                = <GetRoleMemberCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GetRoleMember(decoded));
            }
            if let Ok(decoded)
                = <GetRoleMemberCountCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::GetRoleMemberCount(decoded));
            }
            if let Ok(decoded)
                = <GrantRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::GrantRole(decoded));
            }
            if let Ok(decoded)
                = <HasRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::HasRole(decoded));
            }
            if let Ok(decoded)
                = <MaxAllowedRegistrationsCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::MaxAllowedRegistrations(decoded));
            }
            if let Ok(decoded)
                = <NodeSafeRegistryCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::NodeSafeRegistry(decoded));
            }
            if let Ok(decoded)
                = <RenounceRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RenounceRole(decoded));
            }
            if let Ok(decoded)
                = <RevokeRoleCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::RevokeRole(decoded));
            }
            if let Ok(decoded)
                = <SnapshotBlockNumberCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SnapshotBlockNumber(decoded));
            }
            if let Ok(decoded)
                = <StakeThresholdCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::StakeThreshold(decoded));
            }
            if let Ok(decoded)
                = <SupportsInterfaceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::SupportsInterface(decoded));
            }
            if let Ok(decoded)
                = <TokenCall as ::ethers::core::abi::AbiDecode>::decode(data) {
                return Ok(Self::Token(decoded));
            }
            if let Ok(decoded)
                = <UpdateSnapshotBlockNumberCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::UpdateSnapshotBlockNumber(decoded));
            }
            if let Ok(decoded)
                = <UpdateStakeThresholdCall as ::ethers::core::abi::AbiDecode>::decode(
                    data,
                ) {
                return Ok(Self::UpdateStakeThreshold(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for HoprSafeProxyForNetworkRegistryCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                Self::DefaultAdminRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::ManagerRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::CanOperateFor(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetRoleAdmin(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetRoleMember(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GetRoleMemberCount(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::GrantRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::HasRole(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::MaxAllowedRegistrations(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::NodeSafeRegistry(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RenounceRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::RevokeRole(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SnapshotBlockNumber(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::StakeThreshold(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::SupportsInterface(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::Token(element) => ::ethers::core::abi::AbiEncode::encode(element),
                Self::UpdateSnapshotBlockNumber(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
                Self::UpdateStakeThreshold(element) => {
                    ::ethers::core::abi::AbiEncode::encode(element)
                }
            }
        }
    }
    impl ::core::fmt::Display for HoprSafeProxyForNetworkRegistryCalls {
        fn fmt(&self, f: &mut ::core::fmt::Formatter<'_>) -> ::core::fmt::Result {
            match self {
                Self::DefaultAdminRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::ManagerRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::CanOperateFor(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleAdmin(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleMember(element) => ::core::fmt::Display::fmt(element, f),
                Self::GetRoleMemberCount(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::GrantRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::HasRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::MaxAllowedRegistrations(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::NodeSafeRegistry(element) => ::core::fmt::Display::fmt(element, f),
                Self::RenounceRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::RevokeRole(element) => ::core::fmt::Display::fmt(element, f),
                Self::SnapshotBlockNumber(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::StakeThreshold(element) => ::core::fmt::Display::fmt(element, f),
                Self::SupportsInterface(element) => ::core::fmt::Display::fmt(element, f),
                Self::Token(element) => ::core::fmt::Display::fmt(element, f),
                Self::UpdateSnapshotBlockNumber(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
                Self::UpdateStakeThreshold(element) => {
                    ::core::fmt::Display::fmt(element, f)
                }
            }
        }
    }
    impl ::core::convert::From<DefaultAdminRoleCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: DefaultAdminRoleCall) -> Self {
            Self::DefaultAdminRole(value)
        }
    }
    impl ::core::convert::From<ManagerRoleCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: ManagerRoleCall) -> Self {
            Self::ManagerRole(value)
        }
    }
    impl ::core::convert::From<CanOperateForCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: CanOperateForCall) -> Self {
            Self::CanOperateFor(value)
        }
    }
    impl ::core::convert::From<GetRoleAdminCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: GetRoleAdminCall) -> Self {
            Self::GetRoleAdmin(value)
        }
    }
    impl ::core::convert::From<GetRoleMemberCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: GetRoleMemberCall) -> Self {
            Self::GetRoleMember(value)
        }
    }
    impl ::core::convert::From<GetRoleMemberCountCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: GetRoleMemberCountCall) -> Self {
            Self::GetRoleMemberCount(value)
        }
    }
    impl ::core::convert::From<GrantRoleCall> for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: GrantRoleCall) -> Self {
            Self::GrantRole(value)
        }
    }
    impl ::core::convert::From<HasRoleCall> for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: HasRoleCall) -> Self {
            Self::HasRole(value)
        }
    }
    impl ::core::convert::From<MaxAllowedRegistrationsCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: MaxAllowedRegistrationsCall) -> Self {
            Self::MaxAllowedRegistrations(value)
        }
    }
    impl ::core::convert::From<NodeSafeRegistryCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: NodeSafeRegistryCall) -> Self {
            Self::NodeSafeRegistry(value)
        }
    }
    impl ::core::convert::From<RenounceRoleCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: RenounceRoleCall) -> Self {
            Self::RenounceRole(value)
        }
    }
    impl ::core::convert::From<RevokeRoleCall> for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: RevokeRoleCall) -> Self {
            Self::RevokeRole(value)
        }
    }
    impl ::core::convert::From<SnapshotBlockNumberCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: SnapshotBlockNumberCall) -> Self {
            Self::SnapshotBlockNumber(value)
        }
    }
    impl ::core::convert::From<StakeThresholdCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: StakeThresholdCall) -> Self {
            Self::StakeThreshold(value)
        }
    }
    impl ::core::convert::From<SupportsInterfaceCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: SupportsInterfaceCall) -> Self {
            Self::SupportsInterface(value)
        }
    }
    impl ::core::convert::From<TokenCall> for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: TokenCall) -> Self {
            Self::Token(value)
        }
    }
    impl ::core::convert::From<UpdateSnapshotBlockNumberCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: UpdateSnapshotBlockNumberCall) -> Self {
            Self::UpdateSnapshotBlockNumber(value)
        }
    }
    impl ::core::convert::From<UpdateStakeThresholdCall>
    for HoprSafeProxyForNetworkRegistryCalls {
        fn from(value: UpdateStakeThresholdCall) -> Self {
            Self::UpdateStakeThreshold(value)
        }
    }
    ///Container type for all return fields from the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct DefaultAdminRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `MANAGER_ROLE` function with signature `MANAGER_ROLE()` and selector `0xec87621c`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct ManagerRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `canOperateFor` function with signature `canOperateFor(address,address)` and selector `0xd85ad044`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct CanOperateForReturn {
        pub eligiblity: bool,
    }
    ///Container type for all return fields from the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetRoleAdminReturn(pub [u8; 32]);
    ///Container type for all return fields from the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetRoleMemberReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct GetRoleMemberCountReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct HasRoleReturn(pub bool);
    ///Container type for all return fields from the `maxAllowedRegistrations` function with signature `maxAllowedRegistrations(address)` and selector `0xb3544e82`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct MaxAllowedRegistrationsReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `nodeSafeRegistry` function with signature `nodeSafeRegistry()` and selector `0x6a4a4041`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct NodeSafeRegistryReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `snapshotBlockNumber` function with signature `snapshotBlockNumber()` and selector `0xf25e7108`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SnapshotBlockNumberReturn(pub u128);
    ///Container type for all return fields from the `stakeThreshold` function with signature `stakeThreshold()` and selector `0xf11f77f9`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct StakeThresholdReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct SupportsInterfaceReturn(pub bool);
    ///Container type for all return fields from the `token` function with signature `token()` and selector `0xfc0c546a`
    #[derive(
        Clone,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
        Default,
        Debug,
        PartialEq,
        Eq,
        Hash
    )]
    pub struct TokenReturn(pub ::ethers::core::types::Address);
}
