pub use hopr_boost::*;
#[allow(clippy::too_many_arguments, non_camel_case_types)]
pub mod hopr_boost {
    #![allow(clippy::enum_variant_names)]
    #![allow(dead_code)]
    #![allow(clippy::type_complexity)]
    #![allow(unused_imports)]
    ///HoprBoost was auto-generated with ethers-rs Abigen. More information at: https://github.com/gakonst/ethers-rs
    use std::sync::Arc;
    use ::ethers::core::{
        abi::{Abi, Token, Detokenize, InvalidOutputType, Tokenizable},
        types::*,
    };
    use ::ethers::contract::{
        Contract, builders::{ContractCall, Event},
        Lazy,
    };
    use ::ethers::providers::Middleware;
    #[rustfmt::skip]
    const __ABI: &str = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Approval\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\",\"components\":[],\"indexed\":false}],\"type\":\"event\",\"name\":\"ApprovalForAll\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"boostTypeIndex\",\"type\":\"uint256\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"boostNumerator\",\"type\":\"uint256\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"redeemDeadline\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"BoostMinted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleAdminChanged\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleGranted\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"RoleRevoked\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[],\"indexed\":true},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[],\"indexed\":true}],\"type\":\"event\",\"name\":\"Transfer\",\"outputs\":[],\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"approve\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"to\",\"type\":\"address[]\",\"components\":[]},{\"internalType\":\"string\",\"name\":\"boostType\",\"type\":\"string\",\"components\":[]},{\"internalType\":\"string\",\"name\":\"boostRank\",\"type\":\"string\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"boostNumerator\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"redeemDeadline\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"batchMint\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"boostOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"grantRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"string\",\"name\":\"boostType\",\"type\":\"string\",\"components\":[]},{\"internalType\":\"string\",\"name\":\"boostRank\",\"type\":\"string\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"boostNumerator\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"redeemDeadline\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"mint\",\"outputs\":[]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"reclaimErc20Tokens\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"reclaimErc721Tokens\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"renounceRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"revokeRole\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"safeTransferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"safeTransferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setApprovalForAll\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\",\"components\":[]},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"transferFrom\",\"outputs\":[]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"typeIndex\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"typeAt\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"typeIndexOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\",\"components\":[]}],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"typeOf\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\",\"components\":[]}]},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\",\"components\":[]}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"updateBaseURI\",\"outputs\":[]}]";
    /// The parsed JSON-ABI of the contract.
    pub static HOPRBOOST_ABI: ::ethers::contract::Lazy<::ethers::core::abi::Abi> = ::ethers::contract::Lazy::new(||
    ::ethers::core::utils::__serde_json::from_str(__ABI).expect("invalid abi"));
    /// Bytecode of the #name contract
    pub static HOPRBOOST_BYTECODE: ::ethers::contract::Lazy<
        ::ethers::core::types::Bytes,
    > = ::ethers::contract::Lazy::new(|| {
        "0x60806040523480156200001157600080fd5b50604051620034f3380380620034f3833981016040819052620000349162000271565b6040518060400160405280600e81526020016d1213d41488109bdbdcdd0813919560921b8152506040518060400160405280600a8152602001691213d41488109bdbdcdd60b21b81525081600290816200008f9190620003f5565b5060036200009e8282620003f5565b50506001600d5550600e620000b48282620003f5565b50620000c2600083620000f6565b620000ee7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a683620000f6565b5050620004c1565b62000102828262000106565b5050565b6200011d82826200014960201b62000fb01760201c565b60008281526001602090815260409091206200014491839062001034620001e9821b17901c565b505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000102576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620001a53390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000200836001600160a01b03841662000209565b90505b92915050565b6000818152600183016020526040812054620002525750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000203565b50600062000203565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200028557600080fd5b82516001600160a01b03811681146200029d57600080fd5b602084810151919350906001600160401b0380821115620002bd57600080fd5b818601915086601f830112620002d257600080fd5b815181811115620002e757620002e76200025b565b604051601f8201601f19908116603f011681019083821181831017156200031257620003126200025b565b8160405282815289868487010111156200032b57600080fd5b600093505b828410156200034f578484018601518185018701529285019262000330565b60008684830101528096505050505050509250929050565b600181811c908216806200037c57607f821691505b6020821081036200039d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200014457600081815260208120601f850160051c81016020861015620003cc5750805b601f850160051c820191505b81811015620003ed57828155600101620003d8565b505050505050565b81516001600160401b038111156200041157620004116200025b565b620004298162000422845462000367565b84620003a3565b602080601f831160018114620004615760008415620004485750858301515b600019600386901b1c1916600185901b178555620003ed565b600085815260208120601f198616915b82811015620004925788860151825594840194600190910190840162000471565b5085821015620004b15787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61302280620004d16000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806370a082311161011a578063a22cb465116100ad578063c87b56dd1161007c578063c87b56dd14610498578063ca15c873146104ab578063d5391393146104be578063d547741f146104e5578063e985e9c5146104f857600080fd5b8063a22cb4651461044c578063b5185a881461045f578063b88d4fde14610472578063c588ff8b1461048557600080fd5b8063931688cb116100e9578063931688cb146104165780639365c5331461042957806395d89b411461043c578063a217fddf1461044457600080fd5b806370a082311461039b578063896cddf4146103ae5780639010d07c146103f057806391d148541461040357600080fd5b80632f2ff15d1161019d57806348c64e411161016c57806348c64e411461032f5780634f6ccce714610342578063562317c5146103555780636067bc15146103755780636352211e1461038857600080fd5b80632f2ff15d146102e35780632f745c59146102f657806336568abe1461030957806342842e0e1461031c57600080fd5b806318160ddd116101d957806318160ddd1461028857806323b872dd1461029a578063248a9ca3146102ad57806329867dac146102d057600080fd5b806301ffc9a71461020b57806306fdde0314610233578063081812fc14610248578063095ea7b314610273575b600080fd5b61021e61021936600461266f565b610534565b60405190151581526020015b60405180910390f35b61023b61055f565b60405161022a91906126dc565b61025b6102563660046126ef565b6105f1565b6040516001600160a01b03909116815260200161022a565b610286610281366004612724565b61067e565b005b600b545b60405190815260200161022a565b6102866102a836600461274e565b610793565b61028c6102bb3660046126ef565b60009081526020819052604090206001015490565b6102866102de366004612836565b6107c4565b6102866102f13660046128bc565b610876565b61028c610304366004612724565b61089c565b6102866103173660046128bc565b610932565b61028661032a36600461274e565b6109b0565b61028661033d366004612724565b6109cb565b61028c6103503660046126ef565b610aa4565b61028c6103633660046126ef565b60009081526013602052604090205490565b6102866103833660046128e8565b610b37565b61025b6103963660046126ef565b610c20565b61028c6103a93660046128e8565b610c97565b6103db6103bc3660046126ef565b6000908152601160209081526040808320546012909252909120549091565b6040805192835260208301919091520161022a565b61025b6103fe366004612903565b610d1e565b61021e6104113660046128bc565b610d3d565b610286610424366004612925565b610d66565b6102866104373660046129a3565b610d7e565b61023b610eeb565b61028c600081565b61028661045a366004612a88565b610efa565b61023b61046d3660046126ef565b610f05565b610286610480366004612abf565b610f12565b61023b6104933660046126ef565b610f4a565b61023b6104a63660046126ef565b610f68565b61028c6104b93660046126ef565b610f73565b61028c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102866104f33660046128bc565b610f8a565b61021e610506366004612b3b565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216630d639add60e11b1480610559575061055982611049565b92915050565b60606002805461056e90612b65565b80601f016020809104026020016040519081016040528092919081815260200182805461059a90612b65565b80156105e75780601f106105bc576101008083540402835291602001916105e7565b820191906000526020600020905b8154815290600101906020018083116105ca57829003601f168201915b5050505050905090565b60006105fc8261106e565b6106625760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061068982610c20565b9050806001600160a01b0316836001600160a01b0316036106f65760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610659565b336001600160a01b038216148061071257506107128133610506565b6107845760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610659565b61078e838361108b565b505050565b61079d33826110f9565b6107b95760405162461bcd60e51b815260040161065990612b9f565b61078e8383836111e3565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66107ef813361138e565b6107fa600f866113f2565b506000610808600f8761149f565b90506000868660405160200161081f929190612bf0565b604051602081830303815290604052905061083d88868685856114ca565b8385837f735e5eb5afdd72cc64657ded7e5de390af3708afb5b9a80b0e5c911a0499d98f60405160405180910390a45050505050505050565b600082815260208190526040902060010154610892813361138e565b61078e838361151b565b60006108a783610c97565b82106109095760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610659565b506001600160a01b03919091166000908152600960209081526040808320938352929052205490565b6001600160a01b03811633146109a25760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152608401610659565b6109ac828261153d565b5050565b61078e83838360405180602001604052806000815250610f12565b60006109d7813361138e565b6002600d5403610a295760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610659565b6002600d55604080516323b872dd60e01b81523060048201523360248201526044810184905290516001600160a01b038516916323b872dd91606480830192600092919082900301818387803b158015610a8257600080fd5b505af1158015610a96573d6000803e3d6000fd5b50506001600d555050505050565b6000610aaf600b5490565b8210610b125760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610659565b600b8281548110610b2557610b25612c2c565b90600052602060002001549050919050565b6000610b43813361138e565b6002600d5403610b955760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610659565b6002600d55610c17336040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610be2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c069190612c42565b6001600160a01b038516919061155f565b50506001600d55565b6000818152600460205260408120546001600160a01b0316806105595760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610659565b60006001600160a01b038216610d025760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610659565b506001600160a01b031660009081526005602052604090205490565b6000828152600160205260408120610d3690836115b1565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610d72813361138e565b600e61078e8382612ca1565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6610da9813361138e565b610dec87878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600f939250506113f29050565b506000610e3288888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250600f9392505061149f9050565b9050600088888888604051602001610e4d9493929190612d61565b604051602081830303815290604052905060005b8a811015610eae57610e9c8c8c83818110610e7e57610e7e612c2c565b9050602002016020810190610e9391906128e8565b878786866114ca565b80610ea681612da2565b915050610e61565b508385837f735e5eb5afdd72cc64657ded7e5de390af3708afb5b9a80b0e5c911a0499d98f60405160405180910390a45050505050505050505050565b60606003805461056e90612b65565b6109ac3383836115bd565b6060610559600f8361168b565b610f1c33836110f9565b610f385760405162461bcd60e51b815260040161065990612b9f565b610f4484848484611744565b50505050565b60008181526013602052604090205460609061055990600f9061168b565b606061055982611777565b6000818152600160205260408120610559906118d8565b600082815260208190526040902060010154610fa6813361138e565b61078e838361153d565b610fba8282610d3d565b6109ac576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610ff03390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610d36836001600160a01b0384166118e2565b60006001600160e01b0319821663780e9d6360e01b1480610559575061055982611929565b6000908152600460205260409020546001600160a01b0316151590565b600081815260066020526040902080546001600160a01b0319166001600160a01b03841690811790915581906110c082610c20565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60006111048261106e565b6111655760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610659565b600061117083610c20565b9050806001600160a01b0316846001600160a01b031614806111ab5750836001600160a01b03166111a0846105f1565b6001600160a01b0316145b806111db57506001600160a01b0380821660009081526007602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b03166111f682610c20565b6001600160a01b03161461125e5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610659565b6001600160a01b0382166112c05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610659565b6112cb838383611969565b6112d660008261108b565b6001600160a01b03831660009081526005602052604081208054600192906112ff908490612dbb565b90915550506001600160a01b038216600090815260056020526040812080546001929061132d908490612dce565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6113988282610d3d565b6109ac576113b0816001600160a01b03166014611974565b6113bb836020611974565b6040516020016113cc929190612de1565b60408051601f198184030181529082905262461bcd60e51b8252610659916004016126dc565b60006113fe8383611b10565b6114975782546001810184556000848152602090200161141e8382612ca1565b5082546040516001850190611434908590612e56565b90815260200160405180910390208190555082600101826040516114589190612e56565b90815260405190819003602001812054907f11497a834951095469930ec62e1641f0dcf3617d9cd7579b6da76e54df3000a790600090a2506001610559565b506000610559565b600082600101826040516114b39190612e56565b908152602001604051809103902054905092915050565b60006114d5600b5490565b90506114e18682611b3d565b600081815260116020908152604080832088905560128252808320879055601390915290208390556115138183611c7c565b505050505050565b6115258282610fb0565b600082815260016020526040902061078e9082611034565b6115478282611d00565b600082815260016020526040902061078e9082611d65565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261078e908490611d7a565b6000610d368383611e4c565b816001600160a01b0316836001600160a01b03160361161e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610659565b6001600160a01b03838116600081815260076020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b606082611699600184612dbb565b815481106116a9576116a9612c2c565b9060005260206000200180546116be90612b65565b80601f01602080910402602001604051908101604052809291908181526020018280546116ea90612b65565b80156117375780601f1061170c57610100808354040283529160200191611737565b820191906000526020600020905b81548152906001019060200180831161171a57829003601f168201915b5050505050905092915050565b61174f8484846111e3565b61175b84848484611e76565b610f445760405162461bcd60e51b815260040161065990612e72565b60606117828261106e565b6117e85760405162461bcd60e51b815260206004820152603160248201527f45524337323155524953746f726167653a2055524920717565727920666f72206044820152703737b732bc34b9ba32b73a103a37b5b2b760791b6064820152608401610659565b6000828152600860205260408120805461180190612b65565b80601f016020809104026020016040519081016040528092919081815260200182805461182d90612b65565b801561187a5780601f1061184f5761010080835404028352916020019161187a565b820191906000526020600020905b81548152906001019060200180831161185d57829003601f168201915b50505050509050600061188b611f77565b9050805160000361189d575092915050565b8151156118cf5780826040516020016118b7929190612ec4565b60405160208183030381529060405292505050919050565b6111db84611f86565b6000610559825490565b600081815260018301602052604081205461149757508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610559565b60006001600160e01b031982166380ac58cd60e01b148061195a57506001600160e01b03198216635b5e139f60e01b145b80610559575061055982612050565b61078e838383612075565b60606000611983836002612ef3565b61198e906002612dce565b67ffffffffffffffff8111156119a6576119a661278a565b6040519080825280601f01601f1916602001820160405280156119d0576020820181803683370190505b509050600360fc1b816000815181106119eb576119eb612c2c565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611a1a57611a1a612c2c565b60200101906001600160f81b031916908160001a9053506000611a3e846002612ef3565b611a49906001612dce565b90505b6001811115611ac1576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611a7d57611a7d612c2c565b1a60f81b828281518110611a9357611a93612c2c565b60200101906001600160f81b031916908160001a90535060049490941c93611aba81612f0a565b9050611a4c565b508315610d365760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610659565b60008260010182604051611b249190612e56565b9081526040519081900360200190205415159392505050565b6001600160a01b038216611b935760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610659565b611b9c8161106e565b15611be95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610659565b611bf560008383611969565b6001600160a01b0382166000908152600560205260408120805460019290611c1e908490612dce565b909155505060008181526004602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611c858261106e565b611ce85760405162461bcd60e51b815260206004820152602e60248201527f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b6064820152608401610659565b600082815260086020526040902061078e8282612ca1565b611d0a8282610d3d565b156109ac576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610d36836001600160a01b03841661212d565b6000611dcf826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166122209092919063ffffffff16565b80519091501561078e5780806020019051810190611ded9190612f21565b61078e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610659565b6000826000018281548110611e6357611e63612c2c565b9060005260206000200154905092915050565b60006001600160a01b0384163b15611f6c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611eba903390899088908890600401612f3e565b6020604051808303816000875af1925050508015611ef5575060408051601f3d908101601f19168201909252611ef291810190612f7b565b60015b611f52573d808015611f23576040519150601f19603f3d011682016040523d82523d6000602084013e611f28565b606091505b508051600003611f4a5760405162461bcd60e51b815260040161065990612e72565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506111db565b506001949350505050565b6060600e805461056e90612b65565b6060611f918261106e565b611ff55760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610659565b6000611fff611f77565b9050600081511161201f5760405180602001604052806000815250610d36565b806120298461222f565b60405160200161203a929190612ec4565b6040516020818303038152906040529392505050565b60006001600160e01b03198216635a05180f60e01b1480610559575061055982612330565b6001600160a01b0383166120d0576120cb81600b80546000838152600c60205260408120829055600182018355919091527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90155565b6120f3565b816001600160a01b0316836001600160a01b0316146120f3576120f38382612365565b6001600160a01b03821661210a5761078e81612402565b826001600160a01b0316826001600160a01b03161461078e5761078e82826124b1565b60008181526001830160205260408120548015612216576000612151600183612dbb565b855490915060009061216590600190612dbb565b90508181146121ca57600086600001828154811061218557612185612c2c565b90600052602060002001549050808760000184815481106121a8576121a8612c2c565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806121db576121db612f98565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610559565b6000915050610559565b60606111db84846000856124f5565b6060816000036122565750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612280578061226a81612da2565b91506122799050600a83612fc4565b915061225a565b60008167ffffffffffffffff81111561229b5761229b61278a565b6040519080825280601f01601f1916602001820160405280156122c5576020820181803683370190505b5090505b84156111db576122da600183612dbb565b91506122e7600a86612fd8565b6122f2906030612dce565b60f81b81838151811061230757612307612c2c565b60200101906001600160f81b031916908160001a905350612329600a86612fc4565b94506122c9565b60006001600160e01b03198216637965db0b60e01b148061055957506301ffc9a760e01b6001600160e01b0319831614610559565b6000600161237284610c97565b61237c9190612dbb565b6000838152600a60205260409020549091508082146123cf576001600160a01b03841660009081526009602090815260408083208584528252808320548484528184208190558352600a90915290208190555b506000918252600a602090815260408084208490556001600160a01b039094168352600981528383209183525290812055565b600b5460009061241490600190612dbb565b6000838152600c6020526040812054600b805493945090928490811061243c5761243c612c2c565b9060005260206000200154905080600b838154811061245d5761245d612c2c565b6000918252602080832090910192909255828152600c9091526040808220849055858252812055600b80548061249557612495612f98565b6001900381819060005260206000200160009055905550505050565b60006124bc83610c97565b6001600160a01b0390931660009081526009602090815260408083208684528252808320859055938252600a9052919091209190915550565b6060824710156125565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610659565b843b6125a45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610659565b600080866001600160a01b031685876040516125c09190612e56565b60006040518083038185875af1925050503d80600081146125fd576040519150601f19603f3d011682016040523d82523d6000602084013e612602565b606091505b509150915061261282828661261d565b979650505050505050565b6060831561262c575081610d36565b82511561263c5782518084602001fd5b8160405162461bcd60e51b815260040161065991906126dc565b6001600160e01b03198116811461266c57600080fd5b50565b60006020828403121561268157600080fd5b8135610d3681612656565b60005b838110156126a757818101518382015260200161268f565b50506000910152565b600081518084526126c881602086016020860161268c565b601f01601f19169290920160200192915050565b602081526000610d3660208301846126b0565b60006020828403121561270157600080fd5b5035919050565b80356001600160a01b038116811461271f57600080fd5b919050565b6000806040838503121561273757600080fd5b61274083612708565b946020939093013593505050565b60008060006060848603121561276357600080fd5b61276c84612708565b925061277a60208501612708565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156127bb576127bb61278a565b604051601f8501601f19908116603f011681019082821181831017156127e3576127e361278a565b816040528093508581528686860111156127fc57600080fd5b858560208301376000602087830101525050509392505050565b600082601f83011261282757600080fd5b610d36838335602085016127a0565b600080600080600060a0868803121561284e57600080fd5b61285786612708565b9450602086013567ffffffffffffffff8082111561287457600080fd5b61288089838a01612816565b9550604088013591508082111561289657600080fd5b506128a388828901612816565b9598949750949560608101359550608001359392505050565b600080604083850312156128cf57600080fd5b823591506128df60208401612708565b90509250929050565b6000602082840312156128fa57600080fd5b610d3682612708565b6000806040838503121561291657600080fd5b50508035926020909101359150565b60006020828403121561293757600080fd5b813567ffffffffffffffff81111561294e57600080fd5b6111db84828501612816565b60008083601f84011261296c57600080fd5b50813567ffffffffffffffff81111561298457600080fd5b60208301915083602082850101111561299c57600080fd5b9250929050565b60008060008060008060008060a0898b0312156129bf57600080fd5b883567ffffffffffffffff808211156129d757600080fd5b818b0191508b601f8301126129eb57600080fd5b8135818111156129fa57600080fd5b8c60208260051b8501011115612a0f57600080fd5b60209283019a509850908a01359080821115612a2a57600080fd5b612a368c838d0161295a565b909850965060408b0135915080821115612a4f57600080fd5b50612a5c8b828c0161295a565b999c989b509699959896976060870135966080013595509350505050565b801515811461266c57600080fd5b60008060408385031215612a9b57600080fd5b612aa483612708565b91506020830135612ab481612a7a565b809150509250929050565b60008060008060808587031215612ad557600080fd5b612ade85612708565b9350612aec60208601612708565b925060408501359150606085013567ffffffffffffffff811115612b0f57600080fd5b8501601f81018713612b2057600080fd5b612b2f878235602084016127a0565b91505092959194509250565b60008060408385031215612b4e57600080fd5b612b5783612708565b91506128df60208401612708565b600181811c90821680612b7957607f821691505b602082108103612b9957634e487b7160e01b600052602260045260246000fd5b50919050565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008351612c0281846020880161268c565b602f60f81b9083019081528351612c2081600184016020880161268c565b01600101949350505050565b634e487b7160e01b600052603260045260246000fd5b600060208284031215612c5457600080fd5b5051919050565b601f82111561078e57600081815260208120601f850160051c81016020861015612c825750805b601f850160051c820191505b8181101561151357828155600101612c8e565b815167ffffffffffffffff811115612cbb57612cbb61278a565b612ccf81612cc98454612b65565b84612c5b565b602080601f831160018114612d045760008415612cec5750858301515b600019600386901b1c1916600185901b178555611513565b600085815260208120601f198616915b82811015612d3357888601518255948401946001909101908401612d14565b5085821015612d515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b838582376000848201602f60f81b815283856001830137600093016001019283525090949350505050565b634e487b7160e01b600052601160045260246000fd5b600060018201612db457612db4612d8c565b5060010190565b8181038181111561055957610559612d8c565b8082018082111561055957610559612d8c565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351612e1981601785016020880161268c565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351612e4a81602884016020880161268c565b01602801949350505050565b60008251612e6881846020870161268c565b9190910192915050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60008351612ed681846020880161268c565b835190830190612eea81836020880161268c565b01949350505050565b808202811582820484141761055957610559612d8c565b600081612f1957612f19612d8c565b506000190190565b600060208284031215612f3357600080fd5b8151610d3681612a7a565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612f71908301846126b0565b9695505050505050565b600060208284031215612f8d57600080fd5b8151610d3681612656565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600082612fd357612fd3612fae565b500490565b600082612fe757612fe7612fae565b50069056fea2646970667358221220f2717adbd64abe46524d4f94e21f9b879c51ef6d028bda6e6d011fef8cb4dbdd64736f6c63430008110033"
            .parse()
            .expect("invalid bytecode")
    });
    pub struct HoprBoost<M>(::ethers::contract::Contract<M>);
    impl<M> Clone for HoprBoost<M> {
        fn clone(&self) -> Self {
            HoprBoost(self.0.clone())
        }
    }
    impl<M> std::ops::Deref for HoprBoost<M> {
        type Target = ::ethers::contract::Contract<M>;
        fn deref(&self) -> &Self::Target {
            &self.0
        }
    }
    impl<M> std::fmt::Debug for HoprBoost<M> {
        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
            f.debug_tuple(stringify!(HoprBoost)).field(&self.address()).finish()
        }
    }
    impl<M: ::ethers::providers::Middleware> HoprBoost<M> {
        /// Creates a new contract instance with the specified `ethers`
        /// client at the given `Address`. The contract derefs to a `ethers::Contract`
        /// object
        pub fn new<T: Into<::ethers::core::types::Address>>(
            address: T,
            client: ::std::sync::Arc<M>,
        ) -> Self {
            Self(
                ::ethers::contract::Contract::new(
                    address.into(),
                    HOPRBOOST_ABI.clone(),
                    client,
                ),
            )
        }
        /// Constructs the general purpose `Deployer` instance based on the provided constructor arguments and sends it.
        /// Returns a new instance of a deployer that returns an instance of this contract after sending the transaction
        ///
        /// Notes:
        /// 1. If there are no constructor arguments, you should pass `()` as the argument.
        /// 1. The default poll duration is 7 seconds.
        /// 1. The default number of confirmations is 1 block.
        ///
        ///
        /// # Example
        ///
        /// Generate contract bindings with `abigen!` and deploy a new contract instance.
        ///
        /// *Note*: this requires a `bytecode` and `abi` object in the `greeter.json` artifact.
        ///
        /// ```ignore
        /// # async fn deploy<M: ethers::providers::Middleware>(client: ::std::sync::Arc<M>) {
        ///     abigen!(Greeter,"../greeter.json");
        ///
        ///    let greeter_contract = Greeter::deploy(client, "Hello world!".to_string()).unwrap().send().await.unwrap();
        ///    let msg = greeter_contract.greet().call().await.unwrap();
        /// # }
        /// ```
        pub fn deploy<T: ::ethers::core::abi::Tokenize>(
            client: ::std::sync::Arc<M>,
            constructor_args: T,
        ) -> ::std::result::Result<
            ::ethers::contract::builders::ContractDeployer<M, Self>,
            ::ethers::contract::ContractError<M>,
        > {
            let factory = ::ethers::contract::ContractFactory::new(
                HOPRBOOST_ABI.clone(),
                HOPRBOOST_BYTECODE.clone().into(),
                client,
            );
            let deployer = factory.deploy(constructor_args)?;
            let deployer = ::ethers::contract::ContractDeployer::new(deployer);
            Ok(deployer)
        }
        ///Calls the contract's `DEFAULT_ADMIN_ROLE` (0xa217fddf) function
        pub fn default_admin_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([162, 23, 253, 223], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `MINTER_ROLE` (0xd5391393) function
        pub fn minter_role(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([213, 57, 19, 147], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `approve` (0x095ea7b3) function
        pub fn approve(
            &self,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([9, 94, 167, 179], (to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `balanceOf` (0x70a08231) function
        pub fn balance_of(
            &self,
            owner: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([112, 160, 130, 49], owner)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `batchMint` (0x9365c533) function
        pub fn batch_mint(
            &self,
            to: ::std::vec::Vec<::ethers::core::types::Address>,
            boost_type: String,
            boost_rank: String,
            boost_numerator: ::ethers::core::types::U256,
            redeem_deadline: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [147, 101, 197, 51],
                    (to, boost_type, boost_rank, boost_numerator, redeem_deadline),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `boostOf` (0x896cddf4) function
        pub fn boost_of(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            (::ethers::core::types::U256, ::ethers::core::types::U256),
        > {
            self.0
                .method_hash([137, 108, 221, 244], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getApproved` (0x081812fc) function
        pub fn get_approved(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([8, 24, 18, 252], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleAdmin` (0x248a9ca3) function
        pub fn get_role_admin(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, [u8; 32]> {
            self.0
                .method_hash([36, 138, 156, 163], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMember` (0x9010d07c) function
        pub fn get_role_member(
            &self,
            role: [u8; 32],
            index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([144, 16, 208, 124], (role, index))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `getRoleMemberCount` (0xca15c873) function
        pub fn get_role_member_count(
            &self,
            role: [u8; 32],
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([202, 21, 200, 115], role)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `grantRole` (0x2f2ff15d) function
        pub fn grant_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([47, 47, 241, 93], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `hasRole` (0x91d14854) function
        pub fn has_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([145, 209, 72, 84], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `isApprovedForAll` (0xe985e9c5) function
        pub fn is_approved_for_all(
            &self,
            owner: ::ethers::core::types::Address,
            operator: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([233, 133, 233, 197], (owner, operator))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `mint` (0x29867dac) function
        pub fn mint(
            &self,
            to: ::ethers::core::types::Address,
            boost_type: String,
            boost_rank: String,
            boost_numerator: ::ethers::core::types::U256,
            redeem_deadline: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash(
                    [41, 134, 125, 172],
                    (to, boost_type, boost_rank, boost_numerator, redeem_deadline),
                )
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `name` (0x06fdde03) function
        pub fn name(&self) -> ::ethers::contract::builders::ContractCall<M, String> {
            self.0
                .method_hash([6, 253, 222, 3], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `ownerOf` (0x6352211e) function
        pub fn owner_of(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<
            M,
            ::ethers::core::types::Address,
        > {
            self.0
                .method_hash([99, 82, 33, 30], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `reclaimErc20Tokens` (0x6067bc15) function
        pub fn reclaim_erc_20_tokens(
            &self,
            token_address: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([96, 103, 188, 21], token_address)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `reclaimErc721Tokens` (0x48c64e41) function
        pub fn reclaim_erc_721_tokens(
            &self,
            token_address: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([72, 198, 78, 65], (token_address, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `renounceRole` (0x36568abe) function
        pub fn renounce_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([54, 86, 138, 190], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `revokeRole` (0xd547741f) function
        pub fn revoke_role(
            &self,
            role: [u8; 32],
            account: ::ethers::core::types::Address,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([213, 71, 116, 31], (role, account))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `safeTransferFrom` (0x42842e0e) function
        pub fn safe_transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([66, 132, 46, 14], (from, to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `safeTransferFrom` (0xb88d4fde) function
        pub fn safe_transfer_from_with_from_and_to_and_data(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
            data: ::ethers::core::types::Bytes,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([184, 141, 79, 222], (from, to, token_id, data))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `setApprovalForAll` (0xa22cb465) function
        pub fn set_approval_for_all(
            &self,
            operator: ::ethers::core::types::Address,
            approved: bool,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([162, 44, 180, 101], (operator, approved))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `supportsInterface` (0x01ffc9a7) function
        pub fn supports_interface(
            &self,
            interface_id: [u8; 4],
        ) -> ::ethers::contract::builders::ContractCall<M, bool> {
            self.0
                .method_hash([1, 255, 201, 167], interface_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `symbol` (0x95d89b41) function
        pub fn symbol(&self) -> ::ethers::contract::builders::ContractCall<M, String> {
            self.0
                .method_hash([149, 216, 155, 65], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `tokenByIndex` (0x4f6ccce7) function
        pub fn token_by_index(
            &self,
            index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([79, 108, 204, 231], index)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `tokenOfOwnerByIndex` (0x2f745c59) function
        pub fn token_of_owner_by_index(
            &self,
            owner: ::ethers::core::types::Address,
            index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([47, 116, 92, 89], (owner, index))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `tokenURI` (0xc87b56dd) function
        pub fn token_uri(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, String> {
            self.0
                .method_hash([200, 123, 86, 221], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `totalSupply` (0x18160ddd) function
        pub fn total_supply(
            &self,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([24, 22, 13, 221], ())
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `transferFrom` (0x23b872dd) function
        pub fn transfer_from(
            &self,
            from: ::ethers::core::types::Address,
            to: ::ethers::core::types::Address,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([35, 184, 114, 221], (from, to, token_id))
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `typeAt` (0xb5185a88) function
        pub fn type_at(
            &self,
            type_index: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, String> {
            self.0
                .method_hash([181, 24, 90, 136], type_index)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `typeIndexOf` (0x562317c5) function
        pub fn type_index_of(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, ::ethers::core::types::U256> {
            self.0
                .method_hash([86, 35, 23, 197], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `typeOf` (0xc588ff8b) function
        pub fn type_of(
            &self,
            token_id: ::ethers::core::types::U256,
        ) -> ::ethers::contract::builders::ContractCall<M, String> {
            self.0
                .method_hash([197, 136, 255, 139], token_id)
                .expect("method not found (this should never happen)")
        }
        ///Calls the contract's `updateBaseURI` (0x931688cb) function
        pub fn update_base_uri(
            &self,
            base_token_uri: String,
        ) -> ::ethers::contract::builders::ContractCall<M, ()> {
            self.0
                .method_hash([147, 22, 136, 203], base_token_uri)
                .expect("method not found (this should never happen)")
        }
        ///Gets the contract's `Approval` event
        pub fn approval_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, ApprovalFilter> {
            self.0.event()
        }
        ///Gets the contract's `ApprovalForAll` event
        pub fn approval_for_all_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, ApprovalForAllFilter> {
            self.0.event()
        }
        ///Gets the contract's `BoostMinted` event
        pub fn boost_minted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, BoostMintedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleAdminChanged` event
        pub fn role_admin_changed_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, RoleAdminChangedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleGranted` event
        pub fn role_granted_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, RoleGrantedFilter> {
            self.0.event()
        }
        ///Gets the contract's `RoleRevoked` event
        pub fn role_revoked_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, RoleRevokedFilter> {
            self.0.event()
        }
        ///Gets the contract's `Transfer` event
        pub fn transfer_filter(
            &self,
        ) -> ::ethers::contract::builders::Event<M, TransferFilter> {
            self.0.event()
        }
        /// Returns an [`Event`](#ethers_contract::builders::Event) builder for all events of this contract
        pub fn events(&self) -> ::ethers::contract::builders::Event<M, HoprBoostEvents> {
            self.0.event_with_filter(Default::default())
        }
    }
    impl<M: ::ethers::providers::Middleware> From<::ethers::contract::Contract<M>>
    for HoprBoost<M> {
        fn from(contract: ::ethers::contract::Contract<M>) -> Self {
            Self::new(contract.address(), contract.client())
        }
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "Approval", abi = "Approval(address,address,uint256)")]
    pub struct ApprovalFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub approved: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub token_id: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "ApprovalForAll", abi = "ApprovalForAll(address,address,bool)")]
    pub struct ApprovalForAllFilter {
        #[ethevent(indexed)]
        pub owner: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub operator: ::ethers::core::types::Address,
        pub approved: bool,
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "BoostMinted", abi = "BoostMinted(uint256,uint256,uint256)")]
    pub struct BoostMintedFilter {
        #[ethevent(indexed)]
        pub boost_type_index: ::ethers::core::types::U256,
        #[ethevent(indexed)]
        pub boost_numerator: ::ethers::core::types::U256,
        #[ethevent(indexed)]
        pub redeem_deadline: ::ethers::core::types::U256,
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(
        name = "RoleAdminChanged",
        abi = "RoleAdminChanged(bytes32,bytes32,bytes32)"
    )]
    pub struct RoleAdminChangedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub previous_admin_role: [u8; 32],
        #[ethevent(indexed)]
        pub new_admin_role: [u8; 32],
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "RoleGranted", abi = "RoleGranted(bytes32,address,address)")]
    pub struct RoleGrantedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "RoleRevoked", abi = "RoleRevoked(bytes32,address,address)")]
    pub struct RoleRevokedFilter {
        #[ethevent(indexed)]
        pub role: [u8; 32],
        #[ethevent(indexed)]
        pub account: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub sender: ::ethers::core::types::Address,
    }
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthEvent,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethevent(name = "Transfer", abi = "Transfer(address,address,uint256)")]
    pub struct TransferFilter {
        #[ethevent(indexed)]
        pub from: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub to: ::ethers::core::types::Address,
        #[ethevent(indexed)]
        pub token_id: ::ethers::core::types::U256,
    }
    #[derive(Debug, Clone, PartialEq, Eq, ::ethers::contract::EthAbiType)]
    pub enum HoprBoostEvents {
        ApprovalFilter(ApprovalFilter),
        ApprovalForAllFilter(ApprovalForAllFilter),
        BoostMintedFilter(BoostMintedFilter),
        RoleAdminChangedFilter(RoleAdminChangedFilter),
        RoleGrantedFilter(RoleGrantedFilter),
        RoleRevokedFilter(RoleRevokedFilter),
        TransferFilter(TransferFilter),
    }
    impl ::ethers::contract::EthLogDecode for HoprBoostEvents {
        fn decode_log(
            log: &::ethers::core::abi::RawLog,
        ) -> ::std::result::Result<Self, ::ethers::core::abi::Error>
        where
            Self: Sized,
        {
            if let Ok(decoded) = ApprovalFilter::decode_log(log) {
                return Ok(HoprBoostEvents::ApprovalFilter(decoded));
            }
            if let Ok(decoded) = ApprovalForAllFilter::decode_log(log) {
                return Ok(HoprBoostEvents::ApprovalForAllFilter(decoded));
            }
            if let Ok(decoded) = BoostMintedFilter::decode_log(log) {
                return Ok(HoprBoostEvents::BoostMintedFilter(decoded));
            }
            if let Ok(decoded) = RoleAdminChangedFilter::decode_log(log) {
                return Ok(HoprBoostEvents::RoleAdminChangedFilter(decoded));
            }
            if let Ok(decoded) = RoleGrantedFilter::decode_log(log) {
                return Ok(HoprBoostEvents::RoleGrantedFilter(decoded));
            }
            if let Ok(decoded) = RoleRevokedFilter::decode_log(log) {
                return Ok(HoprBoostEvents::RoleRevokedFilter(decoded));
            }
            if let Ok(decoded) = TransferFilter::decode_log(log) {
                return Ok(HoprBoostEvents::TransferFilter(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData)
        }
    }
    impl ::std::fmt::Display for HoprBoostEvents {
        fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
            match self {
                HoprBoostEvents::ApprovalFilter(element) => element.fmt(f),
                HoprBoostEvents::ApprovalForAllFilter(element) => element.fmt(f),
                HoprBoostEvents::BoostMintedFilter(element) => element.fmt(f),
                HoprBoostEvents::RoleAdminChangedFilter(element) => element.fmt(f),
                HoprBoostEvents::RoleGrantedFilter(element) => element.fmt(f),
                HoprBoostEvents::RoleRevokedFilter(element) => element.fmt(f),
                HoprBoostEvents::TransferFilter(element) => element.fmt(f),
            }
        }
    }
    ///Container type for all input parameters for the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "DEFAULT_ADMIN_ROLE", abi = "DEFAULT_ADMIN_ROLE()")]
    pub struct DefaultAdminRoleCall;
    ///Container type for all input parameters for the `MINTER_ROLE` function with signature `MINTER_ROLE()` and selector `0xd5391393`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "MINTER_ROLE", abi = "MINTER_ROLE()")]
    pub struct MinterRoleCall;
    ///Container type for all input parameters for the `approve` function with signature `approve(address,uint256)` and selector `0x095ea7b3`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "approve", abi = "approve(address,uint256)")]
    pub struct ApproveCall {
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "balanceOf", abi = "balanceOf(address)")]
    pub struct BalanceOfCall {
        pub owner: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `batchMint` function with signature `batchMint(address[],string,string,uint256,uint256)` and selector `0x9365c533`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(
        name = "batchMint",
        abi = "batchMint(address[],string,string,uint256,uint256)"
    )]
    pub struct BatchMintCall {
        pub to: ::std::vec::Vec<::ethers::core::types::Address>,
        pub boost_type: String,
        pub boost_rank: String,
        pub boost_numerator: ::ethers::core::types::U256,
        pub redeem_deadline: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `boostOf` function with signature `boostOf(uint256)` and selector `0x896cddf4`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "boostOf", abi = "boostOf(uint256)")]
    pub struct BoostOfCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getApproved` function with signature `getApproved(uint256)` and selector `0x081812fc`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "getApproved", abi = "getApproved(uint256)")]
    pub struct GetApprovedCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "getRoleAdmin", abi = "getRoleAdmin(bytes32)")]
    pub struct GetRoleAdminCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "getRoleMember", abi = "getRoleMember(bytes32,uint256)")]
    pub struct GetRoleMemberCall {
        pub role: [u8; 32],
        pub index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "getRoleMemberCount", abi = "getRoleMemberCount(bytes32)")]
    pub struct GetRoleMemberCountCall {
        pub role: [u8; 32],
    }
    ///Container type for all input parameters for the `grantRole` function with signature `grantRole(bytes32,address)` and selector `0x2f2ff15d`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "grantRole", abi = "grantRole(bytes32,address)")]
    pub struct GrantRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "hasRole", abi = "hasRole(bytes32,address)")]
    pub struct HasRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `isApprovedForAll` function with signature `isApprovedForAll(address,address)` and selector `0xe985e9c5`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "isApprovedForAll", abi = "isApprovedForAll(address,address)")]
    pub struct IsApprovedForAllCall {
        pub owner: ::ethers::core::types::Address,
        pub operator: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `mint` function with signature `mint(address,string,string,uint256,uint256)` and selector `0x29867dac`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "mint", abi = "mint(address,string,string,uint256,uint256)")]
    pub struct MintCall {
        pub to: ::ethers::core::types::Address,
        pub boost_type: String,
        pub boost_rank: String,
        pub boost_numerator: ::ethers::core::types::U256,
        pub redeem_deadline: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "name", abi = "name()")]
    pub struct NameCall;
    ///Container type for all input parameters for the `ownerOf` function with signature `ownerOf(uint256)` and selector `0x6352211e`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "ownerOf", abi = "ownerOf(uint256)")]
    pub struct OwnerOfCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `reclaimErc20Tokens` function with signature `reclaimErc20Tokens(address)` and selector `0x6067bc15`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "reclaimErc20Tokens", abi = "reclaimErc20Tokens(address)")]
    pub struct ReclaimErc20TokensCall {
        pub token_address: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `reclaimErc721Tokens` function with signature `reclaimErc721Tokens(address,uint256)` and selector `0x48c64e41`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(
        name = "reclaimErc721Tokens",
        abi = "reclaimErc721Tokens(address,uint256)"
    )]
    pub struct ReclaimErc721TokensCall {
        pub token_address: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `renounceRole` function with signature `renounceRole(bytes32,address)` and selector `0x36568abe`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "renounceRole", abi = "renounceRole(bytes32,address)")]
    pub struct RenounceRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `revokeRole` function with signature `revokeRole(bytes32,address)` and selector `0xd547741f`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "revokeRole", abi = "revokeRole(bytes32,address)")]
    pub struct RevokeRoleCall {
        pub role: [u8; 32],
        pub account: ::ethers::core::types::Address,
    }
    ///Container type for all input parameters for the `safeTransferFrom` function with signature `safeTransferFrom(address,address,uint256)` and selector `0x42842e0e`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(
        name = "safeTransferFrom",
        abi = "safeTransferFrom(address,address,uint256)"
    )]
    pub struct SafeTransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `safeTransferFrom` function with signature `safeTransferFrom(address,address,uint256,bytes)` and selector `0xb88d4fde`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(
        name = "safeTransferFrom",
        abi = "safeTransferFrom(address,address,uint256,bytes)"
    )]
    pub struct SafeTransferFromWithFromAndToAndDataCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
        pub data: ::ethers::core::types::Bytes,
    }
    ///Container type for all input parameters for the `setApprovalForAll` function with signature `setApprovalForAll(address,bool)` and selector `0xa22cb465`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "setApprovalForAll", abi = "setApprovalForAll(address,bool)")]
    pub struct SetApprovalForAllCall {
        pub operator: ::ethers::core::types::Address,
        pub approved: bool,
    }
    ///Container type for all input parameters for the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "supportsInterface", abi = "supportsInterface(bytes4)")]
    pub struct SupportsInterfaceCall {
        pub interface_id: [u8; 4],
    }
    ///Container type for all input parameters for the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "symbol", abi = "symbol()")]
    pub struct SymbolCall;
    ///Container type for all input parameters for the `tokenByIndex` function with signature `tokenByIndex(uint256)` and selector `0x4f6ccce7`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "tokenByIndex", abi = "tokenByIndex(uint256)")]
    pub struct TokenByIndexCall {
        pub index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `tokenOfOwnerByIndex` function with signature `tokenOfOwnerByIndex(address,uint256)` and selector `0x2f745c59`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(
        name = "tokenOfOwnerByIndex",
        abi = "tokenOfOwnerByIndex(address,uint256)"
    )]
    pub struct TokenOfOwnerByIndexCall {
        pub owner: ::ethers::core::types::Address,
        pub index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `tokenURI` function with signature `tokenURI(uint256)` and selector `0xc87b56dd`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "tokenURI", abi = "tokenURI(uint256)")]
    pub struct TokenURICall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "totalSupply", abi = "totalSupply()")]
    pub struct TotalSupplyCall;
    ///Container type for all input parameters for the `transferFrom` function with signature `transferFrom(address,address,uint256)` and selector `0x23b872dd`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "transferFrom", abi = "transferFrom(address,address,uint256)")]
    pub struct TransferFromCall {
        pub from: ::ethers::core::types::Address,
        pub to: ::ethers::core::types::Address,
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `typeAt` function with signature `typeAt(uint256)` and selector `0xb5185a88`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "typeAt", abi = "typeAt(uint256)")]
    pub struct TypeAtCall {
        pub type_index: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `typeIndexOf` function with signature `typeIndexOf(uint256)` and selector `0x562317c5`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "typeIndexOf", abi = "typeIndexOf(uint256)")]
    pub struct TypeIndexOfCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `typeOf` function with signature `typeOf(uint256)` and selector `0xc588ff8b`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "typeOf", abi = "typeOf(uint256)")]
    pub struct TypeOfCall {
        pub token_id: ::ethers::core::types::U256,
    }
    ///Container type for all input parameters for the `updateBaseURI` function with signature `updateBaseURI(string)` and selector `0x931688cb`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthCall,
        ::ethers::contract::EthDisplay,
    )]
    #[derive(Default)]
    #[ethcall(name = "updateBaseURI", abi = "updateBaseURI(string)")]
    pub struct UpdateBaseURICall {
        pub base_token_uri: String,
    }
    #[derive(Debug, Clone, PartialEq, Eq, ::ethers::contract::EthAbiType)]
    pub enum HoprBoostCalls {
        DefaultAdminRole(DefaultAdminRoleCall),
        MinterRole(MinterRoleCall),
        Approve(ApproveCall),
        BalanceOf(BalanceOfCall),
        BatchMint(BatchMintCall),
        BoostOf(BoostOfCall),
        GetApproved(GetApprovedCall),
        GetRoleAdmin(GetRoleAdminCall),
        GetRoleMember(GetRoleMemberCall),
        GetRoleMemberCount(GetRoleMemberCountCall),
        GrantRole(GrantRoleCall),
        HasRole(HasRoleCall),
        IsApprovedForAll(IsApprovedForAllCall),
        Mint(MintCall),
        Name(NameCall),
        OwnerOf(OwnerOfCall),
        ReclaimErc20Tokens(ReclaimErc20TokensCall),
        ReclaimErc721Tokens(ReclaimErc721TokensCall),
        RenounceRole(RenounceRoleCall),
        RevokeRole(RevokeRoleCall),
        SafeTransferFrom(SafeTransferFromCall),
        SafeTransferFromWithFromAndToAndData(SafeTransferFromWithFromAndToAndDataCall),
        SetApprovalForAll(SetApprovalForAllCall),
        SupportsInterface(SupportsInterfaceCall),
        Symbol(SymbolCall),
        TokenByIndex(TokenByIndexCall),
        TokenOfOwnerByIndex(TokenOfOwnerByIndexCall),
        TokenURI(TokenURICall),
        TotalSupply(TotalSupplyCall),
        TransferFrom(TransferFromCall),
        TypeAt(TypeAtCall),
        TypeIndexOf(TypeIndexOfCall),
        TypeOf(TypeOfCall),
        UpdateBaseURI(UpdateBaseURICall),
    }
    impl ::ethers::core::abi::AbiDecode for HoprBoostCalls {
        fn decode(
            data: impl AsRef<[u8]>,
        ) -> ::std::result::Result<Self, ::ethers::core::abi::AbiError> {
            if let Ok(decoded)
                = <DefaultAdminRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::DefaultAdminRole(decoded));
            }
            if let Ok(decoded)
                = <MinterRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::MinterRole(decoded));
            }
            if let Ok(decoded)
                = <ApproveCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::Approve(decoded));
            }
            if let Ok(decoded)
                = <BalanceOfCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::BalanceOf(decoded));
            }
            if let Ok(decoded)
                = <BatchMintCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::BatchMint(decoded));
            }
            if let Ok(decoded)
                = <BoostOfCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::BoostOf(decoded));
            }
            if let Ok(decoded)
                = <GetApprovedCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::GetApproved(decoded));
            }
            if let Ok(decoded)
                = <GetRoleAdminCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::GetRoleAdmin(decoded));
            }
            if let Ok(decoded)
                = <GetRoleMemberCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::GetRoleMember(decoded));
            }
            if let Ok(decoded)
                = <GetRoleMemberCountCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::GetRoleMemberCount(decoded));
            }
            if let Ok(decoded)
                = <GrantRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::GrantRole(decoded));
            }
            if let Ok(decoded)
                = <HasRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::HasRole(decoded));
            }
            if let Ok(decoded)
                = <IsApprovedForAllCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::IsApprovedForAll(decoded));
            }
            if let Ok(decoded)
                = <MintCall as ::ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(HoprBoostCalls::Mint(decoded));
            }
            if let Ok(decoded)
                = <NameCall as ::ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(HoprBoostCalls::Name(decoded));
            }
            if let Ok(decoded)
                = <OwnerOfCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::OwnerOf(decoded));
            }
            if let Ok(decoded)
                = <ReclaimErc20TokensCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::ReclaimErc20Tokens(decoded));
            }
            if let Ok(decoded)
                = <ReclaimErc721TokensCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::ReclaimErc721Tokens(decoded));
            }
            if let Ok(decoded)
                = <RenounceRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::RenounceRole(decoded));
            }
            if let Ok(decoded)
                = <RevokeRoleCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::RevokeRole(decoded));
            }
            if let Ok(decoded)
                = <SafeTransferFromCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::SafeTransferFrom(decoded));
            }
            if let Ok(decoded)
                = <SafeTransferFromWithFromAndToAndDataCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::SafeTransferFromWithFromAndToAndData(decoded));
            }
            if let Ok(decoded)
                = <SetApprovalForAllCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::SetApprovalForAll(decoded));
            }
            if let Ok(decoded)
                = <SupportsInterfaceCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::SupportsInterface(decoded));
            }
            if let Ok(decoded)
                = <SymbolCall as ::ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(HoprBoostCalls::Symbol(decoded));
            }
            if let Ok(decoded)
                = <TokenByIndexCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TokenByIndex(decoded));
            }
            if let Ok(decoded)
                = <TokenOfOwnerByIndexCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TokenOfOwnerByIndex(decoded));
            }
            if let Ok(decoded)
                = <TokenURICall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TokenURI(decoded));
            }
            if let Ok(decoded)
                = <TotalSupplyCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TotalSupply(decoded));
            }
            if let Ok(decoded)
                = <TransferFromCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TransferFrom(decoded));
            }
            if let Ok(decoded)
                = <TypeAtCall as ::ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(HoprBoostCalls::TypeAt(decoded));
            }
            if let Ok(decoded)
                = <TypeIndexOfCall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::TypeIndexOf(decoded));
            }
            if let Ok(decoded)
                = <TypeOfCall as ::ethers::core::abi::AbiDecode>::decode(data.as_ref()) {
                return Ok(HoprBoostCalls::TypeOf(decoded));
            }
            if let Ok(decoded)
                = <UpdateBaseURICall as ::ethers::core::abi::AbiDecode>::decode(
                    data.as_ref(),
                ) {
                return Ok(HoprBoostCalls::UpdateBaseURI(decoded));
            }
            Err(::ethers::core::abi::Error::InvalidData.into())
        }
    }
    impl ::ethers::core::abi::AbiEncode for HoprBoostCalls {
        fn encode(self) -> Vec<u8> {
            match self {
                HoprBoostCalls::DefaultAdminRole(element) => element.encode(),
                HoprBoostCalls::MinterRole(element) => element.encode(),
                HoprBoostCalls::Approve(element) => element.encode(),
                HoprBoostCalls::BalanceOf(element) => element.encode(),
                HoprBoostCalls::BatchMint(element) => element.encode(),
                HoprBoostCalls::BoostOf(element) => element.encode(),
                HoprBoostCalls::GetApproved(element) => element.encode(),
                HoprBoostCalls::GetRoleAdmin(element) => element.encode(),
                HoprBoostCalls::GetRoleMember(element) => element.encode(),
                HoprBoostCalls::GetRoleMemberCount(element) => element.encode(),
                HoprBoostCalls::GrantRole(element) => element.encode(),
                HoprBoostCalls::HasRole(element) => element.encode(),
                HoprBoostCalls::IsApprovedForAll(element) => element.encode(),
                HoprBoostCalls::Mint(element) => element.encode(),
                HoprBoostCalls::Name(element) => element.encode(),
                HoprBoostCalls::OwnerOf(element) => element.encode(),
                HoprBoostCalls::ReclaimErc20Tokens(element) => element.encode(),
                HoprBoostCalls::ReclaimErc721Tokens(element) => element.encode(),
                HoprBoostCalls::RenounceRole(element) => element.encode(),
                HoprBoostCalls::RevokeRole(element) => element.encode(),
                HoprBoostCalls::SafeTransferFrom(element) => element.encode(),
                HoprBoostCalls::SafeTransferFromWithFromAndToAndData(element) => {
                    element.encode()
                }
                HoprBoostCalls::SetApprovalForAll(element) => element.encode(),
                HoprBoostCalls::SupportsInterface(element) => element.encode(),
                HoprBoostCalls::Symbol(element) => element.encode(),
                HoprBoostCalls::TokenByIndex(element) => element.encode(),
                HoprBoostCalls::TokenOfOwnerByIndex(element) => element.encode(),
                HoprBoostCalls::TokenURI(element) => element.encode(),
                HoprBoostCalls::TotalSupply(element) => element.encode(),
                HoprBoostCalls::TransferFrom(element) => element.encode(),
                HoprBoostCalls::TypeAt(element) => element.encode(),
                HoprBoostCalls::TypeIndexOf(element) => element.encode(),
                HoprBoostCalls::TypeOf(element) => element.encode(),
                HoprBoostCalls::UpdateBaseURI(element) => element.encode(),
            }
        }
    }
    impl ::std::fmt::Display for HoprBoostCalls {
        fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
            match self {
                HoprBoostCalls::DefaultAdminRole(element) => element.fmt(f),
                HoprBoostCalls::MinterRole(element) => element.fmt(f),
                HoprBoostCalls::Approve(element) => element.fmt(f),
                HoprBoostCalls::BalanceOf(element) => element.fmt(f),
                HoprBoostCalls::BatchMint(element) => element.fmt(f),
                HoprBoostCalls::BoostOf(element) => element.fmt(f),
                HoprBoostCalls::GetApproved(element) => element.fmt(f),
                HoprBoostCalls::GetRoleAdmin(element) => element.fmt(f),
                HoprBoostCalls::GetRoleMember(element) => element.fmt(f),
                HoprBoostCalls::GetRoleMemberCount(element) => element.fmt(f),
                HoprBoostCalls::GrantRole(element) => element.fmt(f),
                HoprBoostCalls::HasRole(element) => element.fmt(f),
                HoprBoostCalls::IsApprovedForAll(element) => element.fmt(f),
                HoprBoostCalls::Mint(element) => element.fmt(f),
                HoprBoostCalls::Name(element) => element.fmt(f),
                HoprBoostCalls::OwnerOf(element) => element.fmt(f),
                HoprBoostCalls::ReclaimErc20Tokens(element) => element.fmt(f),
                HoprBoostCalls::ReclaimErc721Tokens(element) => element.fmt(f),
                HoprBoostCalls::RenounceRole(element) => element.fmt(f),
                HoprBoostCalls::RevokeRole(element) => element.fmt(f),
                HoprBoostCalls::SafeTransferFrom(element) => element.fmt(f),
                HoprBoostCalls::SafeTransferFromWithFromAndToAndData(element) => {
                    element.fmt(f)
                }
                HoprBoostCalls::SetApprovalForAll(element) => element.fmt(f),
                HoprBoostCalls::SupportsInterface(element) => element.fmt(f),
                HoprBoostCalls::Symbol(element) => element.fmt(f),
                HoprBoostCalls::TokenByIndex(element) => element.fmt(f),
                HoprBoostCalls::TokenOfOwnerByIndex(element) => element.fmt(f),
                HoprBoostCalls::TokenURI(element) => element.fmt(f),
                HoprBoostCalls::TotalSupply(element) => element.fmt(f),
                HoprBoostCalls::TransferFrom(element) => element.fmt(f),
                HoprBoostCalls::TypeAt(element) => element.fmt(f),
                HoprBoostCalls::TypeIndexOf(element) => element.fmt(f),
                HoprBoostCalls::TypeOf(element) => element.fmt(f),
                HoprBoostCalls::UpdateBaseURI(element) => element.fmt(f),
            }
        }
    }
    impl ::std::convert::From<DefaultAdminRoleCall> for HoprBoostCalls {
        fn from(var: DefaultAdminRoleCall) -> Self {
            HoprBoostCalls::DefaultAdminRole(var)
        }
    }
    impl ::std::convert::From<MinterRoleCall> for HoprBoostCalls {
        fn from(var: MinterRoleCall) -> Self {
            HoprBoostCalls::MinterRole(var)
        }
    }
    impl ::std::convert::From<ApproveCall> for HoprBoostCalls {
        fn from(var: ApproveCall) -> Self {
            HoprBoostCalls::Approve(var)
        }
    }
    impl ::std::convert::From<BalanceOfCall> for HoprBoostCalls {
        fn from(var: BalanceOfCall) -> Self {
            HoprBoostCalls::BalanceOf(var)
        }
    }
    impl ::std::convert::From<BatchMintCall> for HoprBoostCalls {
        fn from(var: BatchMintCall) -> Self {
            HoprBoostCalls::BatchMint(var)
        }
    }
    impl ::std::convert::From<BoostOfCall> for HoprBoostCalls {
        fn from(var: BoostOfCall) -> Self {
            HoprBoostCalls::BoostOf(var)
        }
    }
    impl ::std::convert::From<GetApprovedCall> for HoprBoostCalls {
        fn from(var: GetApprovedCall) -> Self {
            HoprBoostCalls::GetApproved(var)
        }
    }
    impl ::std::convert::From<GetRoleAdminCall> for HoprBoostCalls {
        fn from(var: GetRoleAdminCall) -> Self {
            HoprBoostCalls::GetRoleAdmin(var)
        }
    }
    impl ::std::convert::From<GetRoleMemberCall> for HoprBoostCalls {
        fn from(var: GetRoleMemberCall) -> Self {
            HoprBoostCalls::GetRoleMember(var)
        }
    }
    impl ::std::convert::From<GetRoleMemberCountCall> for HoprBoostCalls {
        fn from(var: GetRoleMemberCountCall) -> Self {
            HoprBoostCalls::GetRoleMemberCount(var)
        }
    }
    impl ::std::convert::From<GrantRoleCall> for HoprBoostCalls {
        fn from(var: GrantRoleCall) -> Self {
            HoprBoostCalls::GrantRole(var)
        }
    }
    impl ::std::convert::From<HasRoleCall> for HoprBoostCalls {
        fn from(var: HasRoleCall) -> Self {
            HoprBoostCalls::HasRole(var)
        }
    }
    impl ::std::convert::From<IsApprovedForAllCall> for HoprBoostCalls {
        fn from(var: IsApprovedForAllCall) -> Self {
            HoprBoostCalls::IsApprovedForAll(var)
        }
    }
    impl ::std::convert::From<MintCall> for HoprBoostCalls {
        fn from(var: MintCall) -> Self {
            HoprBoostCalls::Mint(var)
        }
    }
    impl ::std::convert::From<NameCall> for HoprBoostCalls {
        fn from(var: NameCall) -> Self {
            HoprBoostCalls::Name(var)
        }
    }
    impl ::std::convert::From<OwnerOfCall> for HoprBoostCalls {
        fn from(var: OwnerOfCall) -> Self {
            HoprBoostCalls::OwnerOf(var)
        }
    }
    impl ::std::convert::From<ReclaimErc20TokensCall> for HoprBoostCalls {
        fn from(var: ReclaimErc20TokensCall) -> Self {
            HoprBoostCalls::ReclaimErc20Tokens(var)
        }
    }
    impl ::std::convert::From<ReclaimErc721TokensCall> for HoprBoostCalls {
        fn from(var: ReclaimErc721TokensCall) -> Self {
            HoprBoostCalls::ReclaimErc721Tokens(var)
        }
    }
    impl ::std::convert::From<RenounceRoleCall> for HoprBoostCalls {
        fn from(var: RenounceRoleCall) -> Self {
            HoprBoostCalls::RenounceRole(var)
        }
    }
    impl ::std::convert::From<RevokeRoleCall> for HoprBoostCalls {
        fn from(var: RevokeRoleCall) -> Self {
            HoprBoostCalls::RevokeRole(var)
        }
    }
    impl ::std::convert::From<SafeTransferFromCall> for HoprBoostCalls {
        fn from(var: SafeTransferFromCall) -> Self {
            HoprBoostCalls::SafeTransferFrom(var)
        }
    }
    impl ::std::convert::From<SafeTransferFromWithFromAndToAndDataCall>
    for HoprBoostCalls {
        fn from(var: SafeTransferFromWithFromAndToAndDataCall) -> Self {
            HoprBoostCalls::SafeTransferFromWithFromAndToAndData(var)
        }
    }
    impl ::std::convert::From<SetApprovalForAllCall> for HoprBoostCalls {
        fn from(var: SetApprovalForAllCall) -> Self {
            HoprBoostCalls::SetApprovalForAll(var)
        }
    }
    impl ::std::convert::From<SupportsInterfaceCall> for HoprBoostCalls {
        fn from(var: SupportsInterfaceCall) -> Self {
            HoprBoostCalls::SupportsInterface(var)
        }
    }
    impl ::std::convert::From<SymbolCall> for HoprBoostCalls {
        fn from(var: SymbolCall) -> Self {
            HoprBoostCalls::Symbol(var)
        }
    }
    impl ::std::convert::From<TokenByIndexCall> for HoprBoostCalls {
        fn from(var: TokenByIndexCall) -> Self {
            HoprBoostCalls::TokenByIndex(var)
        }
    }
    impl ::std::convert::From<TokenOfOwnerByIndexCall> for HoprBoostCalls {
        fn from(var: TokenOfOwnerByIndexCall) -> Self {
            HoprBoostCalls::TokenOfOwnerByIndex(var)
        }
    }
    impl ::std::convert::From<TokenURICall> for HoprBoostCalls {
        fn from(var: TokenURICall) -> Self {
            HoprBoostCalls::TokenURI(var)
        }
    }
    impl ::std::convert::From<TotalSupplyCall> for HoprBoostCalls {
        fn from(var: TotalSupplyCall) -> Self {
            HoprBoostCalls::TotalSupply(var)
        }
    }
    impl ::std::convert::From<TransferFromCall> for HoprBoostCalls {
        fn from(var: TransferFromCall) -> Self {
            HoprBoostCalls::TransferFrom(var)
        }
    }
    impl ::std::convert::From<TypeAtCall> for HoprBoostCalls {
        fn from(var: TypeAtCall) -> Self {
            HoprBoostCalls::TypeAt(var)
        }
    }
    impl ::std::convert::From<TypeIndexOfCall> for HoprBoostCalls {
        fn from(var: TypeIndexOfCall) -> Self {
            HoprBoostCalls::TypeIndexOf(var)
        }
    }
    impl ::std::convert::From<TypeOfCall> for HoprBoostCalls {
        fn from(var: TypeOfCall) -> Self {
            HoprBoostCalls::TypeOf(var)
        }
    }
    impl ::std::convert::From<UpdateBaseURICall> for HoprBoostCalls {
        fn from(var: UpdateBaseURICall) -> Self {
            HoprBoostCalls::UpdateBaseURI(var)
        }
    }
    ///Container type for all return fields from the `DEFAULT_ADMIN_ROLE` function with signature `DEFAULT_ADMIN_ROLE()` and selector `0xa217fddf`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct DefaultAdminRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `MINTER_ROLE` function with signature `MINTER_ROLE()` and selector `0xd5391393`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct MinterRoleReturn(pub [u8; 32]);
    ///Container type for all return fields from the `balanceOf` function with signature `balanceOf(address)` and selector `0x70a08231`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct BalanceOfReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `boostOf` function with signature `boostOf(uint256)` and selector `0x896cddf4`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct BoostOfReturn(
        pub ::ethers::core::types::U256,
        pub ::ethers::core::types::U256,
    );
    ///Container type for all return fields from the `getApproved` function with signature `getApproved(uint256)` and selector `0x081812fc`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct GetApprovedReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `getRoleAdmin` function with signature `getRoleAdmin(bytes32)` and selector `0x248a9ca3`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct GetRoleAdminReturn(pub [u8; 32]);
    ///Container type for all return fields from the `getRoleMember` function with signature `getRoleMember(bytes32,uint256)` and selector `0x9010d07c`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct GetRoleMemberReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `getRoleMemberCount` function with signature `getRoleMemberCount(bytes32)` and selector `0xca15c873`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct GetRoleMemberCountReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `hasRole` function with signature `hasRole(bytes32,address)` and selector `0x91d14854`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct HasRoleReturn(pub bool);
    ///Container type for all return fields from the `isApprovedForAll` function with signature `isApprovedForAll(address,address)` and selector `0xe985e9c5`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct IsApprovedForAllReturn(pub bool);
    ///Container type for all return fields from the `name` function with signature `name()` and selector `0x06fdde03`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct NameReturn(pub String);
    ///Container type for all return fields from the `ownerOf` function with signature `ownerOf(uint256)` and selector `0x6352211e`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct OwnerOfReturn(pub ::ethers::core::types::Address);
    ///Container type for all return fields from the `supportsInterface` function with signature `supportsInterface(bytes4)` and selector `0x01ffc9a7`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct SupportsInterfaceReturn(pub bool);
    ///Container type for all return fields from the `symbol` function with signature `symbol()` and selector `0x95d89b41`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct SymbolReturn(pub String);
    ///Container type for all return fields from the `tokenByIndex` function with signature `tokenByIndex(uint256)` and selector `0x4f6ccce7`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TokenByIndexReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `tokenOfOwnerByIndex` function with signature `tokenOfOwnerByIndex(address,uint256)` and selector `0x2f745c59`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TokenOfOwnerByIndexReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `tokenURI` function with signature `tokenURI(uint256)` and selector `0xc87b56dd`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TokenURIReturn(pub String);
    ///Container type for all return fields from the `totalSupply` function with signature `totalSupply()` and selector `0x18160ddd`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TotalSupplyReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `typeAt` function with signature `typeAt(uint256)` and selector `0xb5185a88`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TypeAtReturn(pub String);
    ///Container type for all return fields from the `typeIndexOf` function with signature `typeIndexOf(uint256)` and selector `0x562317c5`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TypeIndexOfReturn(pub ::ethers::core::types::U256);
    ///Container type for all return fields from the `typeOf` function with signature `typeOf(uint256)` and selector `0xc588ff8b`
    #[derive(
        Clone,
        Debug,
        Eq,
        PartialEq,
        ::ethers::contract::EthAbiType,
        ::ethers::contract::EthAbiCodec,
    )]
    #[derive(Default)]
    pub struct TypeOfReturn(pub String);
}
