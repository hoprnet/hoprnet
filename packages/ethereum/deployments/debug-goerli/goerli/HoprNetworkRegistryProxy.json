{
  "address": "0x29f0f5d69Eae4B1A16Ffa82DD3f8EAe965F2Ba6F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "stakeContract",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "minStake",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "NftTypeAndRankAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "NftTypeAndRankRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "SpecialNftTypeAndRankAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "SpecialNftTypeAndRankRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "ThresholdUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "STAKE_CONTRACT",
      "outputs": [
        {
          "internalType": "contract IHoprStake",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "eligibleNftTypeAndRank",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isRequirementFulfilled",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "ownerAddNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftTypes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftRanks",
          "type": "uint256[]"
        }
      ],
      "name": "ownerBatchAddNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftTypes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftRanks",
          "type": "uint256[]"
        }
      ],
      "name": "ownerBatchAddSpecialNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftTypes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftRanks",
          "type": "uint256[]"
        }
      ],
      "name": "ownerBatchRemoveNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "nftTypes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftRanks",
          "type": "uint256[]"
        }
      ],
      "name": "ownerBatchRemoveSpecialNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "name": "ownerRemoveNftTypeAndRank",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newThreshold",
          "type": "uint256"
        }
      ],
      "name": "ownerUpdateThreshold",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "specialNftTypeAndRank",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "nftType",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "nftRank",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stakeThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6b613f864845308663b92078cebfd87d3edfa37f662440be3d905093dd6c3bf8",
  "receipt": {
    "to": null,
    "from": "0xA18732DC751BE0dB04157eb92C92BA9d0fC09FC5",
    "contractAddress": "0x29f0f5d69Eae4B1A16Ffa82DD3f8EAe965F2Ba6F",
    "transactionIndex": 8,
    "gasUsed": "1151291",
    "logsBloom": "0x
    "blockHash": "0x2f49fb9670c8d7b2f8e4821321ea9476f3f008e5c361084bbd311531a482dc77",
    "transactionHash": "0x6b613f864845308663b92078cebfd87d3edfa37f662440be3d905093dd6c3bf8",
    "logs": [
      {
        "transactionIndex": 8,
        "blockNumber": 7147018,
        "transactionHash": "0x6b613f864845308663b92078cebfd87d3edfa37f662440be3d905093dd6c3bf8",
        "address": "0x29f0f5d69Eae4B1A16Ffa82DD3f8EAe965F2Ba6F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a18732dc751be0db04157eb92c92ba9d0fc09fc5"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x2f49fb9670c8d7b2f8e4821321ea9476f3f008e5c361084bbd311531a482dc77"
      },
      {
        "transactionIndex": 8,
        "blockNumber": 7147018,
        "transactionHash": "0x6b613f864845308663b92078cebfd87d3edfa37f662440be3d905093dd6c3bf8",
        "address": "0x29f0f5d69Eae4B1A16Ffa82DD3f8EAe965F2Ba6F",
        "topics": [
          "0xadfa8ecb21b6962ebcd0adbd9ab985b7b4c5b5eb3b0dead683171565c7bfe171",
          "0x0000000000000000000000000000000000000000000000000000000000000000"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0x2f49fb9670c8d7b2f8e4821321ea9476f3f008e5c361084bbd311531a482dc77"
      },
      {
        "transactionIndex": 8,
        "blockNumber": 7147018,
        "transactionHash": "0x6b613f864845308663b92078cebfd87d3edfa37f662440be3d905093dd6c3bf8",
        "address": "0x29f0f5d69Eae4B1A16Ffa82DD3f8EAe965F2Ba6F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x000000000000000000000000a18732dc751be0db04157eb92c92ba9d0fc09fc5",
          "0x000000000000000000000000a18732dc751be0db04157eb92c92ba9d0fc09fc5"
        ],
        "data": "0x",
        "logIndex": 7,
        "blockHash": "0x2f49fb9670c8d7b2f8e4821321ea9476f3f008e5c361084bbd311531a482dc77"
      }
    ],
    "blockNumber": 7147018,
    "cumulativeGasUsed": "2284272",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xbEFEdcB0cAD48f0F9f858CF0A328dD1389e18A84",
    "0xA18732DC751BE0dB04157eb92C92BA9d0fC09FC5",
    0
  ],
  "numDeployments": 2,
  "solcInputHash": "83dbb6a836a0d966dc47cb080ca3de60",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"NftTypeAndRankAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"NftTypeAndRankRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"SpecialNftTypeAndRankAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"SpecialNftTypeAndRankRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"ThresholdUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"STAKE_CONTRACT\",\"outputs\":[{\"internalType\":\"contract IHoprStake\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"eligibleNftTypeAndRank\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isRequirementFulfilled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"ownerAddNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftTypes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftRanks\",\"type\":\"uint256[]\"}],\"name\":\"ownerBatchAddNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftTypes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftRanks\",\"type\":\"uint256[]\"}],\"name\":\"ownerBatchAddSpecialNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftTypes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftRanks\",\"type\":\"uint256[]\"}],\"name\":\"ownerBatchRemoveNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"nftTypes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftRanks\",\"type\":\"uint256[]\"}],\"name\":\"ownerBatchRemoveSpecialNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"name\":\"ownerRemoveNftTypeAndRank\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newThreshold\",\"type\":\"uint256\"}],\"name\":\"ownerUpdateThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"specialNftTypeAndRank\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"nftType\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nftRank\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Proxy for staking (v2/v3) contract, which an \\\"HoprNetworkRegistry requirement\\\" is implemented Only accounts with HoprBoost NFTs that are of the type and rank in the `eligibleNftTypeAndRank` array are considered as eligible, when their stake is also above the `stakeThreshold`\",\"kind\":\"dev\",\"methods\":{\"isRequirementFulfilled(address)\":{\"details\":\"Checks if the provided account has a) special NFTs, e.g. \\\"Dev NFT\\\" b) redeemed any NFT of eligibleNftTypeAndRank and staked HOPR tokens above the `threshold`\",\"params\":{\"account\":\"staker address that has a hopr nodes running\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerAddNftTypeAndRank(uint256,uint256)\":{\"details\":\"Owner adds/updates NFT type and rank to the list of eligibles NFTs.\",\"params\":{\"nftRank\":\"HOPR boost numerator, which is associated to the eligible NFT\",\"nftType\":\"Type index of the eligible HoprBoost NFT\"}},\"ownerBatchAddNftTypeAndRank(uint256[],uint256[])\":{\"details\":\"Owner adds/updates NFT type and rank to the list of eligibles NFTs in batch.\",\"params\":{\"nftRanks\":\"Array of HOPR boost numerator, which is associated to the eligible NFT\",\"nftTypes\":\"Array of type indexes of the eligible HoprBoost NFT\"}},\"ownerBatchAddSpecialNftTypeAndRank(uint256[],uint256[])\":{\"details\":\"Owner adds/updates NFT type and rank to the list of special NFTs in batch.\",\"params\":{\"nftRanks\":\"Array of HOPR boost numerator, which is associated to the special NFT\",\"nftTypes\":\"Array of type indexes of the special HoprBoost NFT\"}},\"ownerBatchRemoveNftTypeAndRank(uint256[],uint256[])\":{\"details\":\"Owner removes from list of eligible NFTs in batch.\",\"params\":{\"nftRanks\":\"Array of  HOPR boost numerator, which is associated to the eligible NFT\",\"nftTypes\":\"Array of type index of the eligible HoprBoost NFT\"}},\"ownerBatchRemoveSpecialNftTypeAndRank(uint256[],uint256[])\":{\"details\":\"Owner removes from list of special NFTs in batch.\",\"params\":{\"nftRanks\":\"Array of  HOPR boost numerator, which is associated to the special NFT\",\"nftTypes\":\"Array of type index of the special HoprBoost NFT\"}},\"ownerRemoveNftTypeAndRank(uint256,uint256)\":{\"details\":\"Owner removes from list of eligible NFTs\",\"params\":{\"nftRank\":\"HOPR boost numerator, which is associated to the eligible NFT\",\"nftType\":\"Type index of the eligible HoprBoost NFT\"}},\"ownerUpdateThreshold(uint256)\":{\"details\":\"Owner updates the minimal staking amount required for users to add themselves onto the HoprNetworkRegistry\",\"params\":{\"newThreshold\":\"Minimum stake of HOPR token\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/proxy/HoprStakingProxyForNetworkRegistry.sol\":\"HoprStakingProxyForNetworkRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IHoprNetworkRegistryRequirement.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\ninterface IHoprNetworkRegistryRequirement {\\n  function isRequirementFulfilled(address account) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x28d5713841152502b5f324014b2e52ad51274792abed1786120bf18152037c2d\",\"license\":\"GPL-3.0\"},\"contracts/proxy/HoprStakingProxyForNetworkRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity ^0.8.0;\\n\\nimport '@openzeppelin/contracts/access/Ownable.sol';\\nimport '../IHoprNetworkRegistryRequirement.sol';\\n\\n/**\\n * @dev Interface for staking contract\\n * source code at https://github.com/hoprnet/hopr-stake/tree/main/contracts\\n * staking v2 is deployed at https://blockscout.com/xdai/mainnet/address/0x2cDD13ddB0346E0F620C8E5826Da5d7230341c6E\\n * staking v3 is deployed at https://blockscout.com/xdai/mainnet/address/0xae933331ef0bE122f9499512d3ed4Fa3896DCf20\\n */\\ncontract IHoprStake {\\n  function stakedHoprTokens(address _account) public view returns (uint256) {}\\n\\n  function isNftTypeAndRankRedeemed3(\\n    uint256 nftTypeIndex,\\n    uint256 boostNumerator,\\n    address hodler\\n  ) external view returns (bool) {}\\n}\\n\\n/**\\n * @dev Proxy for staking (v2/v3) contract, which an \\\"HoprNetworkRegistry requirement\\\" is implemented\\n * Only accounts with HoprBoost NFTs that are of the type and rank in the `eligibleNftTypeAndRank` array\\n * are considered as eligible, when their stake is also above the `stakeThreshold`\\n */\\ncontract HoprStakingProxyForNetworkRegistry is IHoprNetworkRegistryRequirement, Ownable {\\n  struct NftTypeAndRank {\\n    uint256 nftType;\\n    uint256 nftRank;\\n  }\\n\\n  IHoprStake public immutable STAKE_CONTRACT; // contract of HoprStake contract\\n  uint256 public stakeThreshold; // minimum amount HOPR tokens being staked in the staking contract to be considered eligible\\n  NftTypeAndRank[] public eligibleNftTypeAndRank; // list of NFTs whose owner are considered as eligible to the network if the `stakeThreshold` is also met\\n  NftTypeAndRank[] public specialNftTypeAndRank; // list of NFTs whose owner are considered as eligible to the network without meeting the `stakeThreshold`, e.g. \\\"Dev NFT\\\"\\n\\n  event NftTypeAndRankAdded(uint256 indexed nftType, uint256 indexed nftRank); // emit when a new NFT type and rank gets included in the eligibility list\\n  event NftTypeAndRankRemoved(uint256 indexed nftType, uint256 indexed nftRank); // emit when a NFT type and rank gets removed from the eligibility list\\n  event SpecialNftTypeAndRankAdded(uint256 indexed nftType, uint256 indexed nftRank); // emit when a new special type and rank of NFT gets included in the eligibility list\\n  event SpecialNftTypeAndRankRemoved(uint256 indexed nftType, uint256 indexed nftRank); // emit when a special type and rank of NFT gets removed from the eligibility list\\n  event ThresholdUpdated(uint256 indexed threshold); // emit when the staking threshold gets updated.\\n\\n  constructor(\\n    address stakeContract,\\n    address newOwner,\\n    uint256 minStake\\n  ) {\\n    STAKE_CONTRACT = IHoprStake(stakeContract);\\n    stakeThreshold = minStake;\\n    emit ThresholdUpdated(stakeThreshold);\\n    _transferOwnership(newOwner);\\n  }\\n\\n  /**\\n   * @dev Checks if the provided account has\\n   * a) special NFTs, e.g. \\\"Dev NFT\\\"\\n   * b) redeemed any NFT of eligibleNftTypeAndRank and staked HOPR tokens above the `threshold`\\n   * @param account staker address that has a hopr nodes running\\n   */\\n  function isRequirementFulfilled(address account) external view returns (bool) {\\n    // if the account owns a special NFT, requirement is fulfilled\\n    for (uint256 i = 0; i < specialNftTypeAndRank.length; i++) {\\n      NftTypeAndRank memory eligible = specialNftTypeAndRank[i];\\n      if (STAKE_CONTRACT.isNftTypeAndRankRedeemed3(eligible.nftType, eligible.nftRank, account)) {\\n        return true;\\n      }\\n    }\\n\\n    // when no special NFT is present, the account needs to 1) reach the minimum stake, 2) own an eligible NFT\\n    // for self-claiming accounts, check against the current criteria\\n    uint256 amount = STAKE_CONTRACT.stakedHoprTokens(account);\\n    if (amount < stakeThreshold) {\\n      // threshold does not meet\\n      return false;\\n    }\\n    // check on regular eligible NFTs.\\n    for (uint256 i = 0; i < eligibleNftTypeAndRank.length; i++) {\\n      NftTypeAndRank memory eligible = eligibleNftTypeAndRank[i];\\n      if (STAKE_CONTRACT.isNftTypeAndRankRedeemed3(eligible.nftType, eligible.nftRank, account)) {\\n        return true;\\n      }\\n    }\\n\\n    return false;\\n  }\\n\\n  /**\\n   * @dev Owner adds/updates NFT type and rank to the list of special NFTs in batch.\\n   * @param nftTypes Array of type indexes of the special HoprBoost NFT\\n   * @param nftRanks Array of HOPR boost numerator, which is associated to the special NFT\\n   */\\n  function ownerBatchAddSpecialNftTypeAndRank(uint256[] calldata nftTypes, uint256[] calldata nftRanks)\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      nftTypes.length == nftRanks.length,\\n      'HoprStakingProxyForNetworkRegistry: ownerBatchAddSpecialNftTypeAndRank lengths mismatch'\\n    );\\n    for (uint256 index = 0; index < nftTypes.length; index++) {\\n      _addSpecialNftTypeAndRank(nftTypes[index], nftRanks[index]);\\n    }\\n  }\\n\\n  /**\\n   * @dev Owner removes from list of special NFTs in batch.\\n   * @param nftTypes Array of type index of the special HoprBoost NFT\\n   * @param nftRanks Array of  HOPR boost numerator, which is associated to the special NFT\\n   */\\n  function ownerBatchRemoveSpecialNftTypeAndRank(uint256[] calldata nftTypes, uint256[] calldata nftRanks)\\n    external\\n    onlyOwner\\n  {\\n    require(\\n      nftTypes.length == nftRanks.length,\\n      'HoprStakingProxyForNetworkRegistry: ownerBatchRemoveSpecialNftTypeAndRank lengths mismatch'\\n    );\\n    for (uint256 index = 0; index < nftTypes.length; index++) {\\n      _removeSpecialNftTypeAndRank(nftTypes[index], nftRanks[index]);\\n    }\\n  }\\n\\n  /**\\n   * @dev Owner adds/updates NFT type and rank to the list of eligibles NFTs in batch.\\n   * @param nftTypes Array of type indexes of the eligible HoprBoost NFT\\n   * @param nftRanks Array of HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function ownerBatchAddNftTypeAndRank(uint256[] calldata nftTypes, uint256[] calldata nftRanks) external onlyOwner {\\n    require(\\n      nftTypes.length == nftRanks.length,\\n      'HoprStakingProxyForNetworkRegistry: ownerBatchAddNftTypeAndRank lengths mismatch'\\n    );\\n    for (uint256 index = 0; index < nftTypes.length; index++) {\\n      _addNftTypeAndRank(nftTypes[index], nftRanks[index]);\\n    }\\n  }\\n\\n  /**\\n   * @dev Owner removes from list of eligible NFTs in batch.\\n   * @param nftTypes Array of type index of the eligible HoprBoost NFT\\n   * @param nftRanks Array of  HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function ownerBatchRemoveNftTypeAndRank(uint256[] calldata nftTypes, uint256[] calldata nftRanks) external onlyOwner {\\n    require(\\n      nftTypes.length == nftRanks.length,\\n      'HoprStakingProxyForNetworkRegistry: ownerBatchRemoveNftTypeAndRank lengths mismatch'\\n    );\\n    for (uint256 index = 0; index < nftTypes.length; index++) {\\n      _removeNftTypeAndRank(nftTypes[index], nftRanks[index]);\\n    }\\n  }\\n\\n  /**\\n   * @dev Owner adds/updates NFT type and rank to the list of eligibles NFTs.\\n   * @param nftType Type index of the eligible HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function ownerAddNftTypeAndRank(uint256 nftType, uint256 nftRank) external onlyOwner {\\n    _addNftTypeAndRank(nftType, nftRank);\\n  }\\n\\n  /**\\n   * @dev Owner removes from list of eligible NFTs\\n   * @param nftType Type index of the eligible HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function ownerRemoveNftTypeAndRank(uint256 nftType, uint256 nftRank) external onlyOwner {\\n    _removeNftTypeAndRank(nftType, nftRank);\\n  }\\n\\n  /**\\n   * @dev Owner updates the minimal staking amount required for users to add themselves onto the HoprNetworkRegistry\\n   * @param newThreshold Minimum stake of HOPR token\\n   */\\n  function ownerUpdateThreshold(uint256 newThreshold) external onlyOwner {\\n    require(\\n      stakeThreshold != newThreshold,\\n      'HoprStakingProxyForNetworkRegistry: try to update with the same staking threshold'\\n    );\\n    stakeThreshold = newThreshold;\\n    emit ThresholdUpdated(stakeThreshold);\\n  }\\n\\n  /**\\n   * @dev adds NFT type and rank to the list of special NFTs.\\n   * @param nftType Type index of the special HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the special NFT\\n   */\\n  function _addSpecialNftTypeAndRank(uint256 nftType, uint256 nftRank) private {\\n    uint256 i = 0;\\n    for (i; i < specialNftTypeAndRank.length; i++) {\\n      // walk through all the types\\n      if (specialNftTypeAndRank[i].nftType == nftType && specialNftTypeAndRank[i].nftRank == nftRank) {\\n        // already exist;\\n        return;\\n      }\\n    }\\n    specialNftTypeAndRank.push(NftTypeAndRank({nftType: nftType, nftRank: nftRank}));\\n    emit SpecialNftTypeAndRankAdded(nftType, nftRank);\\n    (nftType, nftRank);\\n  }\\n\\n  /**\\n   * @dev Remove from list of special NFTs\\n   * @param nftType Type index of the special HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the special NFT\\n   */\\n  function _removeSpecialNftTypeAndRank(uint256 nftType, uint256 nftRank) private {\\n    // walk through\\n    for (uint256 i = 0; i < specialNftTypeAndRank.length; i++) {\\n      if (specialNftTypeAndRank[i].nftType == nftType && specialNftTypeAndRank[i].nftRank == nftRank) {\\n        // overwrite with the last element in the array\\n        specialNftTypeAndRank[i] = specialNftTypeAndRank[specialNftTypeAndRank.length - 1];\\n        specialNftTypeAndRank.pop();\\n        emit SpecialNftTypeAndRankRemoved(nftType, nftRank);\\n      }\\n    }\\n  }\\n\\n  /**\\n   * @dev adds NFT type and rank to the list of eligibles NFTs.\\n   * @param nftType Type index of the eligible HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function _addNftTypeAndRank(uint256 nftType, uint256 nftRank) private {\\n    uint256 i = 0;\\n    for (i; i < eligibleNftTypeAndRank.length; i++) {\\n      // walk through all the types\\n      if (eligibleNftTypeAndRank[i].nftType == nftType && eligibleNftTypeAndRank[i].nftRank == nftRank) {\\n        // already exist;\\n        return;\\n      }\\n    }\\n    eligibleNftTypeAndRank.push(NftTypeAndRank({nftType: nftType, nftRank: nftRank}));\\n    emit NftTypeAndRankAdded(nftType, nftRank);\\n  }\\n\\n  /**\\n   * @dev Remove from list of eligible NFTs\\n   * @param nftType Type index of the eligible HoprBoost NFT\\n   * @param nftRank HOPR boost numerator, which is associated to the eligible NFT\\n   */\\n  function _removeNftTypeAndRank(uint256 nftType, uint256 nftRank) private {\\n    // walk through\\n    for (uint256 i = 0; i < eligibleNftTypeAndRank.length; i++) {\\n      if (eligibleNftTypeAndRank[i].nftType == nftType && eligibleNftTypeAndRank[i].nftRank == nftRank) {\\n        // overwrite with the last element in the array\\n        eligibleNftTypeAndRank[i] = eligibleNftTypeAndRank[eligibleNftTypeAndRank.length - 1];\\n        eligibleNftTypeAndRank.pop();\\n        emit NftTypeAndRankRemoved(nftType, nftRank);\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0xa7cb4a7cbffffa5d9a66f0070cb380db0105e1fbf6bf9b5a24ba8ee28e996947\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "details": "Proxy for staking (v2/v3) contract, which an \"HoprNetworkRegistry requirement\" is implemented Only accounts with HoprBoost NFTs that are of the type and rank in the `eligibleNftTypeAndRank` array are considered as eligible, when their stake is also above the `stakeThreshold`",
    "kind": "dev",
    "methods": {
      "isRequirementFulfilled(address)": {
        "details": "Checks if the provided account has a) special NFTs, e.g. \"Dev NFT\" b) redeemed any NFT of eligibleNftTypeAndRank and staked HOPR tokens above the `threshold`",
        "params": {
          "account": "staker address that has a hopr nodes running"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerAddNftTypeAndRank(uint256,uint256)": {
        "details": "Owner adds/updates NFT type and rank to the list of eligibles NFTs.",
        "params": {
          "nftRank": "HOPR boost numerator, which is associated to the eligible NFT",
          "nftType": "Type index of the eligible HoprBoost NFT"
        }
      },
      "ownerBatchAddNftTypeAndRank(uint256[],uint256[])": {
        "details": "Owner adds/updates NFT type and rank to the list of eligibles NFTs in batch.",
        "params": {
          "nftRanks": "Array of HOPR boost numerator, which is associated to the eligible NFT",
          "nftTypes": "Array of type indexes of the eligible HoprBoost NFT"
        }
      },
      "ownerBatchAddSpecialNftTypeAndRank(uint256[],uint256[])": {
        "details": "Owner adds/updates NFT type and rank to the list of special NFTs in batch.",
        "params": {
          "nftRanks": "Array of HOPR boost numerator, which is associated to the special NFT",
          "nftTypes": "Array of type indexes of the special HoprBoost NFT"
        }
      },
      "ownerBatchRemoveNftTypeAndRank(uint256[],uint256[])": {
        "details": "Owner removes from list of eligible NFTs in batch.",
        "params": {
          "nftRanks": "Array of  HOPR boost numerator, which is associated to the eligible NFT",
          "nftTypes": "Array of type index of the eligible HoprBoost NFT"
        }
      },
      "ownerBatchRemoveSpecialNftTypeAndRank(uint256[],uint256[])": {
        "details": "Owner removes from list of special NFTs in batch.",
        "params": {
          "nftRanks": "Array of  HOPR boost numerator, which is associated to the special NFT",
          "nftTypes": "Array of type index of the special HoprBoost NFT"
        }
      },
      "ownerRemoveNftTypeAndRank(uint256,uint256)": {
        "details": "Owner removes from list of eligible NFTs",
        "params": {
          "nftRank": "HOPR boost numerator, which is associated to the eligible NFT",
          "nftType": "Type index of the eligible HoprBoost NFT"
        }
      },
      "ownerUpdateThreshold(uint256)": {
        "details": "Owner updates the minimal staking amount required for users to add themselves onto the HoprNetworkRegistry",
        "params": {
          "newThreshold": "Minimum stake of HOPR token"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 539,
        "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 9328,
        "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
        "label": "stakeThreshold",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 9332,
        "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
        "label": "eligibleNftTypeAndRank",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(NftTypeAndRank)9323_storage)dyn_storage"
      },
      {
        "astId": 9336,
        "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
        "label": "specialNftTypeAndRank",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(NftTypeAndRank)9323_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(NftTypeAndRank)9323_storage)dyn_storage": {
        "base": "t_struct(NftTypeAndRank)9323_storage",
        "encoding": "dynamic_array",
        "label": "struct HoprStakingProxyForNetworkRegistry.NftTypeAndRank[]",
        "numberOfBytes": "32"
      },
      "t_struct(NftTypeAndRank)9323_storage": {
        "encoding": "inplace",
        "label": "struct HoprStakingProxyForNetworkRegistry.NftTypeAndRank",
        "members": [
          {
            "astId": 9320,
            "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
            "label": "nftType",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 9322,
            "contract": "contracts/proxy/HoprStakingProxyForNetworkRegistry.sol:HoprStakingProxyForNetworkRegistry",
            "label": "nftRank",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}