# spec: https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.3.md
openapi: 3.0.3
servers:
  - url: /api/v2
info:
  description: |-
    This Rest API enables developers to interact with a hoprd node programatically.
  version: 2.0.0
  title: HOPRd Rest API v2
  contact:
    email: tech@hoprnet.org
  license:
    name: GPL-3.0
    url: 'https://github.com/hoprnet/hoprnet/blob/master/LICENSE'

# paths are defined at compile-time by the OpenAPI middleware
paths: {}

security:
  - keyScheme: ['write']
  - passwordScheme: ['write']

externalDocs:
  description: Find out more about HOPR and HOPRd.
  url: 'http://docs.hoprnet.org'
components:
  schemas:
    RequestStatus:
      type: object
      properties:
        status:
          type: string
          description: Status declaring success/failure of the request.
      example:
        status: success
    Signature:
      type: object
      properties:
        signature:
          type: string
          description: Signature from requested message.
      example:
        signature: '0x304402201065a95fd22fc3e48266c3b270ace032489b0177e07d33c59e0d13dccc89108402205f41fb911bcfe485a8e58162ebce90382dc96ccafff378e5c8960e07efcf9e92'
    Currency:
      type: string
      enum:
        - native
        - hopr
      description: Supported currencies, NATIVE used for the blockchain or HOPR used to fund channels.
      example: 'native'
    NativeAddress:
      type: string
      description: Blockchain-native account address. Can be funded from external wallets (starts with **0x...**). It **can't be used** internally to send / receive messages, open / close payment channels.
      example: '0xEA9eDAE5CfC794B75C45c8fa89b605508A03742a'
    HoprAddress:
      type: string
      description: HOPR account address, also called a PeerId. Used to send / receive messages, open / close payment channels.
      example: '16Uiu2HAmVfV4GKQhdECMqYmUMGLy84RjTJQxTWDcmUX5847roBar'
    NativeBalance:
      type: string
      example: '1000000000000000000'
      description: Amount of NATIVE (ETH) balance in the smallest unit. Used only for gas fees on the blockchain the current release is running on. For example, when you will open or close the payment channel, it will use gas fees to execute this action.
    HoprBalance:
      type: string
      example: '10000000000000000000'
      description: Amount of HOPR tokens in the smallest unit. Used for funding payment channels.
    Channel:
      type: object
      properties:
        type:
          type: string
          example: incoming
          description: Channel can be either incomming or outgoing. Incomming means that other node can send messages using this node as relay. Outgoing means that this node can use other node to send message as realy.
        channelId:
          type: string
          example: 16Uiu2HAmAJStiomwq27Kkvtat8KiEHLBSnAkkKCqZmLYKVLtkiB7
          description: Channel ID that can be used in other calls, not to confuse with transaction hash.
        peerId:
          type: string
          example: '0x04e50b7ddce9770f58cebe51f33b472c92d1c40384759f5a0b1025220bf15ec5'
          description: PeerId of the other node in the channel.
        status:
          type: string
          example: Open
          description: 'Status of the channel can be: WaitingForCommitment, Open, PendingToClose, or Closed.'
        balance:
          type: string
          example: '1'
          description: Amount of Hopr tokens left in the channel that can be used to pay for sending messages.

  securitySchemes:
    keyScheme:
      type: apiKey
      name: x-auth-token
      in: header
      description: A valid API token which had been configured at node startup.
    passwordScheme:
      type: http
      scheme: basic
      description: A valid API token is used as the user which had been configured at node startup. No password is required.
