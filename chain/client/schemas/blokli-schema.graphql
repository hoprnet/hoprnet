"""
Blockchain and HOPR network information
"""
type ChainInfo {
	"Current block number of the blockchain"
	blockNumber: Int!
	"Chain ID of the connected blockchain network"
	chainId: Int!
	"Current HOPR token price in wxHOPR"
	ticketPrice: Float!
	"Current minimum ticket winning probability (decimal value between 0.0 and 1.0)"
	minTicketWinningProbability: Float!
}

enum Token {
	"HOPR token"
	HOPR
	"Native token"
	NATIVE
}

"""
HOPR token balance information for a specific address
"""
type HoprBalance {
	"Address holding the HOPR token balance"
	address: String!
	"HOPR token balance"
	balance: Float!
}

"""
Native token balance information for a specific address
"""
type NativeBalance {
	"Address holding the native token balance"
	address: String!
	"Native token balance"
	balance: Float!
}

"""
Account information containing balances and multiaddresses
"""
type Account {
	"Unique account on-chain address in hexadecimal format"
	chainKey: String!
	"Unique account packet key in peer id format"
	packetKey: String!
	"wxHOPR balance associated with the on-chain address"
	accountHoprBalance: Float!
	"Native balance associated with the on-chain address"
	accountNativeBalance: Float!
	"HOPR Safe contract address to which the account is linked"
	safeAddress: String
	"wxHOPR balance associated with the linked Safe contract address"
	safeHoprBalance: Float
	"Native balance associated with the linked Safe contract address"
	safeNativeBalance: Float
	"List of multiaddresses associated with the packet key"
	multiAddresses: [String!]!
}

"""
Status of a payment channel
"""
enum ChannelStatus {
	"Channel is open and operational"
	OPEN
	"Channel is in the process of closing"
	PENDINGTOCLOSE
	"Channel has been closed"
	CLOSED
}

"""
Payment channel between two nodes
"""
type Channel {
	"Unique identifier for the payment channel in hexadecimal format"
	concreteChannelId: String!
	"On-chain address of the source node in hexadecimal format"
	source: String!
	"On-chain address of the destination node in hexadecimal format"
	destination: String!
	"Total amount of HOPR tokens allocated to the channel"
	balance: Float!
	"Current state of the channel (OPEN, PENDINGTOCLOSE, or CLOSED)"
	status: ChannelStatus!
	"Current epoch of the channel"
	epoch: Int!
	"Latest ticket index used in the channel"
	ticketIndex: Int!
	"Seconds until the channel is closed once closure is initiated"
	closureTime: Int!
}

type QueryRoot {
	"""
	Retrieve all accounts from the database

	Returns a complete list of all accounts. No filtering is available.
	"""
	accounts: [Account!]!
	"""
	Retrieve channels, optionally filtered by source and/or destination

	If neither source nor destination is provided, returns all channels.
	If source is provided, filters channels by source address.
	If destination is provided, filters channels by destination address.
	Both filters can be combined to find specific channels.
	"""
	channels(
		"Filter by source node address (hexadecimal format)"
		source: String,
		"Filter by destination node address (hexadecimal format)"
		destination: String
	): [Channel!]!
	"""
	Retrieve HOPR token balance for a specific address

	Returns None if no balance exists for the address.
	"""
	hoprBalance(
		"On-chain address to query (hexadecimal format)"
		address: String!
	): HoprBalance
	"""
	Retrieve native token balance for a specific address

	Returns None if no balance exists for the address.
	"""
	nativeBalance(
		"On-chain address to query (hexadecimal format)"
		address: String!
	): NativeBalance
	"""
	Health check endpoint

	Returns "ok" to indicate the service is running
	"""
	health: String!
	"""
	API version information

	Returns the current version of the blokli-api package
	"""
	version: String!

	"""
	Retrieve chain information
	"""
	chainInfo: ChainInfo!
}

type SubscriptionRoot {
	"""
	Subscribe to real-time updates of native balances for a specific address

	Provides updates whenever there is a change in the native token balance for the specified account.
	Updates are sent immediately when balance changes occur on-chain.
	"""
	nativeBalanceUpdated(
		"On-chain address to monitor for balance changes (hexadecimal format)"
		address: String!
	): NativeBalance!

	"""
	Subscribe to real-time updates of HOPR balances for a specific address

	Provides updates whenever there is a change in the HOPR token balance for the specified account.
	Updates are sent immediately when balance changes occur on-chain.
	"""
	hoprBalanceUpdated(
		"On-chain address to monitor for balance changes (hexadecimal format)"
		address: String!
	): HoprBalance!

	"""
	Subscribe to real-time updates of payment channels

	Provides updates whenever there is a change in the state of any payment channel,
	including channel opening, balance updates, status changes, and channel closure.
	"""
	channelUpdated: Channel!

	"""
	Subscribe to real-time updates of account information

	Provides updates whenever there is a change in account information, including
	balance changes, Safe address linking, and multiaddress announcements.
	"""
	accountUpdated: Account!
}

schema {
	query: QueryRoot
	subscription: SubscriptionRoot
}
