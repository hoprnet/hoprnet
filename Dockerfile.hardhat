# use slim version of node on Debian bullseye for smaller image sizes during build
FROM node:16-bullseye-slim@sha256:8265ac132f720998222008355e11535caf53d6bccecbb562a055605138975b4e as build

LABEL description="This image launches a hardhat node running a local network with the HOPR contracts deployed and available."

# python is used by some nodejs dependencies as an installation requirement
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
     build-essential \
     ca-certificates \
     git \
     jq \
     libssl-dev \
     openssl \
     pkg-config \
     python3 \
     wget \
  && rm -rf /var/lib/apt/lists/* \
  && apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false

# taken from
# https://github.com/rust-lang/docker-rust/blob/186e4d580b5581861907c015d6b58919c809e375/1.61.0/bullseye/Dockerfile
ENV RUSTUP_HOME=/usr/local/rustup \
    CARGO_HOME=/usr/local/cargo \
    PATH=/usr/local/cargo/bin:$PATH \
    RUST_VERSION=1.61.0 \
    RUSTUP_VERSION=1.24.3

# taken from
# https://github.com/rust-lang/docker-rust/blob/186e4d580b5581861907c015d6b58919c809e375/1.61.0/bullseye/Dockerfile
RUN set -eux; \
    dpkgArch="$(dpkg --print-architecture)"; \
      case "${dpkgArch}" in \
        amd64) rustArch='x86_64-unknown-linux-gnu'; rustupSha256='3dc5ef50861ee18657f9db2eeb7392f9c2a6c95c90ab41e45ab4ca71476b4338' ;; \
        armhf) rustArch='armv7-unknown-linux-gnueabihf'; rustupSha256='67777ac3bc17277102f2ed73fd5f14c51f4ca5963adadf7f174adf4ebc38747b' ;; \
        arm64) rustArch='aarch64-unknown-linux-gnu'; rustupSha256='32a1532f7cef072a667bac53f1a5542c99666c4071af0c9549795bbdb2069ec1' ;; \
        i386) rustArch='i686-unknown-linux-gnu'; rustupSha256='e50d1deb99048bc5782a0200aa33e4eea70747d49dffdc9d06812fd22a372515' ;; \
        *) echo >&2 "unsupported architecture: ${dpkgArch}"; exit 1 ;; \
      esac; \
    url="https://static.rust-lang.org/rustup/archive/${RUSTUP_VERSION}/${rustArch}/rustup-init"; \
    wget "${url}"; \
    echo "${rustupSha256} *rustup-init" | sha256sum -c -; \
    chmod +x rustup-init; \
    ./rustup-init -y --no-modify-path --profile minimal --default-toolchain ${RUST_VERSION} --default-host ${rustArch}; \
    rm rustup-init; \
    chmod -R a+w ${RUSTUP_HOME} ${CARGO_HOME}; \
    rustup --version; \
    cargo --version; \
    rustc --version;

WORKDIR /app

COPY . /app

RUN make -j deps \
 && make -j build \
 && cp tsconfig.json packages/ethereum/tsconfig.base.json \
 && cd packages/ethereum \
 && cat tsconfig.hardhat.json | jq '.extends = "./tsconfig.base.json" | del(.references)' > tsconfig.hardhat.json.new \
 && mv tsconfig.hardhat.json.new tsconfig.hardhat.json

# use alpine version of node for smallest image sizes
FROM node:16-alpine as runtime

RUN mkdir /core

WORKDIR /hardhat

COPY --from=build /app/packages/ethereum .
COPY --from=build /app/packages/core/protocol-config.json /core/

# pre-compile as much as we can to reduce startup time
RUN rm package.json \
 && mv package.hardhat.json package.json \
 && yarn \
 && yarn run compile

COPY --from=build /app/scripts scripts

EXPOSE 8545

ENV NODE_OPTIONS=--max_old_space_size=1024

ENTRYPOINT ["yarn", "run", "network", "--network", "hardhat", "--show-stack-traces"]
