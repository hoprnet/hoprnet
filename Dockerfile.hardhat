# Run HOPRd  within a single container using yarn
FROM hopr-toolchain as build

WORKDIR /app/hoprnet

ADD .yarn .yarn/
ADD packages packages/
COPY package.json .yarnrc.yml yarn.lock tsconfig.json Makefile Makefile.deps Cargo.toml Cargo.lock ./

LABEL description="This image launches a hardhat node running a local network with the HOPR contracts deployed and available."

WORKDIR /app/hoprnet/packages/ethereum

# Turn Ethereum package into hardhat package
RUN mv package.hardhat.json package.json && mv tsconfig.hardhat.json tsconfig.json 

WORKDIR /app/hoprnet

RUN CI=true make deps package=hopr-ethereum

RUN NO_NEXT=true make build package=ethereum

# Remove all unused packages
RUN rm -R packages/avado packages/connect packages/core packages/cover-traffic-daemon packages/core-ethereum packages/hoprd

WORKDIR /app/hoprnet/ethereum/

RUN yarn run network --network hardhat
# # use alpine version of node for smallest image sizes
FROM node:16-alpine as runtime

RUN mkdir /core

WORKDIR /hardhat

COPY --from=build /app/hoprnet/node_modules node_modules/
COPY --from=build /app/hoprnet/packages/ packages/

ADD .yarn .yarn/
COPY .yarnrc.yml yarn.lock .

# pre-compile as much as we can to reduce startup time
RUN rm package.json \
 && mv package.hardhat.json package.json \
 && yarn run compile

COPY --from=build /app/scripts scripts

EXPOSE 8545

ENV NODE_OPTIONS=--max_old_space_size=1024

ENTRYPOINT ["yarn", "run", "network", "--network", "hardhat", "--show-stack-traces"]
