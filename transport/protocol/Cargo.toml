[package]
name = "hopr-transport-protocol"
version = "0.4.0"
authors = ["HOPR Association <tech@hoprnet.org>"]
edition = "2021"
license = "GPL-3.0-only"

[lib]
crate-type = ["rlib"]

[features]
default = []
runtime-async-std = ["hopr-async-runtime/runtime-async-std"]
runtime-tokio = ["hopr-async-runtime/runtime-tokio"]
prometheus = ["dep:hopr-metrics", "core-path/prometheus"]

[dependencies]
async-trait = { workspace = true }
async-lock = { workspace = true }
futures = { workspace = true }
hex-literal = { workspace = true }
lazy_static = { workspace = true }
libp2p = { workspace = true, features = ["noise", "request-response"] }
rust-stream-ext-concurrent = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_with = { workspace = true }
smart-default = { workspace = true }
strum = { workspace = true }
thiserror = { workspace = true }
tracing = { workspace = true }
validator = { workspace = true }

hopr-async-runtime = { workspace = true }
hopr-crypto-random = { workspace = true }
hopr-crypto-types = { workspace = true }
hopr-crypto-packet = { workspace = true }
hopr-db-api = { workspace = true }
hopr-internal-types = { workspace = true }
hopr-metrics = { optional = true, workspace = true }
core-path = { workspace = true }
hopr-platform = { workspace = true }
hopr-primitive-types = { workspace = true }
hopr-transport-identity = { workspace = true }

[dev-dependencies]
anyhow = { workspace = true }
async-std = { workspace = true }
bytesize = { workspace = true }
criterion = { workspace = true, features = ["async_futures", "async_std"] }
hopr-db-sql = { workspace = true, features = ["runtime-async-std"] }
more-asserts = { workspace = true }
parameterized = { workspace = true }
serial_test = { workspace = true }
tracing-test = { workspace = true }
hopr-transport-mixer = { workspace = true }

[[bench]]
name = "protocol_throughput_emulated"
harness = false
