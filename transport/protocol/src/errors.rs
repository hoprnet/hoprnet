use std::fmt::Formatter;
use hopr_internal_types::errors::CoreTypesError;
use hopr_primitive_types::errors::GeneralError;
use thiserror::Error;


/// Errors generated by the crate.
#[derive(Error, Debug)]
pub enum ProtocolError {
    #[error("timeout on protocol operation")]
    Timeout,

    #[error(transparent)]
    Other(Box<dyn std::error::Error + Send + Sync + 'static>),

    #[error("General error {0}")]
    GeneralError(#[from] GeneralError),

    #[error("Core error {0}")]
    CoreError(#[from] CoreTypesError),

    #[error("Failed on a logical error: {0}")]
    Logic(String),
}

/// Result used by the crate, based on the [ProtocolError] error type.
pub type Result<T> = core::result::Result<T, ProtocolError>;
