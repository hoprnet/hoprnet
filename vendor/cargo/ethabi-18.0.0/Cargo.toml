# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "ethabi"
version = "18.0.0"
authors = [
    "Parity Technologies <admin@parity.io>",
    "Artem Vorotnikov <artem@vorotnikov.me>",
    "Nicholas Rodrigues Lordello <nlordell@gmail.com>",
]
description = "Easy to use conversion of ethereum contract calls to bytecode."
homepage = "https://github.com/rust-ethereum/ethabi"
keywords = [
    "ethereum",
    "eth",
    "abi",
    "solidity",
]
license = "Apache-2.0"
resolver = "1"

[dependencies.ethereum-types]
version = "0.14.0"
default-features = false

[dependencies.hex]
version = "0.4"
features = ["alloc"]
default-features = false

[dependencies.once_cell]
version = "1.9.0"
optional = true

[dependencies.regex]
version = "1.5.4"
optional = true

[dependencies.serde]
version = "1.0"
features = ["derive"]
optional = true
default-features = false

[dependencies.serde_json]
version = "1.0"
optional = true

[dependencies.sha3]
version = "0.10"
default-features = false

[dependencies.thiserror]
version = "1"
optional = true

[dependencies.uint]
version = "0.9.0"
optional = true
default-features = false

[dev-dependencies.hex-literal]
version = "0.3"

[dev-dependencies.paste]
version = "1"

[dev-dependencies.serde_json]
version = "1.0"

[features]
default = [
    "std",
    "full-serde",
    "rlp",
]
full-serde = [
    "std",
    "serde",
    "serde_json",
    "regex",
    "once_cell",
]
parity-codec = ["ethereum-types/codec"]
rlp = ["ethereum-types/rlp"]
serde = [
    "dep:serde",
    "ethereum-types/serialize",
    "uint",
]
std = [
    "hex/std",
    "sha3/std",
    "ethereum-types/std",
    "thiserror",
    "uint?/std",
    "serde?/std",
]
