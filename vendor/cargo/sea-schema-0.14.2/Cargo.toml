# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.62"
name = "sea-schema"
version = "0.14.2"
authors = ["Chris Tsang <tyt2y7@gmail.com>"]
description = "ðŸŒ¿ SQL schema definition and discovery"
documentation = "https://docs.rs/sea-schema"
readme = "README.md"
keywords = [
    "database",
    "sql",
    "mysql",
    "postgres",
]
categories = ["database"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/SeaQL/sea-schema"

[package.metadata.docs.rs]
features = ["default"]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "sea_schema"
path = "src/lib.rs"

[dependencies.futures]
version = "0.3"
features = ["alloc"]
optional = true
default-features = false

[dependencies.log]
version = "0.4"
optional = true
default-features = false

[dependencies.sea-query]
version = "0.30.0"
features = ["derive"]
default-features = false

[dependencies.sea-query-binder]
version = "0.5.0"
optional = true
default-features = false

[dependencies.sea-schema-derive]
version = "0.2.0"
default-features = false

[dependencies.serde]
version = "1"
features = ["derive"]
optional = true
default-features = false

[dependencies.sqlx]
version = "0.7"
optional = true
default-features = false

[features]
debug-print = ["log"]
def = []
default = [
    "mysql",
    "postgres",
    "sqlite",
    "discovery",
    "writer",
    "probe",
]
discovery = [
    "futures",
    "parser",
]
mysql = ["sea-query/backend-mysql"]
parser = ["query"]
postgres = ["sea-query/backend-postgres"]
probe = ["query"]
query = ["def"]
runtime-actix-native-tls = [
    "sqlx/runtime-tokio-native-tls",
    "sea-query-binder/runtime-actix-native-tls",
]
runtime-actix-rustls = [
    "sqlx/runtime-tokio-rustls",
    "sea-query-binder/runtime-actix-rustls",
]
runtime-async-std-native-tls = [
    "sqlx/runtime-async-std-native-tls",
    "sea-query-binder/runtime-async-std-native-tls",
]
runtime-async-std-rustls = [
    "sqlx/runtime-async-std-rustls",
    "sea-query-binder/runtime-async-std-rustls",
]
runtime-tokio-native-tls = [
    "sqlx/runtime-tokio-native-tls",
    "sea-query-binder/runtime-tokio-native-tls",
]
runtime-tokio-rustls = [
    "sqlx/runtime-tokio-rustls",
    "sea-query-binder/runtime-tokio-rustls",
]
sqlite = ["sea-query/backend-sqlite"]
sqlx-all = [
    "sqlx-mysql",
    "sqlx-postgres",
    "sqlx-sqlite",
]
sqlx-dep = ["sqlx"]
sqlx-mysql = [
    "mysql",
    "futures",
    "sqlx-dep",
    "sea-query-binder/sqlx-mysql",
    "sqlx/mysql",
]
sqlx-postgres = [
    "postgres",
    "futures",
    "sqlx-dep",
    "sea-query-binder/sqlx-postgres",
    "sqlx/postgres",
]
sqlx-sqlite = [
    "sqlite",
    "futures",
    "sqlx-dep",
    "sea-query-binder/sqlx-sqlite",
    "sqlx/sqlite",
]
with-serde = ["serde"]
writer = ["def"]
