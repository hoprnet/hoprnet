# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60.0"
name = "primitive-types"
version = "0.12.1"
authors = ["Parity Technologies <admin@parity.io>"]
description = "Primitive types shared by Ethereum and Substrate"
homepage = "https://github.com/paritytech/parity-common"
license = "MIT OR Apache-2.0"
resolver = "1"

[[test]]
name = "scale_info"
required-features = ["scale-info"]

[[test]]
name = "fp_conversion"
required-features = ["fp-conversion"]

[[test]]
name = "num_traits"
required-features = ["num-traits"]

[dependencies.fixed-hash]
version = "0.8"
default-features = false

[dependencies.impl-codec]
version = "0.6.0"
optional = true
default-features = false

[dependencies.impl-num-traits]
version = "0.1.0"
optional = true
default-features = false

[dependencies.impl-rlp]
version = "0.3"
optional = true
default-features = false

[dependencies.impl-serde]
version = "0.4.0"
optional = true
default-features = false

[dependencies.scale-info-crate]
version = ">=0.9, <3"
features = ["derive"]
optional = true
default-features = false
package = "scale-info"

[dependencies.uint]
version = "0.9.0"
default-features = false

[features]
arbitrary = [
    "fixed-hash/arbitrary",
    "uint/arbitrary",
]
byteorder = ["fixed-hash/byteorder"]
codec = ["impl-codec"]
default = ["std"]
fp-conversion = ["std"]
num-traits = ["impl-num-traits"]
rlp = ["impl-rlp"]
rustc-hex = ["fixed-hash/rustc-hex"]
scale-info = [
    "codec",
    "scale-info-crate",
]
serde = [
    "std",
    "impl-serde",
    "impl-serde/std",
]
serde_no_std = ["impl-serde"]
std = [
    "uint/std",
    "fixed-hash/std",
    "impl-codec?/std",
]
