# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "sea-query-binder"
version = "0.7.0"
authors = [
    "Valentin Tolmer <valentin@tolmer.fr>",
    "Ivan Krivosheev <py.krivosheev@gmail.com>",
]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Driver library for using SeaQuery with SQLx"
documentation = "https://docs.rs/sea-query"
readme = false
keywords = [
    "database",
    "sql",
    "mysql",
    "postgres",
    "sqlite",
]
categories = ["database"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/SeaQL/sea-query"

[lib]
name = "sea_query_binder"
path = "src/lib.rs"

[dependencies.bigdecimal]
version = "0.4"
optional = true
default-features = false

[dependencies.chrono]
version = "0.4"
features = ["clock"]
optional = true
default-features = false

[dependencies.ipnetwork]
version = "0.20"
optional = true
default-features = false

[dependencies.mac_address]
version = "1.1"
optional = true
default-features = false

[dependencies.pgvector]
version = "~0.4"
optional = true
default-features = false

[dependencies.rust_decimal]
version = "1"
optional = true
default-features = false

[dependencies.sea-query]
version = "0.32.0"
features = ["thread-safe"]
default-features = false

[dependencies.serde_json]
version = "1"
features = ["std"]
optional = true
default-features = false

[dependencies.sqlx]
version = "0.8"
optional = true
default-features = false

[dependencies.time]
version = "0.3.36"
features = [
    "macros",
    "formatting",
]
optional = true
default-features = false

[dependencies.uuid]
version = "1"
optional = true
default-features = false

[features]
postgres-array = ["sea-query/postgres-array"]
postgres-vector = [
    "sea-query/postgres-vector",
    "pgvector/sqlx",
]
runtime-actix = ["sqlx?/runtime-tokio"]
runtime-actix-native-tls = ["sqlx?/runtime-tokio-native-tls"]
runtime-actix-rustls = ["sqlx?/runtime-tokio-rustls"]
runtime-async-std = ["sqlx?/runtime-async-std"]
runtime-async-std-native-tls = ["sqlx?/runtime-async-std-native-tls"]
runtime-async-std-rustls = ["sqlx?/runtime-async-std-rustls"]
runtime-tokio = ["sqlx?/runtime-tokio"]
runtime-tokio-native-tls = ["sqlx?/runtime-tokio-native-tls"]
runtime-tokio-rustls = ["sqlx?/runtime-tokio-rustls"]
sqlx-any = ["sqlx/any"]
sqlx-mysql = ["sqlx/mysql"]
sqlx-postgres = ["sqlx/postgres"]
sqlx-sqlite = ["sqlx/sqlite"]
with-bigdecimal = [
    "sqlx?/bigdecimal",
    "sea-query/with-bigdecimal",
    "bigdecimal",
]
with-chrono = [
    "sqlx?/chrono",
    "sea-query/with-chrono",
    "chrono",
]
with-ipnetwork = [
    "sqlx?/ipnetwork",
    "sea-query/with-ipnetwork",
    "ipnetwork",
]
with-json = [
    "sqlx?/json",
    "sea-query/with-json",
    "serde_json",
]
with-mac_address = [
    "sqlx?/mac_address",
    "sea-query/with-mac_address",
    "mac_address",
]
with-rust_decimal = [
    "sqlx?/rust_decimal",
    "sea-query/with-rust_decimal",
    "rust_decimal",
]
with-time = [
    "sqlx?/time",
    "sea-query/with-time",
    "time",
]
with-uuid = [
    "sqlx?/uuid",
    "sea-query/with-uuid",
    "uuid",
]
