# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.65"
name = "ethers-solc"
version = "2.0.8"
authors = [
    "Matthias Seitz <matthias.seitz@outlook.de>",
    "Georgios Konstantopoulos <me@gakonst.com>",
]
exclude = [
    ".github/",
    "bin/",
    "book/",
    "**/tests/",
    "**/test-data/",
    "**/testdata/",
    "examples",
    "scripts/",
]
description = "Utilites for working with solc"
homepage = "https://github.com/gakonst/ethers-rs"
documentation = "https://docs.rs/ethers"
readme = "README.md"
keywords = [
    "ethers",
    "ethereum",
    "web3",
    "solc",
    "solidity",
]
categories = ["cryptography::cryptocurrencies"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/gakonst/ethers-rs"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[package.metadata.playground]
all-features = true

[[test]]
name = "project"
path = "tests/project.rs"
required-features = [
    "full",
    "project-util",
]

[[test]]
name = "mocked"
path = "tests/mocked.rs"
required-features = [
    "full",
    "project-util",
]

[[bench]]
name = "compile_many"
harness = false

[[bench]]
name = "read_all"
harness = false
required-features = ["project-util"]

[dependencies.cfg-if]
version = "1.0.0"

[dependencies.dunce]
version = "1.0"

[dependencies.ethers-core]
version = "2.0.8"
default-features = false

[dependencies.fs_extra]
version = "1.3.0"
optional = true

[dependencies.futures-util]
version = "0.3.28"
optional = true

[dependencies.glob]
version = "0.3.1"

[dependencies.hex]
version = "0.4"

[dependencies.md-5]
version = "0.10.5"

[dependencies.num_cpus]
version = "1.15.0"

[dependencies.once_cell]
version = "1.17"

[dependencies.path-slash]
version = "0.2.1"

[dependencies.rand]
version = "0.8"
optional = true

[dependencies.rayon]
version = "1.7"

[dependencies.regex]
version = "1.8"

[dependencies.semver]
version = "1.0"
features = ["serde"]

[dependencies.serde]
version = "1.0"
features = [
    "derive",
    "rc",
]

[dependencies.serde_json]
version = "1.0"

[dependencies.sha2]
version = "0.10.6"
optional = true
default-features = false

[dependencies.solang-parser]
version = "=0.3.1"
default-features = false

[dependencies.tempfile]
version = "3.5.0"
optional = true

[dependencies.thiserror]
version = "1.0"

[dependencies.tiny-keccak]
version = "2.0.2"
default-features = false

[dependencies.tracing]
version = "0.1.37"

[dependencies.walkdir]
version = "2.3"

[dependencies.yansi]
version = "0.5.1"

[dev-dependencies.criterion]
version = "0.5"
features = ["async_tokio"]

[dev-dependencies.env_logger]
version = "0.10.0"

[dev-dependencies.pretty_assertions]
version = "1.3.0"

[dev-dependencies.rand]
version = "0.8"

[dev-dependencies.serde_path_to_error]
version = "0.1.11"

[dev-dependencies.tempfile]
version = "3.5"

[dev-dependencies.tokio]
version = "1.28"
features = [
    "rt-multi-thread",
    "macros",
]

[dev-dependencies.tracing-subscriber]
version = "0.3.17"
features = [
    "env-filter",
    "fmt",
]
default-features = false

[features]
asm = []
async = [
    "tokio/process",
    "tokio/io-util",
    "tokio/fs",
    "tokio/time",
    "futures-util",
]
default = ["rustls"]
full = [
    "async",
    "svm-solc",
]
openssl = ["svm?/openssl"]
project-util = [
    "tempfile",
    "fs_extra",
    "rand",
]
rustls = ["svm?/rustls"]
svm-solc = [
    "svm",
    "svm-builds",
    "sha2",
]
tests = []

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.home]
version = "0.5.5"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.svm]
version = "0.2"
features = ["blocking"]
optional = true
default-features = false
package = "svm-rs"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.svm-builds]
version = "0.1"
optional = true
package = "svm-rs-builds"

[target."cfg(not(target_arch = \"wasm32\"))".dependencies.tokio]
version = "1.28"
features = ["rt-multi-thread"]
