# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
name = "async-std"
version = "1.13.0"
authors = [
    "Stjepan Glavina <stjepang@gmail.com>",
    "Yoshua Wuyts <yoshuawuyts@gmail.com>",
    "Friedel Ziegelmayer <me@dignifiedquire.com>",
    "Contributors to async-std",
]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Async version of the Rust standard library"
homepage = "https://async.rs"
readme = "README.md"
keywords = [
    "async",
    "await",
    "future",
    "std",
    "task",
]
categories = [
    "asynchronous",
    "concurrency",
    "network-programming",
]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/async-rs/async-std"

[package.metadata.docs.rs]
features = ["docs"]
rustdoc-args = [
    "--cfg",
    'feature="docs"',
]

[lib]
name = "async_std"
path = "src/lib.rs"

[[example]]
name = "a-chat"
path = "examples/a-chat/main.rs"

[[example]]
name = "hello-world"
path = "examples/hello-world.rs"

[[example]]
name = "line-count"
path = "examples/line-count.rs"

[[example]]
name = "list-dir"
path = "examples/list-dir.rs"

[[example]]
name = "logging"
path = "examples/logging.rs"

[[example]]
name = "print-file"
path = "examples/print-file.rs"

[[example]]
name = "socket-timeouts"
path = "examples/socket-timeouts.rs"

[[example]]
name = "stdin-echo"
path = "examples/stdin-echo.rs"

[[example]]
name = "stdin-timeout"
path = "examples/stdin-timeout.rs"

[[example]]
name = "surf-web"
path = "examples/surf-web.rs"
required-features = ["surf"]

[[example]]
name = "task-local"
path = "examples/task-local.rs"

[[example]]
name = "task-name"
path = "examples/task-name.rs"

[[example]]
name = "tcp-client"
path = "examples/tcp-client.rs"

[[example]]
name = "tcp-echo"
path = "examples/tcp-echo.rs"

[[example]]
name = "tcp-ipv4-and-6-echo"
path = "examples/tcp-ipv4-and-6-echo.rs"
required-features = ["unstable"]

[[example]]
name = "udp-client"
path = "examples/udp-client.rs"

[[example]]
name = "udp-echo"
path = "examples/udp-echo.rs"

[[test]]
name = "addr"
path = "tests/addr.rs"

[[test]]
name = "block_on"
path = "tests/block_on.rs"

[[test]]
name = "buf_writer"
path = "tests/buf_writer.rs"

[[test]]
name = "channel"
path = "tests/channel.rs"

[[test]]
name = "collect"
path = "tests/collect.rs"

[[test]]
name = "condvar"
path = "tests/condvar.rs"

[[test]]
name = "io_copy"
path = "tests/io_copy.rs"

[[test]]
name = "io_timeout"
path = "tests/io_timeout.rs"

[[test]]
name = "mutex"
path = "tests/mutex.rs"

[[test]]
name = "rwlock"
path = "tests/rwlock.rs"

[[test]]
name = "stream"
path = "tests/stream.rs"
required-features = ["unstable"]

[[test]]
name = "task_local"
path = "tests/task_local.rs"

[[test]]
name = "tcp"
path = "tests/tcp.rs"

[[test]]
name = "timeout"
path = "tests/timeout.rs"

[[test]]
name = "udp"
path = "tests/udp.rs"

[[test]]
name = "uds"
path = "tests/uds.rs"

[[test]]
name = "verbose_errors"
path = "tests/verbose_errors.rs"

[[bench]]
name = "mutex"
path = "benches/mutex.rs"

[[bench]]
name = "task"
path = "benches/task.rs"

[[bench]]
name = "task_local"
path = "benches/task_local.rs"

[dependencies.async-attributes]
version = "1.1.2"
optional = true

[dependencies.async-channel]
version = "1.8.0"
optional = true

[dependencies.async-lock]
version = "3.1.0"
optional = true

[dependencies.crossbeam-utils]
version = "0.8.0"
optional = true

[dependencies.futures-core]
version = "0.3.4"
optional = true
default-features = false

[dependencies.futures-io]
version = "0.3.4"
optional = true

[dependencies.kv-log-macro]
version = "1.0.6"
optional = true

[dependencies.log]
version = "0.4.8"
features = ["kv_unstable"]
optional = true

[dependencies.memchr]
version = "2.3.3"
optional = true

[dependencies.once_cell]
version = "1.3.1"
optional = true

[dependencies.pin-project-lite]
version = "0.2.0"
optional = true

[dependencies.pin-utils]
version = "0.1.0-alpha.4"
optional = true

[dependencies.slab]
version = "0.4.2"
optional = true

[dependencies.surf]
version = "2.0.0"
optional = true

[dev-dependencies.femme]
version = "2.1.1"

[dev-dependencies.futures]
version = "0.3.4"

[dev-dependencies.rand]
version = "0.8.0"

[dev-dependencies.rand_xorshift]
version = "0.3.0"

[dev-dependencies.tempfile]
version = "3.1.0"

[features]
alloc = [
    "futures-core/alloc",
    "pin-project-lite",
]
attributes = ["async-attributes"]
default = [
    "std",
    "async-global-executor",
    "async-io",
    "futures-lite",
    "kv-log-macro",
    "log",
    "pin-project-lite",
    "gloo-timers",
]
docs = [
    "attributes",
    "unstable",
    "default",
]
io_safety = []
std = [
    "alloc",
    "crossbeam-utils",
    "futures-core/std",
    "futures-io",
    "memchr",
    "once_cell",
    "pin-utils",
    "slab",
    "wasm-bindgen-futures",
    "futures-channel",
    "async-channel",
    "async-lock",
]
tokio02 = ["async-global-executor/tokio02"]
tokio03 = ["async-global-executor/tokio03"]
tokio1 = ["async-global-executor/tokio"]
unstable = [
    "std",
    "async-io",
    "async-process",
]

[target.'cfg(not(target_os = "unknown"))'.dependencies.async-global-executor]
version = "2.4.0"
features = ["async-io"]
optional = true

[target.'cfg(not(target_os = "unknown"))'.dependencies.async-io]
version = "2.2.0"
optional = true

[target.'cfg(not(target_os = "unknown"))'.dependencies.async-process]
version = "2.0.0"
optional = true

[target.'cfg(not(target_os = "unknown"))'.dependencies.futures-lite]
version = "2.0.0"
optional = true

[target.'cfg(target_arch = "wasm32")'.dependencies.futures-channel]
version = "0.3.4"
optional = true

[target.'cfg(target_arch = "wasm32")'.dependencies.gloo-timers]
version = "0.3.0"
features = ["futures"]
optional = true

[target.'cfg(target_arch = "wasm32")'.dependencies.wasm-bindgen-futures]
version = "0.4.10"
optional = true

[target.'cfg(target_arch = "wasm32")'.dev-dependencies.getrandom]
version = "0.2.0"
features = ["js"]

[target.'cfg(target_arch = "wasm32")'.dev-dependencies.wasm-bindgen-test]
version = "0.3.10"
