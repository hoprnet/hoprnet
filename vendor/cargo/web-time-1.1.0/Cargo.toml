# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.60"
name = "web-time"
version = "1.1.0"
include = [
    "CHANGELOG.md",
    "LICENSE-*",
    "src/**/*",
]
autobenches = false
description = "Drop-in replacement for std::time for Wasm in browsers"
readme = "README.md"
keywords = [
    "instant",
    "wasm",
    "web",
    "systemtime",
    "time",
]
categories = [
    "api-bindings",
    "date-and-time",
    "wasm",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/daxpedda/web-time"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg=docsrs"]
targets = ["wasm32-unknown-unknown"]

[profile.bench]
lto = true
codegen-units = 1

[[example]]
name = "benchmark"
path = "benches/benchmark.rs"

[[test]]
name = "serde"
path = "tests/serde.rs"
required-features = ["serde"]

[dev-dependencies.static_assertions]
version = "1"

[features]
serde = ["dep:serde"]

[target."cfg(all(target_family = \"wasm\", target_feature = \"atomics\"))".dev-dependencies.futures-channel]
version = "0.3"
features = ["alloc"]
default-features = false

[target."cfg(all(target_family = \"wasm\", target_feature = \"atomics\"))".dev-dependencies.futures-util]
version = "0.3"
default-features = false

[target."cfg(all(target_family = \"wasm\", target_feature = \"atomics\"))".dev-dependencies.web-sys]
version = "0.3"
features = ["WorkerGlobalScope"]

[target."cfg(all(target_family = \"wasm\", target_os = \"unknown\"))".dependencies.js-sys]
version = "0.3.20"

[target."cfg(all(target_family = \"wasm\", target_os = \"unknown\"))".dependencies.serde]
version = "1"
optional = true

[target."cfg(all(target_family = \"wasm\", target_os = \"unknown\"))".dependencies.wasm-bindgen]
version = "0.2.70"
default-features = false

[target."cfg(not(target_family = \"wasm\"))".dev-dependencies.pollster]
version = "0.3"
features = ["macro"]

[target."cfg(target_family = \"wasm\")".dev-dependencies.getrandom]
version = "0.2"
features = ["js"]

[target."cfg(target_family = \"wasm\")".dev-dependencies.rand]
version = "0.8"

[target."cfg(target_family = \"wasm\")".dev-dependencies.serde_json]
version = "1"

[target."cfg(target_family = \"wasm\")".dev-dependencies.wasm-bindgen-futures]
version = "0.4"

[target."cfg(target_family = \"wasm\")".dev-dependencies.wasm-bindgen-test]
version = "0.3"

[target."cfg(target_family = \"wasm\")".dev-dependencies.web-sys]
version = "0.3"
features = [
    "CssStyleDeclaration",
    "Document",
    "Element",
    "HtmlTableElement",
    "HtmlTableRowElement",
    "Performance",
    "Window",
]

[lints.clippy]
absolute_paths = "warn"
allow_attributes = "warn"
allow_attributes_without_reason = "warn"
as_conversions = "warn"
assertions_on_result_states = "warn"
clone_on_ref_ptr = "warn"
create_dir = "warn"
dbg_macro = "warn"
decimal_literal_representation = "warn"
default_union_representation = "warn"
empty_drop = "warn"
empty_structs_with_brackets = "warn"
equatable_if_let = "allow"
error_impl_error = "warn"
exit = "warn"
explicit_deref_methods = "allow"
filetype_is_file = "warn"
float_cmp_const = "warn"
fn_to_numeric_cast_any = "warn"
format_push_string = "warn"
future_not_send = "allow"
get_unwrap = "warn"
if_then_some_else_none = "warn"
impl_trait_in_params = "warn"
indexing_slicing = "warn"
infinite_loop = "warn"
large_include_file = "warn"
lossy_float_literal = "warn"
min_ident_chars = "warn"
missing_assert_message = "warn"
missing_asserts_for_indexing = "warn"
missing_docs_in_private_items = "warn"
mixed_read_write_in_expression = "warn"
module_inception = "allow"
module_name_repetitions = "allow"
mutex_atomic = "warn"
non_ascii_literal = "warn"
option_if_let_else = "allow"
partial_pub_fields = "warn"
print_stderr = "warn"
print_stdout = "warn"
pub_without_shorthand = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_pub_crate = "allow"
redundant_type_annotations = "warn"
ref_patterns = "warn"
rest_pat_in_fully_bound_structs = "warn"
same_name_method = "warn"
self_named_module_files = "warn"
semicolon_outside_block = "warn"
single_char_lifetime_names = "warn"
str_to_string = "warn"
string_add = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
suspicious_xor_used_as_pow = "warn"
tabs_in_doc_comments = "allow"
todo = "warn"
try_err = "warn"
undocumented_unsafe_blocks = "warn"
unimplemented = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unneeded_field_pattern = "warn"
unseparated_literal_suffix = "warn"
unwrap_used = "warn"
use_debug = "warn"
verbose_file_reads = "warn"

[lints.clippy.cargo]
level = "warn"
priority = -1

[lints.clippy.nursery]
level = "warn"
priority = -1

[lints.clippy.pedantic]
level = "warn"
priority = -1

[lints.rust]
deprecated_in_future = "warn"
ffi_unwind_calls = "warn"
macro_use_extern_crate = "warn"
meta_variable_misuse = "warn"
missing_abi = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
non_ascii_idents = "warn"
single_use_lifetimes = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unreachable_pub = "warn"
unsafe_code = "deny"
unsafe_op_in_unsafe_fn = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_qualifications = "warn"

[lints.rust.future_incompatible]
level = "warn"
priority = -1

[lints.rust.rust_2018_compatibility]
level = "warn"
priority = -1

[lints.rust.rust_2018_idioms]
level = "warn"
priority = -1

[lints.rust.rust_2021_compatibility]
level = "warn"
priority = -1

[lints.rust.unused]
level = "warn"
priority = -1

[lints.rustdoc.all]
level = "warn"
priority = -1
