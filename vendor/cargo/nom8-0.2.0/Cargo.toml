# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2018"
rust-version = "1.51.0"
name = "nom8"
version = "0.2.0"
include = [
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    ".gitignore",
    "Cargo.toml",
    "src/*.rs",
    "src/*/*.rs",
    "tests/*.rs",
]
autoexamples = false
description = "A byte-oriented, zero-copy, parser combinators library (fork for proposals for v8)"
readme = "README.md"
keywords = [
    "parser",
    "parser-combinators",
    "parsing",
    "streaming",
    "bit",
]
categories = ["parsing"]
license = "MIT"
repository = "https://github.com/epage/nom-experimental"

[package.metadata.docs.rs]
features = ["unstable-doc"]
rustdoc-args = [
    "--cfg",
    "docsrs",
]
cargo-args = [
    "-Zunstable-options",
    "-Zrustdoc-scrape-examples",
]

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = "Unreleased"
replace = "{{version}}"
min = 1

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = '\.\.\.HEAD'
replace = "...{{tag_name}}"
exactly = 1

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = "ReleaseDate"
replace = "{{date}}"
min = 1

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = "<!-- next-header -->"
replace = """
<!-- next-header -->
## [Unreleased] - ReleaseDate
"""
exactly = 1

[[package.metadata.release.pre-release-replacements]]
file = "CHANGELOG.md"
search = "<!-- next-url -->"
replace = """
<!-- next-url -->
[Unreleased]: https://github.com/epage/nom8/compare/{{tag_name}}...HEAD"""
exactly = 1

[profile.bench]
lto = true
codegen-units = 1
debug = true

[[example]]
name = "custom_error"
path = "examples/custom_error.rs"
required-features = ["alloc"]

[[example]]
name = "json"
path = "examples/json.rs"
required-features = ["alloc"]

[[example]]
name = "json_iterator"
path = "examples/json_iterator.rs"
required-features = ["alloc"]

[[example]]
name = "iterator"
path = "examples/iterator.rs"

[[example]]
name = "s_expression"
path = "examples/s_expression.rs"
required-features = ["alloc"]

[[example]]
name = "string"
path = "examples/string.rs"
required-features = ["alloc"]

[[test]]
name = "arithmetic"

[[test]]
name = "arithmetic_ast"
required-features = ["alloc"]

[[test]]
name = "css"

[[test]]
name = "custom_errors"

[[test]]
name = "float"

[[test]]
name = "ini"
required-features = ["alloc"]

[[test]]
name = "ini_str"
required-features = ["alloc"]

[[test]]
name = "issues"
required-features = ["alloc"]

[[test]]
name = "json"

[[test]]
name = "mp4"
required-features = ["alloc"]

[[test]]
name = "multiline"
required-features = ["alloc"]

[[test]]
name = "overflow"

[[test]]
name = "reborrow_fold"

[[test]]
name = "fnmut"
required-features = ["alloc"]

[dependencies.memchr]
version = "2.3"
default-features = false

[dev-dependencies.doc-comment]
version = "0.3"

[dev-dependencies.proptest]
version = "1.0.0"

[features]
alloc = []
default = ["std"]
std = [
    "alloc",
    "memchr/std",
]
unstable-doc = [
    "alloc",
    "std",
]

[badges.coveralls]
branch = "main"
repository = "Geal/nom"
service = "github"

[badges.maintenance]
status = "actively-developed"

[badges.travis-ci]
repository = "Geal/nom"
