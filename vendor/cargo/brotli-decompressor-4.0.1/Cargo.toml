# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
name = "brotli-decompressor"
version = "4.0.1"
authors = [
    "Daniel Reiter Horn <danielrh@dropbox.com>",
    "The Brotli Authors",
]
exclude = ["testdata/*"]
autobins = false
description = "A brotli decompressor that with an interface avoiding the rust stdlib. This makes it suitable for embedded devices and kernels. It is designed with a pluggable allocator so that the standard lib's allocator may be employed. The default build also includes a stdlib allocator and stream interface. Disable this with --features=no-stdlib. Alternatively, --features=unsafe turns off array bounds checks and memory initialization but provides a safe interface for the caller.  Without adding the --features=unsafe argument, all included code is safe. For compression in addition to this library, download https://github.com/dropbox/rust-brotli "
homepage = "https://github.com/dropbox/rust-brotli-decompressor"
documentation = "https://github.com/dropbox/rust-brotli-decompressor/blob/master/README.md"
readme = "README.md"
keywords = [
    "brotli",
    "decompression",
    "lz77",
    "huffman",
    "nostd",
]
license = "BSD-3-Clause/MIT"
repository = "https://github.com/dropbox/rust-brotli-decompressor"

[profile.release]
lto = true
incremental = false

[[bin]]
name = "brotli-decompressor"
doc = false

[dependencies.alloc-no-stdlib]
version = "~2.0"

[dependencies.alloc-stdlib]
version = "~0.2"
optional = true

[features]
benchmark = []
default = ["std"]
disable-timer = []
ffi-api = []
pass-through-ffi-panics = []
seccomp = []
std = ["alloc-stdlib"]
unsafe = [
    "alloc-no-stdlib/unsafe",
    "alloc-stdlib/unsafe",
]
