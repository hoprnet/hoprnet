# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.62"
name = "sea-query"
version = "0.30.7"
authors = [
    "Chris Tsang <chris.2y3@outlook.com>",
    "Billy Chan <ccw.billy.123@gmail.com>",
    "Ivan Krivosheev <py.krivosheev@gmail.com>",
]
description = "ðŸ”± A dynamic query builder for MySQL, Postgres and SQLite"
documentation = "https://docs.rs/sea-query"
readme = "README.md"
keywords = [
    "database",
    "sql",
    "mysql",
    "postgres",
    "sqlite",
]
categories = ["database"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/SeaQL/sea-query"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "sea_query"
path = "src/lib.rs"

[[test]]
name = "test-derive"
path = "tests/derive/mod.rs"
required-features = ["derive"]

[[test]]
name = "test-error"
path = "tests/error/mod.rs"
required-features = ["tests-cfg"]

[[test]]
name = "test-mysql"
path = "tests/mysql/mod.rs"
required-features = [
    "tests-cfg",
    "backend-mysql",
]

[[test]]
name = "test-postgres"
path = "tests/postgres/mod.rs"
required-features = [
    "tests-cfg",
    "backend-postgres",
]

[[test]]
name = "test-sqlite"
path = "tests/sqlite/mod.rs"
required-features = [
    "tests-cfg",
    "backend-sqlite",
]

[[test]]
name = "option-more-parentheses"
path = "tests/more-parentheses.rs"
required-features = [
    "tests-cfg",
    "option-more-parentheses",
    "backend-mysql",
]

[[bench]]
name = "basic"
harness = false

[dependencies.bigdecimal]
version = "0.3"
optional = true
default-features = false

[dependencies.chrono]
version = "0.4.27"
features = ["clock"]
optional = true
default-features = false

[dependencies.derivative]
version = "2.2"
optional = true
default-features = false

[dependencies.inherent]
version = "1.0"

[dependencies.ipnetwork]
version = "0.20"
optional = true
default-features = false

[dependencies.mac_address]
version = "1.1"
optional = true
default-features = false

[dependencies.ordered-float]
version = "3.4"
optional = true
default-features = false

[dependencies.postgres-types]
version = "0"
optional = true
default-features = false

[dependencies.rust_decimal]
version = "1"
optional = true
default-features = false

[dependencies.sea-query-attr]
version = "0.1.1"
optional = true
default-features = false

[dependencies.sea-query-derive]
version = "0.4.0"
optional = true
default-features = false

[dependencies.serde_json]
version = "1"
features = ["std"]
optional = true
default-features = false

[dependencies.time]
version = "0.3"
features = [
    "macros",
    "formatting",
]
optional = true
default-features = false

[dependencies.uuid]
version = "1"
optional = true
default-features = false

[dev-dependencies.criterion]
version = "0.3"

[dev-dependencies.pretty_assertions]
version = "1"

[features]
all-features = [
    "backend-mysql",
    "backend-postgres",
    "backend-sqlite",
    "derive",
    "attr",
    "hashable-value",
    "thread-safe",
    "all-types",
]
all-types = [
    "postgres-array",
    "postgres-interval",
    "with-chrono",
    "with-json",
    "with-rust_decimal",
    "with-bigdecimal",
    "with-uuid",
    "with-time",
    "with-ipnetwork",
    "with-mac_address",
]
attr = ["sea-query-attr"]
backend-mysql = []
backend-postgres = []
backend-sqlite = []
default = [
    "derive",
    "backend-mysql",
    "backend-postgres",
    "backend-sqlite",
]
derive = ["sea-query-derive"]
hashable-value = [
    "derivative",
    "ordered-float",
]
option-more-parentheses = []
option-sqlite-exact-column-type = []
postgres-array = []
postgres-interval = []
tests-cfg = []
thread-safe = []
with-bigdecimal = ["bigdecimal"]
with-chrono = ["chrono"]
with-ipnetwork = ["ipnetwork"]
with-json = ["serde_json"]
with-mac_address = ["mac_address"]
with-rust_decimal = ["rust_decimal"]
with-time = ["time"]
with-uuid = ["uuid"]
