# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.63"
name = "async-io"
version = "2.3.4"
authors = ["Stjepan Glavina <stjepang@gmail.com>"]
build = false
exclude = ["/.*"]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Async I/O and timers"
readme = "README.md"
keywords = [
    "mio",
    "epoll",
    "kqueue",
    "iocp",
]
categories = [
    "asynchronous",
    "network-programming",
    "os",
]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/smol-rs/async-io"

[lib]
name = "async_io"
path = "src/lib.rs"

[[example]]
name = "kqueue-process"
path = "examples/kqueue-process.rs"

[[example]]
name = "linux-inotify"
path = "examples/linux-inotify.rs"

[[example]]
name = "linux-timerfd"
path = "examples/linux-timerfd.rs"

[[example]]
name = "unix-signal"
path = "examples/unix-signal.rs"

[[example]]
name = "windows-command"
path = "examples/windows-command.rs"

[[example]]
name = "windows-uds"
path = "examples/windows-uds.rs"

[[test]]
name = "async"
path = "tests/async.rs"

[[test]]
name = "block_on"
path = "tests/block_on.rs"

[[test]]
name = "issue_182"
path = "tests/issue_182.rs"

[[test]]
name = "timer"
path = "tests/timer.rs"

[[bench]]
name = "io"
path = "benches/io.rs"
harness = false

[[bench]]
name = "timer"
path = "benches/timer.rs"
harness = false

[dependencies.async-lock]
version = "3.0.0"

[dependencies.cfg-if]
version = "1"

[dependencies.concurrent-queue]
version = "2.2.0"

[dependencies.futures-io]
version = "0.3.28"
features = ["std"]
default-features = false

[dependencies.futures-lite]
version = "2.0.0"
default-features = false

[dependencies.parking]
version = "2.0.0"

[dependencies.polling]
version = "3.0.0"

[dependencies.rustix]
version = "0.38.18"
features = [
    "fs",
    "net",
    "std",
]
default-features = false

[dependencies.slab]
version = "0.4.2"

[dependencies.tracing]
version = "0.1.37"
default-features = false

[dev-dependencies.async-channel]
version = "2.0.0"

[dev-dependencies.async-net]
version = "2.0.0"

[dev-dependencies.blocking]
version = "1"

[dev-dependencies.criterion]
version = "0.4"
features = ["cargo_bench_support"]
default-features = false

[dev-dependencies.getrandom]
version = "0.2.7"

[dev-dependencies.signal-hook]
version = "0.3"

[dev-dependencies.tempfile]
version = "3"

[target.'cfg(target_os = "linux")'.dev-dependencies.inotify]
version = "0.10.1"
default-features = false

[target.'cfg(target_os = "linux")'.dev-dependencies.timerfd]
version = "1"

[target."cfg(windows)".dependencies.windows-sys]
version = "0.59.0"
features = ["Win32_Foundation"]

[target."cfg(windows)".dev-dependencies.uds_windows]
version = "1"

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = ["cfg(polling_test_poll_backend)"]
