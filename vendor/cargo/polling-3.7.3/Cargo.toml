# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
rust-version = "1.63"
name = "polling"
version = "3.7.3"
authors = [
    "Stjepan Glavina <stjepang@gmail.com>",
    "John Nunley <dev@notgull.net>",
]
build = false
exclude = ["/.*"]
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Portable interface to epoll, kqueue, event ports, and IOCP"
readme = "README.md"
keywords = [
    "mio",
    "epoll",
    "kqueue",
    "iocp",
]
categories = [
    "asynchronous",
    "network-programming",
    "os",
]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/smol-rs/polling"

[package.metadata.docs.rs]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "polling"
path = "src/lib.rs"

[[example]]
name = "tcp_client"
path = "examples/tcp_client.rs"

[[example]]
name = "two-listeners"
path = "examples/two-listeners.rs"

[[example]]
name = "wait-signal"
path = "examples/wait-signal.rs"

[[test]]
name = "concurrent_modification"
path = "tests/concurrent_modification.rs"

[[test]]
name = "io"
path = "tests/io.rs"

[[test]]
name = "many_connections"
path = "tests/many_connections.rs"

[[test]]
name = "multiple_pollers"
path = "tests/multiple_pollers.rs"

[[test]]
name = "notify"
path = "tests/notify.rs"

[[test]]
name = "other_modes"
path = "tests/other_modes.rs"

[[test]]
name = "precision"
path = "tests/precision.rs"

[[test]]
name = "timeout"
path = "tests/timeout.rs"

[[test]]
name = "windows_post"
path = "tests/windows_post.rs"

[[test]]
name = "windows_waitable"
path = "tests/windows_waitable.rs"

[dependencies.cfg-if]
version = "1"

[dependencies.tracing]
version = "0.1.37"
default-features = false

[dev-dependencies.easy-parallel]
version = "3.1.0"

[dev-dependencies.fastrand]
version = "2.0.0"

[dev-dependencies.socket2]
version = "0.5.5"

[target.'cfg(all(unix, not(target_os="vita")))'.dev-dependencies.signal-hook]
version = "0.3.17"

[target.'cfg(any(unix, target_os = "fuchsia", target_os = "vxworks"))'.dependencies.rustix]
version = "0.38.31"
features = [
    "event",
    "fs",
    "pipe",
    "process",
    "std",
    "time",
]
default-features = false

[target.'cfg(target_os = "hermit")'.dependencies.hermit-abi]
version = "0.4.0"

[target."cfg(unix)".dev-dependencies.libc]
version = "0.2"

[target."cfg(windows)".dependencies.concurrent-queue]
version = "2.2.0"

[target."cfg(windows)".dependencies.pin-project-lite]
version = "0.2.9"

[target."cfg(windows)".dependencies.windows-sys]
version = "0.59"
features = [
    "Wdk_Foundation",
    "Wdk_Storage_FileSystem",
    "Win32_Foundation",
    "Win32_Networking_WinSock",
    "Win32_Security",
    "Win32_Storage_FileSystem",
    "Win32_System_IO",
    "Win32_System_LibraryLoader",
    "Win32_System_Threading",
    "Win32_System_WindowsProgramming",
]

[lints.rust.unexpected_cfgs]
level = "warn"
priority = 0
check-cfg = [
    "cfg(polling_test_poll_backend)",
    "cfg(polling_test_epoll_pipe)",
]
