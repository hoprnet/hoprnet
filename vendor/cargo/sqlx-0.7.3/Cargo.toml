# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "sqlx"
version = "0.7.3"
authors = [
    "Ryan Leckey <leckey.ryan@gmail.com>",
    "Austin Bonander <austin.bonander@gmail.com>",
    "Chloe Ross <orangesnowfox@gmail.com>",
    "Daniel Akhterov <akhterovd@gmail.com>",
]
description = "ðŸ§° The Rust SQL Toolkit. An async, pure Rust SQL crate featuring compile-time checked queries without a DSL. Supports PostgreSQL, MySQL, and SQLite."
documentation = "https://docs.rs/sqlx"
readme = "README.md"
license = "MIT OR Apache-2.0"
repository = "https://github.com/launchbadge/sqlx"

[package.metadata.docs.rs]
features = [
    "all-databases",
    "_unstable-all-types",
]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[[test]]
name = "any"
path = "tests/any/any.rs"
required-features = ["any"]

[[test]]
name = "any-pool"
path = "tests/any/pool.rs"
required-features = ["any"]

[[test]]
name = "migrate-macro"
path = "tests/migrate/macro.rs"
required-features = [
    "macros",
    "migrate",
]

[[test]]
name = "sqlite"
path = "tests/sqlite/sqlite.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-any"
path = "tests/sqlite/any.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-types"
path = "tests/sqlite/types.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-describe"
path = "tests/sqlite/describe.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-macros"
path = "tests/sqlite/macros.rs"
required-features = [
    "sqlite",
    "macros",
]

[[test]]
name = "sqlite-derives"
path = "tests/sqlite/derives.rs"
required-features = [
    "sqlite",
    "macros",
]

[[test]]
name = "sqlite-error"
path = "tests/sqlite/error.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-sqlcipher"
path = "tests/sqlite/sqlcipher.rs"
required-features = ["sqlite"]

[[test]]
name = "sqlite-test-attr"
path = "tests/sqlite/test-attr.rs"
required-features = [
    "sqlite",
    "macros",
    "migrate",
]

[[test]]
name = "sqlite-migrate"
path = "tests/sqlite/migrate.rs"
required-features = [
    "sqlite",
    "macros",
    "migrate",
]

[[test]]
name = "mysql"
path = "tests/mysql/mysql.rs"
required-features = ["mysql"]

[[test]]
name = "mysql-types"
path = "tests/mysql/types.rs"
required-features = ["mysql"]

[[test]]
name = "mysql-describe"
path = "tests/mysql/describe.rs"
required-features = ["mysql"]

[[test]]
name = "mysql-macros"
path = "tests/mysql/macros.rs"
required-features = [
    "mysql",
    "macros",
]

[[test]]
name = "mysql-error"
path = "tests/mysql/error.rs"
required-features = ["mysql"]

[[test]]
name = "mysql-test-attr"
path = "tests/mysql/test-attr.rs"
required-features = [
    "mysql",
    "macros",
    "migrate",
]

[[test]]
name = "mysql-migrate"
path = "tests/mysql/migrate.rs"
required-features = [
    "mysql",
    "macros",
    "migrate",
]

[[test]]
name = "postgres"
path = "tests/postgres/postgres.rs"
required-features = ["postgres"]

[[test]]
name = "postgres-types"
path = "tests/postgres/types.rs"
required-features = ["postgres"]

[[test]]
name = "postgres-describe"
path = "tests/postgres/describe.rs"
required-features = ["postgres"]

[[test]]
name = "postgres-macros"
path = "tests/postgres/macros.rs"
required-features = [
    "postgres",
    "macros",
]

[[test]]
name = "postgres-derives"
path = "tests/postgres/derives.rs"
required-features = [
    "postgres",
    "macros",
]

[[test]]
name = "postgres-error"
path = "tests/postgres/error.rs"
required-features = ["postgres"]

[[test]]
name = "postgres-test-attr"
path = "tests/postgres/test-attr.rs"
required-features = [
    "postgres",
    "macros",
    "migrate",
]

[[test]]
name = "postgres-migrate"
path = "tests/postgres/migrate.rs"
required-features = [
    "postgres",
    "macros",
    "migrate",
]

[[bench]]
name = "sqlite-describe"
path = "benches/sqlite/describe.rs"
harness = false
required-features = ["sqlite"]

[dependencies.sqlx-core]
version = "=0.7.3"
features = [
    "offline",
    "migrate",
]

[dependencies.sqlx-macros]
version = "=0.7.3"
optional = true

[dependencies.sqlx-mysql]
version = "=0.7.3"
optional = true

[dependencies.sqlx-postgres]
version = "=0.7.3"
optional = true

[dependencies.sqlx-sqlite]
version = "=0.7.3"
optional = true

[dev-dependencies.anyhow]
version = "1.0.52"

[dev-dependencies.async-std]
version = "1.12.0"
features = ["attributes"]

[dev-dependencies.criterion]
version = "0.4"
features = ["async_tokio"]

[dev-dependencies.dotenvy]
version = "0.15.0"

[dev-dependencies.env_logger]
version = "0.9.0"

[dev-dependencies.futures]
version = "0.3.19"

[dev-dependencies.hex]
version = "0.4.3"

[dev-dependencies.libsqlite3-sys]
version = "0.27"
features = ["bundled-sqlcipher"]

[dev-dependencies.paste]
version = "1.0.6"

[dev-dependencies.rand]
version = "0.8.4"

[dev-dependencies.rand_xoshiro]
version = "0.6.0"

[dev-dependencies.serde]
version = "1.0.132"
features = ["derive"]

[dev-dependencies.serde_json]
version = "1.0.73"

[dev-dependencies.tempdir]
version = "0.3.7"

[dev-dependencies.time_]
version = "0.3.2"
package = "time"

[dev-dependencies.tokio]
version = "1.15.0"
features = ["full"]

[dev-dependencies.trybuild]
version = "1.0.53"

[dev-dependencies.url]
version = "2.2.2"

[features]
_rt-async-std = []
_rt-tokio = []
_unstable-all-types = [
    "bigdecimal",
    "rust_decimal",
    "json",
    "time",
    "chrono",
    "ipnetwork",
    "mac_address",
    "uuid",
    "bit-vec",
]
all-databases = [
    "mysql",
    "sqlite",
    "postgres",
    "any",
]
any = [
    "sqlx-core/any",
    "sqlx-mysql?/any",
    "sqlx-postgres?/any",
    "sqlx-sqlite?/any",
]
bigdecimal = [
    "sqlx-core/bigdecimal",
    "sqlx-macros?/bigdecimal",
    "sqlx-mysql?/bigdecimal",
    "sqlx-postgres?/bigdecimal",
]
bit-vec = [
    "sqlx-core/bit-vec",
    "sqlx-macros?/bit-vec",
    "sqlx-postgres?/bit-vec",
]
chrono = [
    "sqlx-core/chrono",
    "sqlx-macros?/chrono",
    "sqlx-mysql?/chrono",
    "sqlx-postgres?/chrono",
    "sqlx-sqlite?/chrono",
]
default = [
    "any",
    "macros",
    "migrate",
    "json",
]
ipnetwork = [
    "sqlx-core/ipnetwork",
    "sqlx-macros?/ipnetwork",
    "sqlx-postgres?/ipnetwork",
]
json = [
    "sqlx-macros?/json",
    "sqlx-mysql?/json",
    "sqlx-postgres?/json",
    "sqlx-sqlite?/json",
]
mac_address = [
    "sqlx-core/mac_address",
    "sqlx-macros?/mac_address",
    "sqlx-postgres?/mac_address",
]
macros = ["sqlx-macros"]
migrate = [
    "sqlx-core/migrate",
    "sqlx-macros?/migrate",
    "sqlx-mysql?/migrate",
    "sqlx-postgres?/migrate",
    "sqlx-sqlite?/migrate",
]
mysql = [
    "sqlx-mysql",
    "sqlx-macros?/mysql",
]
postgres = [
    "sqlx-postgres",
    "sqlx-macros?/postgres",
]
regexp = ["sqlx-sqlite?/regexp"]
runtime-async-std = [
    "_rt-async-std",
    "sqlx-core/_rt-async-std",
    "sqlx-macros?/_rt-async-std",
]
runtime-async-std-native-tls = [
    "runtime-async-std",
    "tls-native-tls",
]
runtime-async-std-rustls = [
    "runtime-async-std",
    "tls-rustls",
]
runtime-tokio = [
    "_rt-tokio",
    "sqlx-core/_rt-tokio",
    "sqlx-macros?/_rt-tokio",
]
runtime-tokio-native-tls = [
    "runtime-tokio",
    "tls-native-tls",
]
runtime-tokio-rustls = [
    "runtime-tokio",
    "tls-rustls",
]
rust_decimal = [
    "sqlx-core/rust_decimal",
    "sqlx-macros?/rust_decimal",
    "sqlx-mysql?/rust_decimal",
    "sqlx-postgres?/rust_decimal",
]
sqlite = [
    "sqlx-sqlite",
    "sqlx-macros?/sqlite",
]
time = [
    "sqlx-core/time",
    "sqlx-macros?/time",
    "sqlx-mysql?/time",
    "sqlx-postgres?/time",
    "sqlx-sqlite?/time",
]
tls-native-tls = [
    "sqlx-core/_tls-native-tls",
    "sqlx-macros?/_tls-native-tls",
]
tls-none = []
tls-rustls = [
    "sqlx-core/_tls-rustls",
    "sqlx-macros?/_tls-rustls",
]
uuid = [
    "sqlx-core/uuid",
    "sqlx-macros?/uuid",
    "sqlx-mysql?/uuid",
    "sqlx-postgres?/uuid",
    "sqlx-sqlite?/uuid",
]
